/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/(about)/contact/page"],{

/***/ "(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/chunk-FMS366MP.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@dotlottie/react-player/dist/chunk-FMS366MP.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ Oa; },\n/* harmony export */   b: function() { return /* binding */ Va; },\n/* harmony export */   c: function() { return /* binding */ La; },\n/* harmony export */   d: function() { return /* binding */ Ra; },\n/* harmony export */   e: function() { return /* binding */ Ai; },\n/* harmony export */   f: function() { return /* binding */ tc; },\n/* harmony export */   g: function() { return /* binding */ Jf; },\n/* harmony export */   h: function() { return /* binding */ Yf; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/buffer/index.js\")[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\nfunction vt(t,e=\"dotLottie-common\"){return new Error(`[${e}]: ${t}`)}function Se(t,e=\"dotLottie-common\",...r){console.error(`[${e}]:`,t,...r);}function Dr(t,e=\"dotLottie-common\",...r){console.warn(`[${e}]:`,t,...r);}function Fr(t=\"\"){let e=t.trim(),r=e.lastIndexOf(\"/\"),i=e.substring(r+1),s=i.indexOf(\".\");return s!==-1?i.substring(0,s):i}function me(t){return [\"v\",\"ip\",\"op\",\"layers\",\"fr\",\"w\",\"h\"].every(e=>Object.prototype.hasOwnProperty.call(t,e))}function Ir(t){try{let e=JSON.parse(t);return me(e)}catch{return !1}}var qi={},qn=function(t,e,r,i,s){var a=new Worker(qi[e]||(qi[e]=URL.createObjectURL(new Blob([t+';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'],{type:\"text/javascript\"}))));return a.onmessage=function(n){var o=n.data,l=o.$e$;if(l){var h=new Error(l[0]);h.code=l[1],h.stack=l[2],s(h,null);}else s(null,o);},a.postMessage(r,i),a},Ot=Uint8Array,ne=Uint16Array,zr=Uint32Array,Nr=new Ot([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Gr=new Ot([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Zi=new Ot([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Qi=function(t,e){for(var r=new ne(31),i=0;i<31;++i)r[i]=e+=1<<t[i-1];for(var s=new zr(r[30]),i=1;i<30;++i)for(var a=r[i];a<r[i+1];++a)s[a]=a-r[i]<<5|i;return [r,s]},ts=Qi(Nr,2),jr=ts[0],$n=ts[1];jr[28]=258,$n[258]=28;var Wn=Qi(Gr,0),es=Wn[0],rr=new ne(32768);for(gt=0;gt<32768;++gt)re=(gt&43690)>>>1|(gt&21845)<<1,re=(re&52428)>>>2|(re&13107)<<2,re=(re&61680)>>>4|(re&3855)<<4,rr[gt]=((re&65280)>>>8|(re&255)<<8)>>>1;var re,gt,we=function(t,e,r){for(var i=t.length,s=0,a=new ne(e);s<i;++s)t[s]&&++a[t[s]-1];var n=new ne(e);for(s=0;s<e;++s)n[s]=n[s-1]+a[s-1]<<1;var o;if(r){o=new ne(1<<e);var l=15-e;for(s=0;s<i;++s)if(t[s])for(var h=s<<4|t[s],u=e-t[s],f=n[t[s]-1]++<<u,m=f|(1<<u)-1;f<=m;++f)o[rr[f]>>>l]=h;}else for(o=new ne(i),s=0;s<i;++s)t[s]&&(o[s]=rr[n[t[s]-1]++]>>>15-t[s]);return o},Me=new Ot(288);for(gt=0;gt<144;++gt)Me[gt]=8;var gt;for(gt=144;gt<256;++gt)Me[gt]=9;var gt;for(gt=256;gt<280;++gt)Me[gt]=7;var gt;for(gt=280;gt<288;++gt)Me[gt]=8;var gt,rs=new Ot(32);for(gt=0;gt<32;++gt)rs[gt]=5;var gt,is=we(Me,9,1),ss=we(rs,5,1),Qe=function(t){for(var e=t[0],r=1;r<t.length;++r)t[r]>e&&(e=t[r]);return e},$t=function(t,e,r){var i=e/8|0;return (t[i]|t[i+1]<<8)>>(e&7)&r},tr=function(t,e){var r=e/8|0;return (t[r]|t[r+1]<<8|t[r+2]<<16)>>(e&7)},as=function(t){return (t+7)/8|0},ir=function(t,e,r){(e==null||e<0)&&(e=0),(r==null||r>t.length)&&(r=t.length);var i=new(t.BYTES_PER_ELEMENT==2?ne:t.BYTES_PER_ELEMENT==4?zr:Ot)(r-e);return i.set(t.subarray(e,r)),i},ns=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],Rt=function(t,e,r){var i=new Error(e||ns[t]);if(i.code=t,Error.captureStackTrace&&Error.captureStackTrace(i,Rt),!r)throw i;return i},os=function(t,e,r){var i=t.length;if(!i||r&&r.f&&!r.l)return e||new Ot(0);var s=!e||r,a=!r||r.i;r||(r={}),e||(e=new Ot(i*3));var n=function(Q){var rt=e.length;if(Q>rt){var st=new Ot(Math.max(rt*2,Q));st.set(e),e=st;}},o=r.f||0,l=r.p||0,h=r.b||0,u=r.l,f=r.d,m=r.m,d=r.n,p=i*8;do{if(!u){o=$t(t,l,1);var c=$t(t,l+1,3);if(l+=3,c)if(c==1)u=is,f=ss,m=9,d=5;else if(c==2){var v=$t(t,l,31)+257,y=$t(t,l+10,15)+4,g=v+$t(t,l+5,31)+1;l+=14;for(var b=new Ot(g),x=new Ot(19),S=0;S<y;++S)x[Zi[S]]=$t(t,l+S*3,7);l+=y*3;for(var C=Qe(x),_=(1<<C)-1,T=we(x,C,1),S=0;S<g;){var L=T[$t(t,l,_)];l+=L&15;var G=L>>>4;if(G<16)b[S++]=G;else {var R=0,j=0;for(G==16?(j=3+$t(t,l,3),l+=2,R=b[S-1]):G==17?(j=3+$t(t,l,7),l+=3):G==18&&(j=11+$t(t,l,127),l+=7);j--;)b[S++]=R;}}var $=b.subarray(0,v),F=b.subarray(v);m=Qe($),d=Qe(F),u=we($,m,1),f=we(F,d,1);}else Rt(1);else {var G=as(l)+4,W=t[G-4]|t[G-3]<<8,A=G+W;if(A>i){a&&Rt(0);break}s&&n(h+W),e.set(t.subarray(G,A),h),r.b=h+=W,r.p=l=A*8,r.f=o;continue}if(l>p){a&&Rt(0);break}}s&&n(h+131072);for(var M=(1<<m)-1,P=(1<<d)-1,E=l;;E=l){var R=u[tr(t,l)&M],O=R>>>4;if(l+=R&15,l>p){a&&Rt(0);break}if(R||Rt(2),O<256)e[h++]=O;else if(O==256){E=l,u=null;break}else {var I=O-254;if(O>264){var S=O-257,Z=Nr[S];I=$t(t,l,(1<<Z)-1)+jr[S],l+=Z;}var K=f[tr(t,l)&P],q=K>>>4;K||Rt(3),l+=K&15;var F=es[q];if(q>3){var Z=Gr[q];F+=tr(t,l)&(1<<Z)-1,l+=Z;}if(l>p){a&&Rt(0);break}s&&n(h+131072);for(var H=h+I;h<H;h+=4)e[h]=e[h-F],e[h+1]=e[h+1-F],e[h+2]=e[h+2-F],e[h+3]=e[h+3-F];h=H;}}r.l=u,r.p=E,r.b=h,r.f=o,u&&(o=1,r.m=m,r.d=f,r.n=d);}while(!o);return h==e.length?e:ir(e,0,h)},Un=new Ot(0),Jn=function(t,e){var r={};for(var i in t)r[i]=t[i];for(var i in e)r[i]=e[i];return r},$i=function(t,e,r){for(var i=t(),s=t.toString(),a=s.slice(s.indexOf(\"[\")+1,s.lastIndexOf(\"]\")).replace(/\\s+/g,\"\").split(\",\"),n=0;n<i.length;++n){var o=i[n],l=a[n];if(typeof o==\"function\"){e+=\";\"+l+\"=\";var h=o.toString();if(o.prototype)if(h.indexOf(\"[native code]\")!=-1){var u=h.indexOf(\" \",8)+1;e+=h.slice(u,h.indexOf(\"(\",u));}else {e+=h;for(var f in o.prototype)e+=\";\"+l+\".prototype.\"+f+\"=\"+o.prototype[f].toString();}else e+=h;}else r[l]=o;}return [e,r]},Ze=[],Yn=function(t){var e=[];for(var r in t)t[r].buffer&&e.push((t[r]=new t[r].constructor(t[r])).buffer);return e},Kn=function(t,e,r,i){var s;if(!Ze[r]){for(var a=\"\",n={},o=t.length-1,l=0;l<o;++l)s=$i(t[l],a,n),a=s[0],n=s[1];Ze[r]=$i(t[o],a,n);}var h=Jn({},Ze[r][1]);return qn(Ze[r][0]+\";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=\"+e.toString()+\"}\",r,h,Yn(h),i)},Xn=function(){return [Ot,ne,zr,Nr,Gr,Zi,jr,es,is,ss,rr,ns,we,Qe,$t,tr,as,ir,Rt,os,Hr,ls,hs]},ls=function(t){return postMessage(t,[t.buffer])},hs=function(t){return t&&t.size&&new Ot(t.size)},Zn=function(t,e,r,i,s,a){var n=Kn(r,i,s,function(o,l){n.terminate(),a(o,l);});return n.postMessage([t,e],e.consume?[t.buffer]:[]),function(){n.terminate();}},Zt=function(t,e){return t[e]|t[e+1]<<8},Kt=function(t,e){return (t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0},Or=function(t,e){return Kt(t,e)+Kt(t,e+4)*4294967296};function Qn(t,e,r){return r||(r=e,e={}),typeof r!=\"function\"&&Rt(7),Zn(t,e,[Xn],function(i){return ls(Hr(i.data[0],hs(i.data[1])))},1,r)}function Hr(t,e){return os(t,e)}var Lr=typeof TextDecoder<\"u\"&&new TextDecoder,to=0;try{Lr.decode(Un,{stream:!0}),to=1;}catch{}var eo=function(t){for(var e=\"\",r=0;;){var i=t[r++],s=(i>127)+(i>223)+(i>239);if(r+s>t.length)return [e,ir(t,r-1)];s?s==3?(i=((i&15)<<18|(t[r++]&63)<<12|(t[r++]&63)<<6|t[r++]&63)-65536,e+=String.fromCharCode(55296|i>>10,56320|i&1023)):s&1?e+=String.fromCharCode((i&31)<<6|t[r++]&63):e+=String.fromCharCode((i&15)<<12|(t[r++]&63)<<6|t[r++]&63):e+=String.fromCharCode(i);}};function sr(t,e){if(e){for(var r=\"\",i=0;i<t.length;i+=16384)r+=String.fromCharCode.apply(null,t.subarray(i,i+16384));return r}else {if(Lr)return Lr.decode(t);var s=eo(t),a=s[0],n=s[1];return n.length&&Rt(8),a}}var ro=function(t,e){return e+30+Zt(t,e+26)+Zt(t,e+28)},io=function(t,e,r){var i=Zt(t,e+28),s=sr(t.subarray(e+46,e+46+i),!(Zt(t,e+8)&2048)),a=e+46+i,n=Kt(t,e+20),o=r&&n==4294967295?so(t,a):[n,Kt(t,e+24),Kt(t,e+42)],l=o[0],h=o[1],u=o[2];return [Zt(t,e+10),l,h,s,a+Zt(t,e+30)+Zt(t,e+32),u]},so=function(t,e){for(;Zt(t,e)!=1;e+=4+Zt(t,e+2));return [Or(t,e+12),Or(t,e+4),Or(t,e+20)]},Wi=typeof queueMicrotask==\"function\"?queueMicrotask:typeof setTimeout==\"function\"?setTimeout:function(t){t();};function ao(t,e,r){r||(r=e,e={}),typeof r!=\"function\"&&Rt(7);var i=[],s=function(){for(var v=0;v<i.length;++v)i[v]();},a={},n=function(v,y){Wi(function(){r(v,y);});};Wi(function(){n=r;});for(var o=t.length-22;Kt(t,o)!=101010256;--o)if(!o||t.length-o>65558)return n(Rt(13,0,1),null),s;var l=Zt(t,o+8);if(l){var h=l,u=Kt(t,o+16),f=u==4294967295||h==65535;if(f){var m=Kt(t,o-12);f=Kt(t,m)==101075792,f&&(h=l=Kt(t,m+32),u=Kt(t,m+48));}for(var d=e&&e.filter,p=function(v){var y=io(t,u,f),g=y[0],b=y[1],x=y[2],S=y[3],C=y[4],_=y[5],T=ro(t,_);u=C;var L=function(R,j){R?(s(),n(R,null)):(j&&(a[S]=j),--l||n(null,a));};if(!d||d({name:S,size:b,originalSize:x,compression:g}))if(!g)L(null,ir(t,T,T+b));else if(g==8){var G=t.subarray(T,T+b);if(b<32e4)try{L(null,Hr(G,new Ot(x)));}catch(R){L(R,null);}else i.push(Qn(G,{size:x},L));}else L(Rt(14,\"unknown compression type \"+g,1),null);else L(null,null);},c=0;c<h;++c)p(c);}else n(null,{});return s}function no(t){return t.issues.reduce((e,r)=>{if(r.path){let i=r.path.map(({key:s})=>s).join(\".\");e.nested[i]=[...e.nested[i]||[],r.message];}else e.root=[...e.root||[],r.message];return e},{nested:{}})}var jt=class extends Error{issues;constructor(t){super(t[0].message),this.name=\"ValiError\",this.issues=t;}};function ye(t,e,r){let i=t,s=[];if(e.forEach(a=>{try{i=a(i,r);}catch(n){if(r.abortEarly||r.abortPipeEarly)throw n;s.push(...n.issues);}}),s.length)throw new jt(s);return i}function qr(t,e){return [...t?.path||[],e]}function de(t,e){let[r,i=[]]=!t||typeof t==\"string\"?[t,e]:[void 0,t];return {error:r,pipe:i}}function oo(t=[]){return {schema:\"any\",async:!1,parse(e,r){return ye(e,t,{...r,reason:\"any\"})}}}function Rr(t,e,r){let{error:i,pipe:s}=de(e,r);return {schema:\"array\",array:{item:t},async:!1,parse(a,n){if(!Array.isArray(a))throw new jt([{reason:\"type\",validation:\"array\",origin:\"value\",message:i||\"Invalid type\",input:a,...n}]);let o=[],l=[];if(a.forEach((h,u)=>{try{o.push(t.parse(h,{...n,path:qr(n,{schema:\"array\",input:a,key:u,value:h})}));}catch(f){if(n?.abortEarly)throw f;l.push(...f.issues);}}),l.length)throw new jt(l);return ye(o,s,{...n,reason:\"array\"})}}}function Vr(t,e){let{error:r,pipe:i}=de(t,e);return {schema:\"boolean\",async:!1,parse(s,a){if(typeof s!=\"boolean\")throw new jt([{reason:\"type\",validation:\"boolean\",origin:\"value\",message:r||\"Invalid type\",input:s,...a}]);return ye(s,i,{...a,reason:\"boolean\"})}}}function Ui(t,e){return {schema:\"literal\",literal:t,async:!1,parse(r,i){if(r!==t)throw new jt([{reason:\"type\",validation:\"literal\",origin:\"value\",message:e||\"Invalid type\",input:r,...i}]);return r}}}function lo(t,e){return {schema:\"native_enum\",nativeEnum:t,async:!1,parse(r,i){if(!Object.values(t).includes(r))throw new jt([{reason:\"type\",validation:\"native_enum\",origin:\"value\",message:e||\"Invalid type\",input:r,...i}]);return r}}}function er(t,e){let{error:r,pipe:i}=de(t,e);return {schema:\"number\",async:!1,parse(s,a){if(typeof s!=\"number\")throw new jt([{reason:\"type\",validation:\"number\",origin:\"value\",message:r||\"Invalid type\",input:s,...a}]);return ye(s,i,{...a,reason:\"number\"})}}}function $r(t,e,r){let{error:i,pipe:s}=de(e,r);return {schema:\"object\",object:t,async:!1,parse(a,n){if(!a||typeof a!=\"object\"||a.toString()!==\"[object Object]\")throw new jt([{reason:\"type\",validation:\"object\",origin:\"value\",message:i||\"Invalid type\",input:a,...n}]);let o={},l=[];if(Object.entries(t).forEach(([h,u])=>{try{let f=a[h];o[h]=u.parse(f,{...n,path:qr(n,{schema:\"object\",input:a,key:h,value:f})});}catch(f){if(n?.abortEarly)throw f;l.push(...f.issues);}}),l.length)throw new jt(l);return ye(o,s,{...n,reason:\"object\"})}}}function At(t){return {schema:\"optional\",wrapped:t,async:!1,parse(e,r){return e===void 0?e:t.parse(e,r)}}}function Gt(t,e){let{error:r,pipe:i}=de(t,e);return {schema:\"string\",async:!1,parse(s,a){if(typeof s!=\"string\")throw new jt([{reason:\"type\",validation:\"string\",origin:\"value\",message:r||\"Invalid type\",input:s,...a}]);return ye(s,i,{...a,reason:\"string\"})}}}function ho(t,e,r,i){let{key:s,value:a,error:n,pipe:o}=typeof e==\"object\"&&!Array.isArray(e)?{key:t,value:e,...de(r,i)}:{key:Gt(),value:t,...de(e,r)};return {schema:\"record\",record:{key:s,value:a},async:!1,parse(l,h){if(!l||typeof l!=\"object\"||l.toString()!==\"[object Object]\")throw new jt([{reason:\"type\",validation:\"record\",origin:\"value\",message:n||\"Invalid type\",input:l,...h}]);let u={},f=[];if(Object.entries(l).forEach(([m,d])=>{let p=qr(h,{schema:\"record\",input:l,key:m,value:d}),c;try{c=s.parse(m,{...h,origin:\"key\",path:p});}catch(y){if(h?.abortEarly)throw y;f.push(...y.issues);}let v;try{v=[a.parse(d,{...h,path:p})];}catch(y){if(h?.abortEarly)throw y;f.push(...y.issues);}c&&v&&(u[c]=v[0]);}),f.length)throw new jt(f);return ye(u,o,{...h,reason:\"record\"})}}}function Ji(t,e){return {schema:\"union\",union:t,async:!1,parse(r,i){let s,a=[];for(let n of t)try{s=[n.parse(r,i)];break}catch(o){a.push(...o.issues);}if(!s)throw new jt([{reason:\"type\",validation:\"union\",origin:\"value\",message:e||\"Invalid type\",input:r,issues:a,...i}]);return s[0]}}}function po(t,e,r){try{return {success:!0,data:t.parse(e,r)}}catch(i){return {success:!1,error:i}}}var fo=Object.create,Wr=Object.defineProperty,co=Object.getOwnPropertyDescriptor,ps=Object.getOwnPropertyNames,uo=Object.getPrototypeOf,mo=Object.prototype.hasOwnProperty,yo=(t,e,r)=>e in t?Wr(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,De=(t,e)=>function(){return e||(0, t[ps(t)[0]])((e={exports:{}}).exports,e),e.exports},go=(t,e,r,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of ps(e))!mo.call(t,s)&&s!==r&&Wr(t,s,{get:()=>e[s],enumerable:!(i=co(e,s))||i.enumerable});return t},vo=(t,e,r)=>(r=t!=null?fo(uo(t)):{},go(e||!t||!t.__esModule?Wr(r,\"default\",{value:t,enumerable:!0}):r,t)),bo=(t,e,r)=>(yo(t,typeof e!=\"symbol\"?e+\"\":e,r),r),xo=De({\"../../node_modules/.pnpm/@rgba-image+copy@0.1.3/node_modules/@rgba-image/copy/dist/index.js\"(t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.copy=void 0;var e=(r,i,s=0,a=0,n=r.width-s,o=r.height-a,l=0,h=0)=>{if(s=s|0,a=a|0,n=n|0,o=o|0,l=l|0,h=h|0,n<=0||o<=0)return;let u=new Uint32Array(r.data.buffer),f=new Uint32Array(i.data.buffer);for(let m=0;m<o;m++){let d=a+m;if(d<0||d>=r.height)continue;let p=h+m;if(!(p<0||p>=i.height))for(let c=0;c<n;c++){let v=s+c;if(v<0||v>=r.width)continue;let y=l+c;if(y<0||y>=i.width)continue;let g=d*r.width+v,b=p*i.width+y;f[b]=u[g];}}};t.copy=e;}}),So=De({\"../../node_modules/.pnpm/@rgba-image+create-image@0.1.1/node_modules/@rgba-image/create-image/dist/index.js\"(t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.CreateImageFactory=(e=[0,0,0,0],r=4)=>{if(r=Math.floor(r),isNaN(r)||r<1)throw TypeError(\"channels should be a positive non-zero number\");if(!(\"length\"in e)||e.length<r)throw TypeError(`fill should be iterable with at least ${r} members`);e=new Uint8ClampedArray(e).slice(0,r);let i=e.every(s=>s===0);return (s,a,n)=>{if(s===void 0||a===void 0)throw TypeError(\"Not enough arguments\");if(s=Math.floor(s),a=Math.floor(a),isNaN(s)||s<1||isNaN(a)||a<1)throw TypeError(\"Index or size is negative or greater than the allowed amount\");let o=s*a*r;if(n===void 0&&(n=new Uint8ClampedArray(o)),n instanceof Uint8ClampedArray){if(n.length!==o)throw TypeError(\"Index or size is negative or greater than the allowed amount\");if(!i)for(let l=0;l<a;l++)for(let h=0;h<s;h++){let u=(l*s+h)*r;for(let f=0;f<r;f++)n[u+f]=e[f];}return {get width(){return s},get height(){return a},get data(){return n}}}throw TypeError(\"Expected data to be Uint8ClampedArray or undefined\")}},t.createImage=t.CreateImageFactory();}}),wo=De({\"../../node_modules/.pnpm/@rgba-image+lanczos@0.1.1/node_modules/@rgba-image/lanczos/dist/filters.js\"(t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.filters=void 0;var e=14,r=(a,n)=>{if(a<=-n||a>=n||a==0)return 0;let o=a*Math.PI;return Math.sin(o)/o*Math.sin(o/n)/(o/n)},i=a=>Math.round(a*((1<<e)-1)),s=(a,n,o,l,h)=>{let u=h?2:3,f=1/o,m=Math.min(1,o),d=u/m,p=Math.floor((d+1)*2),c=new Int16Array((p+2)*n),v=0;for(let y=0;y<n;y++){let g=(y+.5)*f+l,b=Math.max(0,Math.floor(g-d)),x=Math.min(a-1,Math.ceil(g+d)),S=x-b+1,C=new Float32Array(S),_=new Int16Array(S),T=0,L=0;for(let W=b;W<=x;W++){let A=r((W+.5-g)*m,u);T+=A,C[L]=A,L++;}let G=0;for(let W=0;W<C.length;W++){let A=C[W]/T;G+=A,_[W]=i(A);}_[n>>1]+=i(1-G);let R=0;for(;R<_.length&&_[R]===0;)R++;let j=_.length-1;for(;j>0&&_[j]===0;)j--;let $=b+R,F=j-R+1;c[v++]=$,c[v++]=F,c.set(_.subarray(R,j+1),v),v+=F;}return c};t.filters=s;}}),ko=De({\"../../node_modules/.pnpm/@rgba-image+lanczos@0.1.1/node_modules/@rgba-image/lanczos/dist/convolve.js\"(t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.convolve=void 0;var e=14,r=(i,s,a,n,o,l)=>{let h=0,u=0;for(let f=0;f<n;f++){let m=0;for(let d=0;d<o;d++){let p=l[m++],c=h+p*4|0,v=0,y=0,g=0,b=0;for(let x=l[m++];x>0;x--){let S=l[m++];v=v+S*i[c]|0,y=y+S*i[c+1]|0,g=g+S*i[c+2]|0,b=b+S*i[c+3]|0,c=c+4|0;}s[u]=v+8192>>e,s[u+1]=y+8192>>e,s[u+2]=g+8192>>e,s[u+3]=b+8192>>e,u=u+n*4|0;}u=(f+1)*4|0,h=(f+1)*a*4|0;}};t.convolve=r;}}),Po=De({\"../../node_modules/.pnpm/@rgba-image+lanczos@0.1.1/node_modules/@rgba-image/lanczos/dist/index.js\"(t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.lanczos2=t.lanczos=void 0;var e=xo(),r=So(),i=wo(),s=ko(),a=(l,h,u=!1)=>{let f=h.width/l.width,m=h.height/l.height,d=i.filters(l.width,h.width,f,0,u),p=i.filters(l.height,h.height,m,0,u),c=new Uint8ClampedArray(h.width*l.height*4);s.convolve(l.data,c,l.width,l.height,h.width,d),s.convolve(c,h.data,l.height,h.width,h.height,p);},n=(l,h,u=0,f=0,m=l.width-u,d=l.height-f,p=0,c=0,v=h.width-p,y=h.height-c)=>{if(u=u|0,f=f|0,m=m|0,d=d|0,p=p|0,c=c|0,v=v|0,y=y|0,m<=0||d<=0||v<=0||y<=0)return;if(u===0&&f===0&&m===l.width&&d===l.height&&p===0&&c===0&&v===h.width&&y===h.height){a(l,h);return}let g=r.createImage(m,d),b=r.createImage(v,y);e.copy(l,g,u,f),a(g,b),e.copy(b,h,0,0,b.width,b.height,p,c);};t.lanczos=n;var o=(l,h,u=0,f=0,m=l.width-u,d=l.height-f,p=0,c=0,v=h.width-p,y=h.height-c)=>{if(u=u|0,f=f|0,m=m|0,d=d|0,p=p|0,c=c|0,v=v|0,y=y|0,m<=0||d<=0||v<=0||y<=0)return;if(u===0&&f===0&&m===l.width&&d===l.height&&p===0&&c===0&&v===h.width&&y===h.height){a(l,h,!0);return}let g=r.createImage(m,d),b=r.createImage(v,y);e.copy(l,g,u,f),a(g,b,!0),e.copy(b,h,0,0,b.width,b.height,p,c);};t.lanczos2=o;}}),fs=(t=>(t.Bounce=\"bounce\",t.Normal=\"normal\",t))(fs||{}),Co=lo(fs),_o=$r({autoplay:At(Vr()),defaultTheme:At(Gt()),direction:At(Ji([Ui(1),Ui(-1)])),hover:At(Vr()),id:Gt(),intermission:At(er()),loop:At(Ji([Vr(),er()])),playMode:At(Co),speed:At(er()),themeColor:At(Gt())}),Eo=$r({animations:Rr(Gt()),id:Gt()}),Ao=$r({activeAnimationId:At(Gt()),animations:Rr(_o),author:At(Gt()),custom:At(ho(Gt(),oo())),description:At(Gt()),generator:At(Gt()),keywords:At(Gt()),revision:At(er()),themes:At(Rr(Eo)),version:At(Gt())}),To={jpeg:\"image/jpeg\",png:\"image/png\",gif:\"image/gif\",bmp:\"image/bmp\",svg:\"image/svg+xml\",webp:\"image/webp\"},Yi={jpeg:[255,216,255],png:[137,80,78,71,13,10,26,10],gif:[71,73,70],bmp:[66,77],webp:[82,73,70,70,87,69,66,80],svg:[60,63,120]},Mo=t=>{let e=null,r=[];if(!t)return null;let i=t.substring(t.indexOf(\",\")+1);typeof window>\"u\"?e=Buffer.from(i,\"base64\").toString(\"binary\"):e=atob(i);let s=new Uint8Array(e.length);for(let a=0;a<e.length;a+=1)s[a]=e.charCodeAt(a);r=Array.from(s.subarray(0,8));for(let a in Yi){let n=Yi[a];if(n&&r.every((o,l)=>o===n[l]))return To[a]}return null},Ur=class extends Error{constructor(t,e){super(t),bo(this,\"code\"),this.name=\"[dotlottie-js]\",this.code=e;}};function Do(t){let e;if(typeof window>\"u\")e=Buffer.from(t).toString(\"base64\");else {let r=Array.prototype.map.call(t,i=>String.fromCharCode(i)).join(\"\");e=window.btoa(r);}return `data:${Mo(e)};base64,${e}`}function Ki(t){return \"w\"in t&&\"h\"in t&&!(\"xt\"in t)&&\"p\"in t}async function Jr(t,e=()=>!0){if(!(t instanceof Uint8Array))throw new Ur(\"DotLottie not found\",\"INVALID_DOTLOTTIE\");return await new Promise((r,i)=>{ao(t,{filter:e},(s,a)=>{s&&i(s),r(a);});})}async function cs(t,e,r){if(!(t instanceof Uint8Array))throw new Ur(\"DotLottie not found\",\"INVALID_DOTLOTTIE\");return (await Jr(t,i=>i.name===e&&(!r||r(i))))[e]}async function Br(t){let e=\"manifest.json\",r=(await Jr(t,i=>i.name===e))[e];if(!(typeof r>\"u\"))return JSON.parse(sr(r,!1))}async function Fo(t){if(!(t instanceof Uint8Array))return {success:!1,error:\"DotLottie not found\"};let e=await Br(t);if(typeof e>\"u\")return {success:!1,error:\"Invalid .lottie file, manifest.json is missing\"};let r=po(Ao,e);return r.success?{success:!0}:{success:!1,error:`Invalid .lottie file, manifest.json structure is invalid, ${JSON.stringify(no(r.error).nested,null,2)}`}}async function Xi(t){let e=new Uint8Array(t),r=await Fo(e);if(r.error)throw new Ur(r.error,\"INVALID_DOTLOTTIE\");return e}async function Io(t,e){let r=await Jr(t,s=>{let a=s.name.replace(\"images/\",\"\");return s.name.startsWith(\"images/\")&&(!e||e({...s,name:a}))}),i={};for(let s in r){let a=r[s];if(a instanceof Uint8Array){let n=s.replace(\"images/\",\"\");i[n]=Do(a);}}return i}async function Oo(t,e){let r=new Map;for(let[s,a]of Object.entries(e))for(let n of a.assets||[])if(Ki(n)){let o=n.p;r.has(o)||r.set(o,new Set),r.get(o)?.add(s);}let i=await Io(t,s=>r.has(s.name));for(let[s,a]of r){let n=i[s];if(n)for(let o of a){let l=e[o];for(let h of l?.assets||[])Ki(h)&&h.p===s&&(h.p=n,h.u=\"\",h.e=1);}}}async function Vo(t,e,{inlineAssets:r}={},i){let s=`animations/${e}.json`,a=await cs(t,s,i);if(typeof a>\"u\")return;let n=JSON.parse(sr(a,!1));if(!r)return n;let o={[e]:n};return await Oo(t,o),n}async function Lo(t,e,r){let i=`themes/${e}.lss`,s=await cs(t,i,r);if(!(typeof s>\"u\"))return sr(s,!1)}vo(Po());var us=class{_dotLottie;_animationsMap=new Map;_themeMap=new Map;_manifest;get dotLottie(){return this._dotLottie}get animationsMap(){return this._animationsMap}get themeMap(){return this._themeMap}get manifest(){return this._manifest}async loadFromUrl(t){let e=await fetch(t,{method:\"GET\",mode:\"cors\"});if(!e.ok)throw new Error(`Failed to load dotLottie from ${t} with status ${e.status}`);if(e.headers.get(\"content-type\")===\"application/json\"){let r=await e.json();if(!me(r))throw new Error(`Invalid lottie JSON at ${t}`);let i=Fr(t);this._animationsMap.set(i,r);let s={activeAnimationId:i,animations:[{id:i}]};this._manifest=s;}else {this._dotLottie=await Xi(await e.arrayBuffer());let r=await Br(this._dotLottie);if(!r)throw new Error(\"Manifest not found\");this._manifest=r;}}loadFromLottieJSON(t){if(!me(t))throw new Error(\"Invalid lottie JSON\");let e=\"my-animation\";this._animationsMap.set(e,t);let r={activeAnimationId:e,animations:[{id:e}]};this._manifest=r;}async loadFromArrayBuffer(t){this._dotLottie=await Xi(t);let e=await Br(this._dotLottie);if(!e)throw new Error(\"Manifest not found\");this._manifest=e;}async getAnimation(t){if(this._animationsMap.get(t))return this._animationsMap.get(t);if(!this._dotLottie)return;let e=await Vo(this._dotLottie,t,{inlineAssets:!0});return e&&this._animationsMap.set(t,e),e}async getTheme(t){if(this._themeMap.get(t))return this._themeMap.get(t);if(!this._dotLottie)return;let e=await Lo(this._dotLottie,t);return e&&this._themeMap.set(t,e),e}};function nr(){throw new Error(\"Cycle detected\")}function Kr(){if(ke>1)ke--;else {for(var t,e=!1;Fe!==void 0;){var r=Fe;for(Fe=void 0,Yr++;r!==void 0;){var i=r.o;if(r.o=void 0,r.f&=-3,!(8&r.f)&&ds(r))try{r.c();}catch(s){e||(t=s,e=!0);}r=i;}}if(Yr=0,ke--,e)throw t}}var _t=void 0,Fe=void 0,ke=0,Yr=0,ar=0;function ms(t){if(_t!==void 0){var e=t.n;if(e===void 0||e.t!==_t)return e={i:0,S:t,p:_t.s,n:void 0,t:_t,e:void 0,x:void 0,r:e},_t.s!==void 0&&(_t.s.n=e),_t.s=e,t.n=e,32&_t.f&&t.S(e),e;if(e.i===-1)return e.i=0,e.n!==void 0&&(e.n.p=e.p,e.p!==void 0&&(e.p.n=e.n),e.p=_t.s,e.n=void 0,_t.s.n=e,_t.s=e),e}}function Bt(t){this.v=t,this.i=0,this.n=void 0,this.t=void 0;}Bt.prototype.h=function(){return !0};Bt.prototype.S=function(t){this.t!==t&&t.e===void 0&&(t.x=this.t,this.t!==void 0&&(this.t.e=t),this.t=t);};Bt.prototype.U=function(t){if(this.t!==void 0){var e=t.e,r=t.x;e!==void 0&&(e.x=r,t.e=void 0),r!==void 0&&(r.e=e,t.x=void 0),t===this.t&&(this.t=r);}};Bt.prototype.subscribe=function(t){var e=this;return zo(function(){var r=e.value,i=32&this.f;this.f&=-33;try{t(r);}finally{this.f|=i;}})};Bt.prototype.valueOf=function(){return this.value};Bt.prototype.toString=function(){return this.value+\"\"};Bt.prototype.toJSON=function(){return this.value};Bt.prototype.peek=function(){return this.v};Object.defineProperty(Bt.prototype,\"value\",{get:function(){var t=ms(this);return t!==void 0&&(t.i=this.i),this.v},set:function(t){if(_t instanceof ge&&function(){throw new Error(\"Computed cannot have side-effects\")}(),t!==this.v){Yr>100&&nr(),this.v=t,this.i++,ar++,ke++;try{for(var e=this.t;e!==void 0;e=e.x)e.t.N();}finally{Kr();}}}});function Ro(t){return new Bt(t)}function ds(t){for(var e=t.s;e!==void 0;e=e.n)if(e.S.i!==e.i||!e.S.h()||e.S.i!==e.i)return !0;return !1}function ys(t){for(var e=t.s;e!==void 0;e=e.n){var r=e.S.n;if(r!==void 0&&(e.r=r),e.S.n=e,e.i=-1,e.n===void 0){t.s=e;break}}}function gs(t){for(var e=t.s,r=void 0;e!==void 0;){var i=e.p;e.i===-1?(e.S.U(e),i!==void 0&&(i.n=e.n),e.n!==void 0&&(e.n.p=i)):r=e,e.S.n=e.r,e.r!==void 0&&(e.r=void 0),e=i;}t.s=r;}function ge(t){Bt.call(this,void 0),this.x=t,this.s=void 0,this.g=ar-1,this.f=4;}(ge.prototype=new Bt).h=function(){if(this.f&=-3,1&this.f)return !1;if((36&this.f)==32||(this.f&=-5,this.g===ar))return !0;if(this.g=ar,this.f|=1,this.i>0&&!ds(this))return this.f&=-2,!0;var t=_t;try{ys(this),_t=this;var e=this.x();(16&this.f||this.v!==e||this.i===0)&&(this.v=e,this.f&=-17,this.i++);}catch(r){this.v=r,this.f|=16,this.i++;}return _t=t,gs(this),this.f&=-2,!0};ge.prototype.S=function(t){if(this.t===void 0){this.f|=36;for(var e=this.s;e!==void 0;e=e.n)e.S.S(e);}Bt.prototype.S.call(this,t);};ge.prototype.U=function(t){if(this.t!==void 0&&(Bt.prototype.U.call(this,t),this.t===void 0)){this.f&=-33;for(var e=this.s;e!==void 0;e=e.n)e.S.U(e);}};ge.prototype.N=function(){if(!(2&this.f)){this.f|=6;for(var t=this.t;t!==void 0;t=t.x)t.t.N();}};ge.prototype.peek=function(){if(this.h()||nr(),16&this.f)throw this.v;return this.v};Object.defineProperty(ge.prototype,\"value\",{get:function(){1&this.f&&nr();var t=ms(this);if(this.h(),t!==void 0&&(t.i=this.i),16&this.f)throw this.v;return this.v}});function vs(t){var e=t.u;if(t.u=void 0,typeof e==\"function\"){ke++;var r=_t;_t=void 0;try{e();}catch(i){throw t.f&=-2,t.f|=8,Xr(t),i}finally{_t=r,Kr();}}}function Xr(t){for(var e=t.s;e!==void 0;e=e.n)e.S.U(e);t.x=void 0,t.s=void 0,vs(t);}function Bo(t){if(_t!==this)throw new Error(\"Out-of-order effect\");gs(this),_t=t,this.f&=-2,8&this.f&&Xr(this),Kr();}function Ie(t){this.x=t,this.u=void 0,this.s=void 0,this.o=void 0,this.f=32;}Ie.prototype.c=function(){var t=this.S();try{if(8&this.f||this.x===void 0)return;var e=this.x();typeof e==\"function\"&&(this.u=e);}finally{t();}};Ie.prototype.S=function(){1&this.f&&nr(),this.f|=1,this.f&=-9,vs(this),ys(this),ke++;var t=_t;return _t=this,Bo.bind(this,t)};Ie.prototype.N=function(){2&this.f||(this.f|=2,this.o=Fe,Fe=this);};Ie.prototype.d=function(){this.f|=8,1&this.f||Xr(this);};function zo(t){var e=new Ie(t);try{e.c();}catch(r){throw e.d(),r}return e.d.bind(e)}var bs=class{_state;_prevState;constructor(t){this._prevState=t,this._state=Ro(t);}setState(t){this._prevState=this._state.value,this._state.value=t;}subscribe(t){return this._state.subscribe(e=>t(e,this._prevState))}};var No=Object.create,xs=Object.defineProperty,Go=Object.getOwnPropertyDescriptor,jo=Object.getOwnPropertyNames,Ho=Object.getPrototypeOf,qo=Object.prototype.hasOwnProperty,et=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),$o=(t,e,r,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of jo(e))!qo.call(t,s)&&s!==r&&xs(t,s,{get:()=>e[s],enumerable:!(i=Go(e,s))||i.enumerable});return t},Xt=(t,e,r)=>(r=t!=null?No(Ho(t)):{},$o(e||!t||!t.__esModule?xs(r,\"default\",{value:t,enumerable:!0}):r,t));var Js=et((t,e)=>{var r=String,i=function(){return {isColorSupported:!1,reset:r,bold:r,dim:r,italic:r,underline:r,inverse:r,hidden:r,strikethrough:r,black:r,red:r,green:r,yellow:r,blue:r,magenta:r,cyan:r,white:r,gray:r,bgBlack:r,bgRed:r,bgGreen:r,bgYellow:r,bgBlue:r,bgMagenta:r,bgCyan:r,bgWhite:r}};e.exports=i(),e.exports.createColors=i;}),Ys=et(()=>{}),yi=et((t,e)=>{var r=Js(),i=Ys(),s=class extends Error{constructor(a,n,o,l,h,u){super(a),this.name=\"CssSyntaxError\",this.reason=a,h&&(this.file=h),l&&(this.source=l),u&&(this.plugin=u),typeof n<\"u\"&&typeof o<\"u\"&&(typeof n==\"number\"?(this.line=n,this.column=o):(this.line=n.line,this.column=n.column,this.endLine=o.line,this.endColumn=o.column)),this.setMessage(),Error.captureStackTrace&&Error.captureStackTrace(this,s);}setMessage(){this.message=this.plugin?this.plugin+\": \":\"\",this.message+=this.file?this.file:\"<css input>\",typeof this.line<\"u\"&&(this.message+=\":\"+this.line+\":\"+this.column),this.message+=\": \"+this.reason;}showSourceCode(a){if(!this.source)return \"\";let n=this.source;a==null&&(a=r.isColorSupported),i&&a&&(n=i(n));let o=n.split(/\\r?\\n/),l=Math.max(this.line-3,0),h=Math.min(this.line+2,o.length),u=String(h).length,f,m;if(a){let{bold:d,red:p,gray:c}=r.createColors(!0);f=v=>d(p(v)),m=v=>c(v);}else f=m=d=>d;return o.slice(l,h).map((d,p)=>{let c=l+1+p,v=\" \"+(\" \"+c).slice(-u)+\" | \";if(c===this.line){let y=m(v.replace(/\\d/g,\" \"))+d.slice(0,this.column-1).replace(/[^\\t]/g,\" \");return f(\">\")+m(v)+d+`\n `+y+f(\"^\")}return \" \"+m(v)+d}).join(`\n`)}toString(){let a=this.showSourceCode();return a&&(a=`\n\n`+a+`\n`),this.name+\": \"+this.message+a}};e.exports=s,s.default=s;}),gi=et((t,e)=>{e.exports.isClean=Symbol(\"isClean\"),e.exports.my=Symbol(\"my\");}),Ks=et((t,e)=>{var r={colon:\": \",indent:\"    \",beforeDecl:`\n`,beforeRule:`\n`,beforeOpen:\" \",beforeClose:`\n`,beforeComment:`\n`,after:`\n`,emptyBody:\"\",commentLeft:\" \",commentRight:\" \",semicolon:!1};function i(a){return a[0].toUpperCase()+a.slice(1)}var s=class{constructor(a){this.builder=a;}stringify(a,n){if(!this[a.type])throw new Error(\"Unknown AST node type \"+a.type+\". Maybe you need to change PostCSS stringifier.\");this[a.type](a,n);}document(a){this.body(a);}root(a){this.body(a),a.raws.after&&this.builder(a.raws.after);}comment(a){let n=this.raw(a,\"left\",\"commentLeft\"),o=this.raw(a,\"right\",\"commentRight\");this.builder(\"/*\"+n+a.text+o+\"*/\",a);}decl(a,n){let o=this.raw(a,\"between\",\"colon\"),l=a.prop+o+this.rawValue(a,\"value\");a.important&&(l+=a.raws.important||\" !important\"),n&&(l+=\";\"),this.builder(l,a);}rule(a){this.block(a,this.rawValue(a,\"selector\")),a.raws.ownSemicolon&&this.builder(a.raws.ownSemicolon,a,\"end\");}atrule(a,n){let o=\"@\"+a.name,l=a.params?this.rawValue(a,\"params\"):\"\";if(typeof a.raws.afterName<\"u\"?o+=a.raws.afterName:l&&(o+=\" \"),a.nodes)this.block(a,o+l);else {let h=(a.raws.between||\"\")+(n?\";\":\"\");this.builder(o+l+h,a);}}body(a){let n=a.nodes.length-1;for(;n>0&&a.nodes[n].type===\"comment\";)n-=1;let o=this.raw(a,\"semicolon\");for(let l=0;l<a.nodes.length;l++){let h=a.nodes[l],u=this.raw(h,\"before\");u&&this.builder(u),this.stringify(h,n!==l||o);}}block(a,n){let o=this.raw(a,\"between\",\"beforeOpen\");this.builder(n+o+\"{\",a,\"start\");let l;a.nodes&&a.nodes.length?(this.body(a),l=this.raw(a,\"after\")):l=this.raw(a,\"after\",\"emptyBody\"),l&&this.builder(l),this.builder(\"}\",a,\"end\");}raw(a,n,o){let l;if(o||(o=n),n&&(l=a.raws[n],typeof l<\"u\"))return l;let h=a.parent;if(o===\"before\"&&(!h||h.type===\"root\"&&h.first===a||h&&h.type===\"document\"))return \"\";if(!h)return r[o];let u=a.root();if(u.rawCache||(u.rawCache={}),typeof u.rawCache[o]<\"u\")return u.rawCache[o];if(o===\"before\"||o===\"after\")return this.beforeAfter(a,o);{let f=\"raw\"+i(o);this[f]?l=this[f](u,a):u.walk(m=>{if(l=m.raws[n],typeof l<\"u\")return !1});}return typeof l>\"u\"&&(l=r[o]),u.rawCache[o]=l,l}rawSemicolon(a){let n;return a.walk(o=>{if(o.nodes&&o.nodes.length&&o.last.type===\"decl\"&&(n=o.raws.semicolon,typeof n<\"u\"))return !1}),n}rawEmptyBody(a){let n;return a.walk(o=>{if(o.nodes&&o.nodes.length===0&&(n=o.raws.after,typeof n<\"u\"))return !1}),n}rawIndent(a){if(a.raws.indent)return a.raws.indent;let n;return a.walk(o=>{let l=o.parent;if(l&&l!==a&&l.parent&&l.parent===a&&typeof o.raws.before<\"u\"){let h=o.raws.before.split(`\n`);return n=h[h.length-1],n=n.replace(/\\S/g,\"\"),!1}}),n}rawBeforeComment(a,n){let o;return a.walkComments(l=>{if(typeof l.raws.before<\"u\")return o=l.raws.before,o.includes(`\n`)&&(o=o.replace(/[^\\n]+$/,\"\")),!1}),typeof o>\"u\"?o=this.raw(n,null,\"beforeDecl\"):o&&(o=o.replace(/\\S/g,\"\")),o}rawBeforeDecl(a,n){let o;return a.walkDecls(l=>{if(typeof l.raws.before<\"u\")return o=l.raws.before,o.includes(`\n`)&&(o=o.replace(/[^\\n]+$/,\"\")),!1}),typeof o>\"u\"?o=this.raw(n,null,\"beforeRule\"):o&&(o=o.replace(/\\S/g,\"\")),o}rawBeforeRule(a){let n;return a.walk(o=>{if(o.nodes&&(o.parent!==a||a.first!==o)&&typeof o.raws.before<\"u\")return n=o.raws.before,n.includes(`\n`)&&(n=n.replace(/[^\\n]+$/,\"\")),!1}),n&&(n=n.replace(/\\S/g,\"\")),n}rawBeforeClose(a){let n;return a.walk(o=>{if(o.nodes&&o.nodes.length>0&&typeof o.raws.after<\"u\")return n=o.raws.after,n.includes(`\n`)&&(n=n.replace(/[^\\n]+$/,\"\")),!1}),n&&(n=n.replace(/\\S/g,\"\")),n}rawBeforeOpen(a){let n;return a.walk(o=>{if(o.type!==\"decl\"&&(n=o.raws.between,typeof n<\"u\"))return !1}),n}rawColon(a){let n;return a.walkDecls(o=>{if(typeof o.raws.between<\"u\")return n=o.raws.between.replace(/[^\\s:]/g,\"\"),!1}),n}beforeAfter(a,n){let o;a.type===\"decl\"?o=this.raw(a,null,\"beforeDecl\"):a.type===\"comment\"?o=this.raw(a,null,\"beforeComment\"):n===\"before\"?o=this.raw(a,null,\"beforeRule\"):o=this.raw(a,null,\"beforeClose\");let l=a.parent,h=0;for(;l&&l.type!==\"root\";)h+=1,l=l.parent;if(o.includes(`\n`)){let u=this.raw(a,null,\"indent\");if(u.length)for(let f=0;f<h;f++)o+=u;}return o}rawValue(a,n){let o=a[n],l=a.raws[n];return l&&l.value===o?l.raw:o}};e.exports=s,s.default=s;}),fr=et((t,e)=>{var r=Ks();function i(s,a){new r(a).stringify(s);}e.exports=i,i.default=i;}),cr=et((t,e)=>{var{isClean:r,my:i}=gi(),s=yi(),a=Ks(),n=fr();function o(h,u){let f=new h.constructor;for(let m in h){if(!Object.prototype.hasOwnProperty.call(h,m)||m===\"proxyCache\")continue;let d=h[m],p=typeof d;m===\"parent\"&&p===\"object\"?u&&(f[m]=u):m===\"source\"?f[m]=d:Array.isArray(d)?f[m]=d.map(c=>o(c,f)):(p===\"object\"&&d!==null&&(d=o(d)),f[m]=d);}return f}var l=class{constructor(h={}){this.raws={},this[r]=!1,this[i]=!0;for(let u in h)if(u===\"nodes\"){this.nodes=[];for(let f of h[u])typeof f.clone==\"function\"?this.append(f.clone()):this.append(f);}else this[u]=h[u];}error(h,u={}){if(this.source){let{start:f,end:m}=this.rangeBy(u);return this.source.input.error(h,{line:f.line,column:f.column},{line:m.line,column:m.column},u)}return new s(h)}warn(h,u,f){let m={node:this};for(let d in f)m[d]=f[d];return h.warn(u,m)}remove(){return this.parent&&this.parent.removeChild(this),this.parent=void 0,this}toString(h=n){h.stringify&&(h=h.stringify);let u=\"\";return h(this,f=>{u+=f;}),u}assign(h={}){for(let u in h)this[u]=h[u];return this}clone(h={}){let u=o(this);for(let f in h)u[f]=h[f];return u}cloneBefore(h={}){let u=this.clone(h);return this.parent.insertBefore(this,u),u}cloneAfter(h={}){let u=this.clone(h);return this.parent.insertAfter(this,u),u}replaceWith(...h){if(this.parent){let u=this,f=!1;for(let m of h)m===this?f=!0:f?(this.parent.insertAfter(u,m),u=m):this.parent.insertBefore(u,m);f||this.remove();}return this}next(){if(!this.parent)return;let h=this.parent.index(this);return this.parent.nodes[h+1]}prev(){if(!this.parent)return;let h=this.parent.index(this);return this.parent.nodes[h-1]}before(h){return this.parent.insertBefore(this,h),this}after(h){return this.parent.insertAfter(this,h),this}root(){let h=this;for(;h.parent&&h.parent.type!==\"document\";)h=h.parent;return h}raw(h,u){return new a().raw(this,h,u)}cleanRaws(h){delete this.raws.before,delete this.raws.after,h||delete this.raws.between;}toJSON(h,u){let f={},m=u==null;u=u||new Map;let d=0;for(let p in this){if(!Object.prototype.hasOwnProperty.call(this,p)||p===\"parent\"||p===\"proxyCache\")continue;let c=this[p];if(Array.isArray(c))f[p]=c.map(v=>typeof v==\"object\"&&v.toJSON?v.toJSON(null,u):v);else if(typeof c==\"object\"&&c.toJSON)f[p]=c.toJSON(null,u);else if(p===\"source\"){let v=u.get(c.input);v==null&&(v=d,u.set(c.input,d),d++),f[p]={inputId:v,start:c.start,end:c.end};}else f[p]=c;}return m&&(f.inputs=[...u.keys()].map(p=>p.toJSON())),f}positionInside(h){let u=this.toString(),f=this.source.start.column,m=this.source.start.line;for(let d=0;d<h;d++)u[d]===`\n`?(f=1,m+=1):f+=1;return {line:m,column:f}}positionBy(h){let u=this.source.start;if(h.index)u=this.positionInside(h.index);else if(h.word){let f=this.toString().indexOf(h.word);f!==-1&&(u=this.positionInside(f));}return u}rangeBy(h){let u={line:this.source.start.line,column:this.source.start.column},f=this.source.end?{line:this.source.end.line,column:this.source.end.column+1}:{line:u.line,column:u.column+1};if(h.word){let m=this.toString().indexOf(h.word);m!==-1&&(u=this.positionInside(m),f=this.positionInside(m+h.word.length));}else h.start?u={line:h.start.line,column:h.start.column}:h.index&&(u=this.positionInside(h.index)),h.end?f={line:h.end.line,column:h.end.column}:h.endIndex?f=this.positionInside(h.endIndex):h.index&&(f=this.positionInside(h.index+1));return (f.line<u.line||f.line===u.line&&f.column<=u.column)&&(f={line:u.line,column:u.column+1}),{start:u,end:f}}getProxyProcessor(){return {set(h,u,f){return h[u]===f||(h[u]=f,(u===\"prop\"||u===\"value\"||u===\"name\"||u===\"params\"||u===\"important\"||u===\"text\")&&h.markDirty()),!0},get(h,u){return u===\"proxyOf\"?h:u===\"root\"?()=>h.root().toProxy():h[u]}}}toProxy(){return this.proxyCache||(this.proxyCache=new Proxy(this,this.getProxyProcessor())),this.proxyCache}addToError(h){if(h.postcssNode=this,h.stack&&this.source&&/\\n\\s{4}at /.test(h.stack)){let u=this.source;h.stack=h.stack.replace(/\\n\\s{4}at /,`$&${u.input.from}:${u.start.line}:${u.start.column}$&`);}return h}markDirty(){if(this[r]){this[r]=!1;let h=this;for(;h=h.parent;)h[r]=!1;}}get proxyOf(){return this}};e.exports=l,l.default=l;}),ur=et((t,e)=>{var r=cr(),i=class extends r{constructor(s){s&&typeof s.value<\"u\"&&typeof s.value!=\"string\"&&(s={...s,value:String(s.value)}),super(s),this.type=\"decl\";}get variable(){return this.prop.startsWith(\"--\")||this.prop[0]===\"$\"}};e.exports=i,i.default=i;}),ze=et(()=>{}),Ne=et(()=>{}),vi=et(()=>{}),Xs=et((t,e)=>{var r=\"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\",i=(a,n=21)=>(o=n)=>{let l=\"\",h=o;for(;h--;)l+=a[Math.random()*a.length|0];return l},s=(a=21)=>{let n=\"\",o=a;for(;o--;)n+=r[Math.random()*64|0];return n};e.exports={nanoid:s,customAlphabet:i};}),Zs=et(()=>{}),Qs=et((t,e)=>{var{SourceMapConsumer:r,SourceMapGenerator:i}=ze(),{existsSync:s,readFileSync:a}=Zs(),{dirname:n,join:o}=Ne();function l(u){return Buffer?Buffer.from(u,\"base64\").toString():window.atob(u)}var h=class{constructor(u,f){if(f.map===!1)return;this.loadAnnotation(u),this.inline=this.startWith(this.annotation,\"data:\");let m=f.map?f.map.prev:void 0,d=this.loadMap(f.from,m);!this.mapFile&&f.from&&(this.mapFile=f.from),this.mapFile&&(this.root=n(this.mapFile)),d&&(this.text=d);}consumer(){return this.consumerCache||(this.consumerCache=new r(this.text)),this.consumerCache}withContent(){return !!(this.consumer().sourcesContent&&this.consumer().sourcesContent.length>0)}startWith(u,f){return u?u.substr(0,f.length)===f:!1}getAnnotationURL(u){return u.replace(/^\\/\\*\\s*# sourceMappingURL=/,\"\").trim()}loadAnnotation(u){let f=u.match(/\\/\\*\\s*# sourceMappingURL=/gm);if(!f)return;let m=u.lastIndexOf(f.pop()),d=u.indexOf(\"*/\",m);m>-1&&d>-1&&(this.annotation=this.getAnnotationURL(u.substring(m,d)));}decodeInline(u){let f=/^data:application\\/json;charset=utf-?8;base64,/,m=/^data:application\\/json;base64,/,d=/^data:application\\/json;charset=utf-?8,/,p=/^data:application\\/json,/;if(d.test(u)||p.test(u))return decodeURIComponent(u.substr(RegExp.lastMatch.length));if(f.test(u)||m.test(u))return l(u.substr(RegExp.lastMatch.length));let c=u.match(/data:application\\/json;([^,]+),/)[1];throw new Error(\"Unsupported source map encoding \"+c)}loadFile(u){if(this.root=n(u),s(u))return this.mapFile=u,a(u,\"utf-8\").toString().trim()}loadMap(u,f){if(f===!1)return !1;if(f){if(typeof f==\"string\")return f;if(typeof f==\"function\"){let m=f(u);if(m){let d=this.loadFile(m);if(!d)throw new Error(\"Unable to load previous source map: \"+m.toString());return d}}else {if(f instanceof r)return i.fromSourceMap(f).toString();if(f instanceof i)return f.toString();if(this.isMap(f))return JSON.stringify(f);throw new Error(\"Unsupported previous source map format: \"+f.toString())}}else {if(this.inline)return this.decodeInline(this.annotation);if(this.annotation){let m=this.annotation;return u&&(m=o(n(u),m)),this.loadFile(m)}}}isMap(u){return typeof u!=\"object\"?!1:typeof u.mappings==\"string\"||typeof u._mappings==\"string\"||Array.isArray(u.sections)}};e.exports=h,h.default=h;}),mr=et((t,e)=>{var{SourceMapConsumer:r,SourceMapGenerator:i}=ze(),{fileURLToPath:s,pathToFileURL:a}=vi(),{resolve:n,isAbsolute:o}=Ne(),{nanoid:l}=Xs(),h=Ys(),u=yi(),f=Qs(),m=Symbol(\"fromOffsetCache\"),d=!!(r&&i),p=!!(n&&o),c=class{constructor(v,y={}){if(v===null||typeof v>\"u\"||typeof v==\"object\"&&!v.toString)throw new Error(`PostCSS received ${v} instead of CSS string`);if(this.css=v.toString(),this.css[0]===\"\\uFEFF\"||this.css[0]===\"\\uFFFE\"?(this.hasBOM=!0,this.css=this.css.slice(1)):this.hasBOM=!1,y.from&&(!p||/^\\w+:\\/\\//.test(y.from)||o(y.from)?this.file=y.from:this.file=n(y.from)),p&&d){let g=new f(this.css,y);if(g.text){this.map=g;let b=g.consumer().file;!this.file&&b&&(this.file=this.mapResolve(b));}}this.file||(this.id=\"<input css \"+l(6)+\">\"),this.map&&(this.map.file=this.from);}fromOffset(v){let y,g;if(this[m])g=this[m];else {let x=this.css.split(`\n`);g=new Array(x.length);let S=0;for(let C=0,_=x.length;C<_;C++)g[C]=S,S+=x[C].length+1;this[m]=g;}y=g[g.length-1];let b=0;if(v>=y)b=g.length-1;else {let x=g.length-2,S;for(;b<x;)if(S=b+(x-b>>1),v<g[S])x=S-1;else if(v>=g[S+1])b=S+1;else {b=S;break}}return {line:b+1,col:v-g[b]+1}}error(v,y,g,b={}){let x,S,C;if(y&&typeof y==\"object\"){let T=y,L=g;if(typeof T.offset==\"number\"){let G=this.fromOffset(T.offset);y=G.line,g=G.col;}else y=T.line,g=T.column;if(typeof L.offset==\"number\"){let G=this.fromOffset(L.offset);S=G.line,C=G.col;}else S=L.line,C=L.column;}else if(!g){let T=this.fromOffset(y);y=T.line,g=T.col;}let _=this.origin(y,g,S,C);return _?x=new u(v,_.endLine===void 0?_.line:{line:_.line,column:_.column},_.endLine===void 0?_.column:{line:_.endLine,column:_.endColumn},_.source,_.file,b.plugin):x=new u(v,S===void 0?y:{line:y,column:g},S===void 0?g:{line:S,column:C},this.css,this.file,b.plugin),x.input={line:y,column:g,endLine:S,endColumn:C,source:this.css},this.file&&(a&&(x.input.url=a(this.file).toString()),x.input.file=this.file),x}origin(v,y,g,b){if(!this.map)return !1;let x=this.map.consumer(),S=x.originalPositionFor({line:v,column:y});if(!S.source)return !1;let C;typeof g==\"number\"&&(C=x.originalPositionFor({line:g,column:b}));let _;o(S.source)?_=a(S.source):_=new URL(S.source,this.map.consumer().sourceRoot||a(this.map.mapFile));let T={url:_.toString(),line:S.line,column:S.column,endLine:C&&C.line,endColumn:C&&C.column};if(_.protocol===\"file:\")if(s)T.file=s(_);else throw new Error(\"file: protocol is not available in this PostCSS build\");let L=x.sourceContentFor(S.source);return L&&(T.source=L),T}mapResolve(v){return /^\\w+:\\/\\//.test(v)?v:n(this.map.consumer().sourceRoot||this.map.root||\".\",v)}get from(){return this.file||this.id}toJSON(){let v={};for(let y of [\"hasBOM\",\"css\",\"file\",\"id\"])this[y]!=null&&(v[y]=this[y]);return this.map&&(v.map={...this.map},v.map.consumerCache&&(v.map.consumerCache=void 0)),v}};e.exports=c,c.default=c,h&&h.registerInput&&h.registerInput(c);}),ta=et((t,e)=>{var{SourceMapConsumer:r,SourceMapGenerator:i}=ze(),{dirname:s,resolve:a,relative:n,sep:o}=Ne(),{pathToFileURL:l}=vi(),h=mr(),u=!!(r&&i),f=!!(s&&a&&n&&o),m=class{constructor(d,p,c,v){this.stringify=d,this.mapOpts=c.map||{},this.root=p,this.opts=c,this.css=v,this.usesFileUrls=!this.mapOpts.from&&this.mapOpts.absolute;}isMap(){return typeof this.opts.map<\"u\"?!!this.opts.map:this.previous().length>0}previous(){if(!this.previousMaps)if(this.previousMaps=[],this.root)this.root.walk(d=>{if(d.source&&d.source.input.map){let p=d.source.input.map;this.previousMaps.includes(p)||this.previousMaps.push(p);}});else {let d=new h(this.css,this.opts);d.map&&this.previousMaps.push(d.map);}return this.previousMaps}isInline(){if(typeof this.mapOpts.inline<\"u\")return this.mapOpts.inline;let d=this.mapOpts.annotation;return typeof d<\"u\"&&d!==!0?!1:this.previous().length?this.previous().some(p=>p.inline):!0}isSourcesContent(){return typeof this.mapOpts.sourcesContent<\"u\"?this.mapOpts.sourcesContent:this.previous().length?this.previous().some(d=>d.withContent()):!0}clearAnnotation(){if(this.mapOpts.annotation!==!1)if(this.root){let d;for(let p=this.root.nodes.length-1;p>=0;p--)d=this.root.nodes[p],d.type===\"comment\"&&d.text.indexOf(\"# sourceMappingURL=\")===0&&this.root.removeChild(p);}else this.css&&(this.css=this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm,\"\"));}setSourcesContent(){let d={};if(this.root)this.root.walk(p=>{if(p.source){let c=p.source.input.from;if(c&&!d[c]){d[c]=!0;let v=this.usesFileUrls?this.toFileUrl(c):this.toUrl(this.path(c));this.map.setSourceContent(v,p.source.input.css);}}});else if(this.css){let p=this.opts.from?this.toUrl(this.path(this.opts.from)):\"<no source>\";this.map.setSourceContent(p,this.css);}}applyPrevMaps(){for(let d of this.previous()){let p=this.toUrl(this.path(d.file)),c=d.root||s(d.file),v;this.mapOpts.sourcesContent===!1?(v=new r(d.text),v.sourcesContent&&(v.sourcesContent=v.sourcesContent.map(()=>null))):v=d.consumer(),this.map.applySourceMap(v,p,this.toUrl(this.path(c)));}}isAnnotation(){return this.isInline()?!0:typeof this.mapOpts.annotation<\"u\"?this.mapOpts.annotation:this.previous().length?this.previous().some(d=>d.annotation):!0}toBase64(d){return Buffer?Buffer.from(d).toString(\"base64\"):window.btoa(unescape(encodeURIComponent(d)))}addAnnotation(){let d;this.isInline()?d=\"data:application/json;base64,\"+this.toBase64(this.map.toString()):typeof this.mapOpts.annotation==\"string\"?d=this.mapOpts.annotation:typeof this.mapOpts.annotation==\"function\"?d=this.mapOpts.annotation(this.opts.to,this.root):d=this.outputFile()+\".map\";let p=`\n`;this.css.includes(`\\r\n`)&&(p=`\\r\n`),this.css+=p+\"/*# sourceMappingURL=\"+d+\" */\";}outputFile(){return this.opts.to?this.path(this.opts.to):this.opts.from?this.path(this.opts.from):\"to.css\"}generateMap(){if(this.root)this.generateString();else if(this.previous().length===1){let d=this.previous()[0].consumer();d.file=this.outputFile(),this.map=i.fromSourceMap(d);}else this.map=new i({file:this.outputFile()}),this.map.addMapping({source:this.opts.from?this.toUrl(this.path(this.opts.from)):\"<no source>\",generated:{line:1,column:0},original:{line:1,column:0}});return this.isSourcesContent()&&this.setSourcesContent(),this.root&&this.previous().length>0&&this.applyPrevMaps(),this.isAnnotation()&&this.addAnnotation(),this.isInline()?[this.css]:[this.css,this.map]}path(d){if(d.indexOf(\"<\")===0||/^\\w+:\\/\\//.test(d)||this.mapOpts.absolute)return d;let p=this.opts.to?s(this.opts.to):\".\";return typeof this.mapOpts.annotation==\"string\"&&(p=s(a(p,this.mapOpts.annotation))),d=n(p,d),d}toUrl(d){return o===\"\\\\\"&&(d=d.replace(/\\\\/g,\"/\")),encodeURI(d).replace(/[#?]/g,encodeURIComponent)}toFileUrl(d){if(l)return l(d).toString();throw new Error(\"`map.absolute` option is not available in this PostCSS build\")}sourcePath(d){return this.mapOpts.from?this.toUrl(this.mapOpts.from):this.usesFileUrls?this.toFileUrl(d.source.input.from):this.toUrl(this.path(d.source.input.from))}generateString(){this.css=\"\",this.map=new i({file:this.outputFile()});let d=1,p=1,c=\"<no source>\",v={source:\"\",generated:{line:0,column:0},original:{line:0,column:0}},y,g;this.stringify(this.root,(b,x,S)=>{if(this.css+=b,x&&S!==\"end\"&&(v.generated.line=d,v.generated.column=p-1,x.source&&x.source.start?(v.source=this.sourcePath(x),v.original.line=x.source.start.line,v.original.column=x.source.start.column-1,this.map.addMapping(v)):(v.source=c,v.original.line=1,v.original.column=0,this.map.addMapping(v))),y=b.match(/\\n/g),y?(d+=y.length,g=b.lastIndexOf(`\n`),p=b.length-g):p+=b.length,x&&S!==\"start\"){let C=x.parent||{raws:{}};(!(x.type===\"decl\"||x.type===\"atrule\"&&!x.nodes)||x!==C.last||C.raws.semicolon)&&(x.source&&x.source.end?(v.source=this.sourcePath(x),v.original.line=x.source.end.line,v.original.column=x.source.end.column-1,v.generated.line=d,v.generated.column=p-2,this.map.addMapping(v)):(v.source=c,v.original.line=1,v.original.column=0,v.generated.line=d,v.generated.column=p-1,this.map.addMapping(v)));}});}generate(){if(this.clearAnnotation(),f&&u&&this.isMap())return this.generateMap();{let d=\"\";return this.stringify(this.root,p=>{d+=p;}),[d]}}};e.exports=m;}),dr=et((t,e)=>{var r=cr(),i=class extends r{constructor(s){super(s),this.type=\"comment\";}};e.exports=i,i.default=i;}),ve=et((t,e)=>{var{isClean:r,my:i}=gi(),s=ur(),a=dr(),n=cr(),o,l,h,u;function f(p){return p.map(c=>(c.nodes&&(c.nodes=f(c.nodes)),delete c.source,c))}function m(p){if(p[r]=!1,p.proxyOf.nodes)for(let c of p.proxyOf.nodes)m(c);}var d=class extends n{push(p){return p.parent=this,this.proxyOf.nodes.push(p),this}each(p){if(!this.proxyOf.nodes)return;let c=this.getIterator(),v,y;for(;this.indexes[c]<this.proxyOf.nodes.length&&(v=this.indexes[c],y=p(this.proxyOf.nodes[v],v),y!==!1);)this.indexes[c]+=1;return delete this.indexes[c],y}walk(p){return this.each((c,v)=>{let y;try{y=p(c,v);}catch(g){throw c.addToError(g)}return y!==!1&&c.walk&&(y=c.walk(p)),y})}walkDecls(p,c){return c?p instanceof RegExp?this.walk((v,y)=>{if(v.type===\"decl\"&&p.test(v.prop))return c(v,y)}):this.walk((v,y)=>{if(v.type===\"decl\"&&v.prop===p)return c(v,y)}):(c=p,this.walk((v,y)=>{if(v.type===\"decl\")return c(v,y)}))}walkRules(p,c){return c?p instanceof RegExp?this.walk((v,y)=>{if(v.type===\"rule\"&&p.test(v.selector))return c(v,y)}):this.walk((v,y)=>{if(v.type===\"rule\"&&v.selector===p)return c(v,y)}):(c=p,this.walk((v,y)=>{if(v.type===\"rule\")return c(v,y)}))}walkAtRules(p,c){return c?p instanceof RegExp?this.walk((v,y)=>{if(v.type===\"atrule\"&&p.test(v.name))return c(v,y)}):this.walk((v,y)=>{if(v.type===\"atrule\"&&v.name===p)return c(v,y)}):(c=p,this.walk((v,y)=>{if(v.type===\"atrule\")return c(v,y)}))}walkComments(p){return this.walk((c,v)=>{if(c.type===\"comment\")return p(c,v)})}append(...p){for(let c of p){let v=this.normalize(c,this.last);for(let y of v)this.proxyOf.nodes.push(y);}return this.markDirty(),this}prepend(...p){p=p.reverse();for(let c of p){let v=this.normalize(c,this.first,\"prepend\").reverse();for(let y of v)this.proxyOf.nodes.unshift(y);for(let y in this.indexes)this.indexes[y]=this.indexes[y]+v.length;}return this.markDirty(),this}cleanRaws(p){if(super.cleanRaws(p),this.nodes)for(let c of this.nodes)c.cleanRaws(p);}insertBefore(p,c){let v=this.index(p),y=v===0?\"prepend\":!1,g=this.normalize(c,this.proxyOf.nodes[v],y).reverse();v=this.index(p);for(let x of g)this.proxyOf.nodes.splice(v,0,x);let b;for(let x in this.indexes)b=this.indexes[x],v<=b&&(this.indexes[x]=b+g.length);return this.markDirty(),this}insertAfter(p,c){let v=this.index(p),y=this.normalize(c,this.proxyOf.nodes[v]).reverse();v=this.index(p);for(let b of y)this.proxyOf.nodes.splice(v+1,0,b);let g;for(let b in this.indexes)g=this.indexes[b],v<g&&(this.indexes[b]=g+y.length);return this.markDirty(),this}removeChild(p){p=this.index(p),this.proxyOf.nodes[p].parent=void 0,this.proxyOf.nodes.splice(p,1);let c;for(let v in this.indexes)c=this.indexes[v],c>=p&&(this.indexes[v]=c-1);return this.markDirty(),this}removeAll(){for(let p of this.proxyOf.nodes)p.parent=void 0;return this.proxyOf.nodes=[],this.markDirty(),this}replaceValues(p,c,v){return v||(v=c,c={}),this.walkDecls(y=>{c.props&&!c.props.includes(y.prop)||c.fast&&!y.value.includes(c.fast)||(y.value=y.value.replace(p,v));}),this.markDirty(),this}every(p){return this.nodes.every(p)}some(p){return this.nodes.some(p)}index(p){return typeof p==\"number\"?p:(p.proxyOf&&(p=p.proxyOf),this.proxyOf.nodes.indexOf(p))}get first(){if(this.proxyOf.nodes)return this.proxyOf.nodes[0]}get last(){if(this.proxyOf.nodes)return this.proxyOf.nodes[this.proxyOf.nodes.length-1]}normalize(p,c){if(typeof p==\"string\")p=f(o(p).nodes);else if(Array.isArray(p)){p=p.slice(0);for(let v of p)v.parent&&v.parent.removeChild(v,\"ignore\");}else if(p.type===\"root\"&&this.type!==\"document\"){p=p.nodes.slice(0);for(let v of p)v.parent&&v.parent.removeChild(v,\"ignore\");}else if(p.type)p=[p];else if(p.prop){if(typeof p.value>\"u\")throw new Error(\"Value field is missed in node creation\");typeof p.value!=\"string\"&&(p.value=String(p.value)),p=[new s(p)];}else if(p.selector)p=[new l(p)];else if(p.name)p=[new h(p)];else if(p.text)p=[new a(p)];else throw new Error(\"Unknown node type in node creation\");return p.map(v=>(v[i]||d.rebuild(v),v=v.proxyOf,v.parent&&v.parent.removeChild(v),v[r]&&m(v),typeof v.raws.before>\"u\"&&c&&typeof c.raws.before<\"u\"&&(v.raws.before=c.raws.before.replace(/\\S/g,\"\")),v.parent=this.proxyOf,v))}getProxyProcessor(){return {set(p,c,v){return p[c]===v||(p[c]=v,(c===\"name\"||c===\"params\"||c===\"selector\")&&p.markDirty()),!0},get(p,c){return c===\"proxyOf\"?p:p[c]?c===\"each\"||typeof c==\"string\"&&c.startsWith(\"walk\")?(...v)=>p[c](...v.map(y=>typeof y==\"function\"?(g,b)=>y(g.toProxy(),b):y)):c===\"every\"||c===\"some\"?v=>p[c]((y,...g)=>v(y.toProxy(),...g)):c===\"root\"?()=>p.root().toProxy():c===\"nodes\"?p.nodes.map(v=>v.toProxy()):c===\"first\"||c===\"last\"?p[c].toProxy():p[c]:p[c]}}}getIterator(){this.lastEach||(this.lastEach=0),this.indexes||(this.indexes={}),this.lastEach+=1;let p=this.lastEach;return this.indexes[p]=0,p}};d.registerParse=p=>{o=p;},d.registerRule=p=>{l=p;},d.registerAtRule=p=>{h=p;},d.registerRoot=p=>{u=p;},e.exports=d,d.default=d,d.rebuild=p=>{p.type===\"atrule\"?Object.setPrototypeOf(p,h.prototype):p.type===\"rule\"?Object.setPrototypeOf(p,l.prototype):p.type===\"decl\"?Object.setPrototypeOf(p,s.prototype):p.type===\"comment\"?Object.setPrototypeOf(p,a.prototype):p.type===\"root\"&&Object.setPrototypeOf(p,u.prototype),p[i]=!0,p.nodes&&p.nodes.forEach(c=>{d.rebuild(c);});};}),bi=et((t,e)=>{var r=ve(),i,s,a=class extends r{constructor(n){super({type:\"document\",...n}),this.nodes||(this.nodes=[]);}toResult(n={}){return new i(new s,this,n).stringify()}};a.registerLazyResult=n=>{i=n;},a.registerProcessor=n=>{s=n;},e.exports=a,a.default=a;}),ea=et((t,e)=>{var r={};e.exports=function(i){r[i]||(r[i]=!0,typeof console<\"u\"&&console.warn&&console.warn(i));};}),ra=et((t,e)=>{var r=class{constructor(i,s={}){if(this.type=\"warning\",this.text=i,s.node&&s.node.source){let a=s.node.rangeBy(s);this.line=a.start.line,this.column=a.start.column,this.endLine=a.end.line,this.endColumn=a.end.column;}for(let a in s)this[a]=s[a];}toString(){return this.node?this.node.error(this.text,{plugin:this.plugin,index:this.index,word:this.word}).message:this.plugin?this.plugin+\": \"+this.text:this.text}};e.exports=r,r.default=r;}),xi=et((t,e)=>{var r=ra(),i=class{constructor(s,a,n){this.processor=s,this.messages=[],this.root=a,this.opts=n,this.css=void 0,this.map=void 0;}toString(){return this.css}warn(s,a={}){a.plugin||this.lastPlugin&&this.lastPlugin.postcssPlugin&&(a.plugin=this.lastPlugin.postcssPlugin);let n=new r(s,a);return this.messages.push(n),n}warnings(){return this.messages.filter(s=>s.type===\"warning\")}get content(){return this.css}};e.exports=i,i.default=i;}),Wo=et((t,e)=>{var r=\"'\".charCodeAt(0),i='\"'.charCodeAt(0),s=\"\\\\\".charCodeAt(0),a=\"/\".charCodeAt(0),n=`\n`.charCodeAt(0),o=\" \".charCodeAt(0),l=\"\\f\".charCodeAt(0),h=\"\t\".charCodeAt(0),u=\"\\r\".charCodeAt(0),f=\"[\".charCodeAt(0),m=\"]\".charCodeAt(0),d=\"(\".charCodeAt(0),p=\")\".charCodeAt(0),c=\"{\".charCodeAt(0),v=\"}\".charCodeAt(0),y=\";\".charCodeAt(0),g=\"*\".charCodeAt(0),b=\":\".charCodeAt(0),x=\"@\".charCodeAt(0),S=/[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g,C=/[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g,_=/.[\\n\"'(/\\\\]/,T=/[\\da-f]/i;e.exports=function(L,G={}){let R=L.css.valueOf(),j=G.ignoreErrors,$,F,W,A,M,P,E,O,I,Z,K=R.length,q=0,H=[],Q=[];function rt(){return q}function st(ht){throw L.error(\"Unclosed \"+ht,q)}function ut(){return Q.length===0&&q>=K}function mt(ht){if(Q.length)return Q.pop();if(q>=K)return;let at=ht?ht.ignoreUnclosed:!1;switch($=R.charCodeAt(q),$){case n:case o:case h:case u:case l:{F=q;do F+=1,$=R.charCodeAt(F);while($===o||$===n||$===h||$===u||$===l);Z=[\"space\",R.slice(q,F)],q=F-1;break}case f:case m:case c:case v:case b:case y:case p:{let tt=String.fromCharCode($);Z=[tt,tt,q];break}case d:{if(O=H.length?H.pop()[1]:\"\",I=R.charCodeAt(q+1),O===\"url\"&&I!==r&&I!==i&&I!==o&&I!==n&&I!==h&&I!==l&&I!==u){F=q;do{if(P=!1,F=R.indexOf(\")\",F+1),F===-1)if(j||at){F=q;break}else st(\"bracket\");for(E=F;R.charCodeAt(E-1)===s;)E-=1,P=!P;}while(P);Z=[\"brackets\",R.slice(q,F+1),q,F],q=F;}else F=R.indexOf(\")\",q+1),A=R.slice(q,F+1),F===-1||_.test(A)?Z=[\"(\",\"(\",q]:(Z=[\"brackets\",A,q,F],q=F);break}case r:case i:{W=$===r?\"'\":'\"',F=q;do{if(P=!1,F=R.indexOf(W,F+1),F===-1)if(j||at){F=q+1;break}else st(\"string\");for(E=F;R.charCodeAt(E-1)===s;)E-=1,P=!P;}while(P);Z=[\"string\",R.slice(q,F+1),q,F],q=F;break}case x:{S.lastIndex=q+1,S.test(R),S.lastIndex===0?F=R.length-1:F=S.lastIndex-2,Z=[\"at-word\",R.slice(q,F+1),q,F],q=F;break}case s:{for(F=q,M=!0;R.charCodeAt(F+1)===s;)F+=1,M=!M;if($=R.charCodeAt(F+1),M&&$!==a&&$!==o&&$!==n&&$!==h&&$!==u&&$!==l&&(F+=1,T.test(R.charAt(F)))){for(;T.test(R.charAt(F+1));)F+=1;R.charCodeAt(F+1)===o&&(F+=1);}Z=[\"word\",R.slice(q,F+1),q,F],q=F;break}default:{$===a&&R.charCodeAt(q+1)===g?(F=R.indexOf(\"*/\",q+2)+1,F===0&&(j||at?F=R.length:st(\"comment\")),Z=[\"comment\",R.slice(q,F+1),q,F],q=F):(C.lastIndex=q+1,C.test(R),C.lastIndex===0?F=R.length-1:F=C.lastIndex-2,Z=[\"word\",R.slice(q,F+1),q,F],H.push(Z),q=F);break}}return q++,Z}function ot(ht){Q.push(ht);}return {back:ot,nextToken:mt,endOfFile:ut,position:rt}};}),Si=et((t,e)=>{var r=ve(),i=class extends r{constructor(s){super(s),this.type=\"atrule\";}append(...s){return this.proxyOf.nodes||(this.nodes=[]),super.append(...s)}prepend(...s){return this.proxyOf.nodes||(this.nodes=[]),super.prepend(...s)}};e.exports=i,i.default=i,r.registerAtRule(i);}),Ge=et((t,e)=>{var r=ve(),i,s,a=class extends r{constructor(n){super(n),this.type=\"root\",this.nodes||(this.nodes=[]);}removeChild(n,o){let l=this.index(n);return !o&&l===0&&this.nodes.length>1&&(this.nodes[1].raws.before=this.nodes[l].raws.before),super.removeChild(n)}normalize(n,o,l){let h=super.normalize(n);if(o){if(l===\"prepend\")this.nodes.length>1?o.raws.before=this.nodes[1].raws.before:delete o.raws.before;else if(this.first!==o)for(let u of h)u.raws.before=o.raws.before;}return h}toResult(n={}){return new i(new s,this,n).stringify()}};a.registerLazyResult=n=>{i=n;},a.registerProcessor=n=>{s=n;},e.exports=a,a.default=a,r.registerRoot(a);}),ia=et((t,e)=>{var r={split(i,s,a){let n=[],o=\"\",l=!1,h=0,u=!1,f=\"\",m=!1;for(let d of i)m?m=!1:d===\"\\\\\"?m=!0:u?d===f&&(u=!1):d==='\"'||d===\"'\"?(u=!0,f=d):d===\"(\"?h+=1:d===\")\"?h>0&&(h-=1):h===0&&s.includes(d)&&(l=!0),l?(o!==\"\"&&n.push(o.trim()),o=\"\",l=!1):o+=d;return (a||o!==\"\")&&n.push(o.trim()),n},space(i){let s=[\" \",`\n`,\"\t\"];return r.split(i,s)},comma(i){return r.split(i,[\",\"],!0)}};e.exports=r,r.default=r;}),wi=et((t,e)=>{var r=ve(),i=ia(),s=class extends r{constructor(a){super(a),this.type=\"rule\",this.nodes||(this.nodes=[]);}get selectors(){return i.comma(this.selector)}set selectors(a){let n=this.selector?this.selector.match(/,\\s*/):null,o=n?n[0]:\",\"+this.raw(\"between\",\"beforeOpen\");this.selector=a.join(o);}};e.exports=s,s.default=s,r.registerRule(s);}),Uo=et((t,e)=>{var r=ur(),i=Wo(),s=dr(),a=Si(),n=Ge(),o=wi(),l={empty:!0,space:!0};function h(f){for(let m=f.length-1;m>=0;m--){let d=f[m],p=d[3]||d[2];if(p)return p}}var u=class{constructor(f){this.input=f,this.root=new n,this.current=this.root,this.spaces=\"\",this.semicolon=!1,this.customProperty=!1,this.createTokenizer(),this.root.source={input:f,start:{offset:0,line:1,column:1}};}createTokenizer(){this.tokenizer=i(this.input);}parse(){let f;for(;!this.tokenizer.endOfFile();)switch(f=this.tokenizer.nextToken(),f[0]){case\"space\":this.spaces+=f[1];break;case\";\":this.freeSemicolon(f);break;case\"}\":this.end(f);break;case\"comment\":this.comment(f);break;case\"at-word\":this.atrule(f);break;case\"{\":this.emptyRule(f);break;default:this.other(f);break}this.endFile();}comment(f){let m=new s;this.init(m,f[2]),m.source.end=this.getPosition(f[3]||f[2]);let d=f[1].slice(2,-2);if(/^\\s*$/.test(d))m.text=\"\",m.raws.left=d,m.raws.right=\"\";else {let p=d.match(/^(\\s*)([^]*\\S)(\\s*)$/);m.text=p[2],m.raws.left=p[1],m.raws.right=p[3];}}emptyRule(f){let m=new o;this.init(m,f[2]),m.selector=\"\",m.raws.between=\"\",this.current=m;}other(f){let m=!1,d=null,p=!1,c=null,v=[],y=f[1].startsWith(\"--\"),g=[],b=f;for(;b;){if(d=b[0],g.push(b),d===\"(\"||d===\"[\")c||(c=b),v.push(d===\"(\"?\")\":\"]\");else if(y&&p&&d===\"{\")c||(c=b),v.push(\"}\");else if(v.length===0)if(d===\";\")if(p){this.decl(g,y);return}else break;else if(d===\"{\"){this.rule(g);return}else if(d===\"}\"){this.tokenizer.back(g.pop()),m=!0;break}else d===\":\"&&(p=!0);else d===v[v.length-1]&&(v.pop(),v.length===0&&(c=null));b=this.tokenizer.nextToken();}if(this.tokenizer.endOfFile()&&(m=!0),v.length>0&&this.unclosedBracket(c),m&&p){if(!y)for(;g.length&&(b=g[g.length-1][0],!(b!==\"space\"&&b!==\"comment\"));)this.tokenizer.back(g.pop());this.decl(g,y);}else this.unknownWord(g);}rule(f){f.pop();let m=new o;this.init(m,f[0][2]),m.raws.between=this.spacesAndCommentsFromEnd(f),this.raw(m,\"selector\",f),this.current=m;}decl(f,m){let d=new r;this.init(d,f[0][2]);let p=f[f.length-1];for(p[0]===\";\"&&(this.semicolon=!0,f.pop()),d.source.end=this.getPosition(p[3]||p[2]||h(f));f[0][0]!==\"word\";)f.length===1&&this.unknownWord(f),d.raws.before+=f.shift()[1];for(d.source.start=this.getPosition(f[0][2]),d.prop=\"\";f.length;){let g=f[0][0];if(g===\":\"||g===\"space\"||g===\"comment\")break;d.prop+=f.shift()[1];}d.raws.between=\"\";let c;for(;f.length;)if(c=f.shift(),c[0]===\":\"){d.raws.between+=c[1];break}else c[0]===\"word\"&&/\\w/.test(c[1])&&this.unknownWord([c]),d.raws.between+=c[1];(d.prop[0]===\"_\"||d.prop[0]===\"*\")&&(d.raws.before+=d.prop[0],d.prop=d.prop.slice(1));let v=[],y;for(;f.length&&(y=f[0][0],!(y!==\"space\"&&y!==\"comment\"));)v.push(f.shift());this.precheckMissedSemicolon(f);for(let g=f.length-1;g>=0;g--){if(c=f[g],c[1].toLowerCase()===\"!important\"){d.important=!0;let b=this.stringFrom(f,g);b=this.spacesFromEnd(f)+b,b!==\" !important\"&&(d.raws.important=b);break}else if(c[1].toLowerCase()===\"important\"){let b=f.slice(0),x=\"\";for(let S=g;S>0;S--){let C=b[S][0];if(x.trim().indexOf(\"!\")===0&&C!==\"space\")break;x=b.pop()[1]+x;}x.trim().indexOf(\"!\")===0&&(d.important=!0,d.raws.important=x,f=b);}if(c[0]!==\"space\"&&c[0]!==\"comment\")break}f.some(g=>g[0]!==\"space\"&&g[0]!==\"comment\")&&(d.raws.between+=v.map(g=>g[1]).join(\"\"),v=[]),this.raw(d,\"value\",v.concat(f),m),d.value.includes(\":\")&&!m&&this.checkMissedSemicolon(f);}atrule(f){let m=new a;m.name=f[1].slice(1),m.name===\"\"&&this.unnamedAtrule(m,f),this.init(m,f[2]);let d,p,c,v=!1,y=!1,g=[],b=[];for(;!this.tokenizer.endOfFile();){if(f=this.tokenizer.nextToken(),d=f[0],d===\"(\"||d===\"[\"?b.push(d===\"(\"?\")\":\"]\"):d===\"{\"&&b.length>0?b.push(\"}\"):d===b[b.length-1]&&b.pop(),b.length===0)if(d===\";\"){m.source.end=this.getPosition(f[2]),this.semicolon=!0;break}else if(d===\"{\"){y=!0;break}else if(d===\"}\"){if(g.length>0){for(c=g.length-1,p=g[c];p&&p[0]===\"space\";)p=g[--c];p&&(m.source.end=this.getPosition(p[3]||p[2]));}this.end(f);break}else g.push(f);else g.push(f);if(this.tokenizer.endOfFile()){v=!0;break}}m.raws.between=this.spacesAndCommentsFromEnd(g),g.length?(m.raws.afterName=this.spacesAndCommentsFromStart(g),this.raw(m,\"params\",g),v&&(f=g[g.length-1],m.source.end=this.getPosition(f[3]||f[2]),this.spaces=m.raws.between,m.raws.between=\"\")):(m.raws.afterName=\"\",m.params=\"\"),y&&(m.nodes=[],this.current=m);}end(f){this.current.nodes&&this.current.nodes.length&&(this.current.raws.semicolon=this.semicolon),this.semicolon=!1,this.current.raws.after=(this.current.raws.after||\"\")+this.spaces,this.spaces=\"\",this.current.parent?(this.current.source.end=this.getPosition(f[2]),this.current=this.current.parent):this.unexpectedClose(f);}endFile(){this.current.parent&&this.unclosedBlock(),this.current.nodes&&this.current.nodes.length&&(this.current.raws.semicolon=this.semicolon),this.current.raws.after=(this.current.raws.after||\"\")+this.spaces;}freeSemicolon(f){if(this.spaces+=f[1],this.current.nodes){let m=this.current.nodes[this.current.nodes.length-1];m&&m.type===\"rule\"&&!m.raws.ownSemicolon&&(m.raws.ownSemicolon=this.spaces,this.spaces=\"\");}}getPosition(f){let m=this.input.fromOffset(f);return {offset:f,line:m.line,column:m.col}}init(f,m){this.current.push(f),f.source={start:this.getPosition(m),input:this.input},f.raws.before=this.spaces,this.spaces=\"\",f.type!==\"comment\"&&(this.semicolon=!1);}raw(f,m,d,p){let c,v,y=d.length,g=\"\",b=!0,x,S;for(let C=0;C<y;C+=1)c=d[C],v=c[0],v===\"space\"&&C===y-1&&!p?b=!1:v===\"comment\"?(S=d[C-1]?d[C-1][0]:\"empty\",x=d[C+1]?d[C+1][0]:\"empty\",!l[S]&&!l[x]?g.slice(-1)===\",\"?b=!1:g+=c[1]:b=!1):g+=c[1];if(!b){let C=d.reduce((_,T)=>_+T[1],\"\");f.raws[m]={value:g,raw:C};}f[m]=g;}spacesAndCommentsFromEnd(f){let m,d=\"\";for(;f.length&&(m=f[f.length-1][0],!(m!==\"space\"&&m!==\"comment\"));)d=f.pop()[1]+d;return d}spacesAndCommentsFromStart(f){let m,d=\"\";for(;f.length&&(m=f[0][0],!(m!==\"space\"&&m!==\"comment\"));)d+=f.shift()[1];return d}spacesFromEnd(f){let m,d=\"\";for(;f.length&&(m=f[f.length-1][0],m===\"space\");)d=f.pop()[1]+d;return d}stringFrom(f,m){let d=\"\";for(let p=m;p<f.length;p++)d+=f[p][1];return f.splice(m,f.length-m),d}colon(f){let m=0,d,p,c;for(let[v,y]of f.entries()){if(d=y,p=d[0],p===\"(\"&&(m+=1),p===\")\"&&(m-=1),m===0&&p===\":\")if(!c)this.doubleColon(d);else {if(c[0]===\"word\"&&c[1]===\"progid\")continue;return v}c=d;}return !1}unclosedBracket(f){throw this.input.error(\"Unclosed bracket\",{offset:f[2]},{offset:f[2]+1})}unknownWord(f){throw this.input.error(\"Unknown word\",{offset:f[0][2]},{offset:f[0][2]+f[0][1].length})}unexpectedClose(f){throw this.input.error(\"Unexpected }\",{offset:f[2]},{offset:f[2]+1})}unclosedBlock(){let f=this.current.source.start;throw this.input.error(\"Unclosed block\",f.line,f.column)}doubleColon(f){throw this.input.error(\"Double colon\",{offset:f[2]},{offset:f[2]+f[1].length})}unnamedAtrule(f,m){throw this.input.error(\"At-rule without name\",{offset:m[2]},{offset:m[2]+m[1].length})}precheckMissedSemicolon(){}checkMissedSemicolon(f){let m=this.colon(f);if(m===!1)return;let d=0,p;for(let c=m-1;c>=0&&(p=f[c],!(p[0]!==\"space\"&&(d+=1,d===2)));c--);throw this.input.error(\"Missed semicolon\",p[0]===\"word\"?p[3]+1:p[2])}};e.exports=u;}),ki=et((t,e)=>{var r=ve(),i=Uo(),s=mr();function a(n,o){let l=new s(n,o),h=new i(l);try{h.parse();}catch(u){throw u}return h.root}e.exports=a,a.default=a,r.registerParse(a);}),sa=et((t,e)=>{var{isClean:r,my:i}=gi(),s=ta(),a=fr(),n=ve(),o=bi();ea();var l=xi(),h=ki(),u=Ge(),f={document:\"Document\",root:\"Root\",atrule:\"AtRule\",rule:\"Rule\",decl:\"Declaration\",comment:\"Comment\"},m={postcssPlugin:!0,prepare:!0,Once:!0,Document:!0,Root:!0,Declaration:!0,Rule:!0,AtRule:!0,Comment:!0,DeclarationExit:!0,RuleExit:!0,AtRuleExit:!0,CommentExit:!0,RootExit:!0,DocumentExit:!0,OnceExit:!0},d={postcssPlugin:!0,prepare:!0,Once:!0},p=0;function c(S){return typeof S==\"object\"&&typeof S.then==\"function\"}function v(S){let C=!1,_=f[S.type];return S.type===\"decl\"?C=S.prop.toLowerCase():S.type===\"atrule\"&&(C=S.name.toLowerCase()),C&&S.append?[_,_+\"-\"+C,p,_+\"Exit\",_+\"Exit-\"+C]:C?[_,_+\"-\"+C,_+\"Exit\",_+\"Exit-\"+C]:S.append?[_,p,_+\"Exit\"]:[_,_+\"Exit\"]}function y(S){let C;return S.type===\"document\"?C=[\"Document\",p,\"DocumentExit\"]:S.type===\"root\"?C=[\"Root\",p,\"RootExit\"]:C=v(S),{node:S,events:C,eventIndex:0,visitors:[],visitorIndex:0,iterator:0}}function g(S){return S[r]=!1,S.nodes&&S.nodes.forEach(C=>g(C)),S}var b={},x=class{constructor(S,C,_){this.stringified=!1,this.processed=!1;let T;if(typeof C==\"object\"&&C!==null&&(C.type===\"root\"||C.type===\"document\"))T=g(C);else if(C instanceof x||C instanceof l)T=g(C.root),C.map&&(typeof _.map>\"u\"&&(_.map={}),_.map.inline||(_.map.inline=!1),_.map.prev=C.map);else {let L=h;_.syntax&&(L=_.syntax.parse),_.parser&&(L=_.parser),L.parse&&(L=L.parse);try{T=L(C,_);}catch(G){this.processed=!0,this.error=G;}T&&!T[i]&&n.rebuild(T);}this.result=new l(S,T,_),this.helpers={...b,result:this.result,postcss:b},this.plugins=this.processor.plugins.map(L=>typeof L==\"object\"&&L.prepare?{...L,...L.prepare(this.result)}:L);}get[Symbol.toStringTag](){return \"LazyResult\"}get processor(){return this.result.processor}get opts(){return this.result.opts}get css(){return this.stringify().css}get content(){return this.stringify().content}get map(){return this.stringify().map}get root(){return this.sync().root}get messages(){return this.sync().messages}warnings(){return this.sync().warnings()}toString(){return this.css}then(S,C){return this.async().then(S,C)}catch(S){return this.async().catch(S)}finally(S){return this.async().then(S,S)}async(){return this.error?Promise.reject(this.error):this.processed?Promise.resolve(this.result):(this.processing||(this.processing=this.runAsync()),this.processing)}sync(){if(this.error)throw this.error;if(this.processed)return this.result;if(this.processed=!0,this.processing)throw this.getAsyncError();for(let S of this.plugins){let C=this.runOnRoot(S);if(c(C))throw this.getAsyncError()}if(this.prepareVisitors(),this.hasListener){let S=this.result.root;for(;!S[r];)S[r]=!0,this.walkSync(S);if(this.listeners.OnceExit)if(S.type===\"document\")for(let C of S.nodes)this.visitSync(this.listeners.OnceExit,C);else this.visitSync(this.listeners.OnceExit,S);}return this.result}stringify(){if(this.error)throw this.error;if(this.stringified)return this.result;this.stringified=!0,this.sync();let S=this.result.opts,C=a;S.syntax&&(C=S.syntax.stringify),S.stringifier&&(C=S.stringifier),C.stringify&&(C=C.stringify);let _=new s(C,this.result.root,this.result.opts).generate();return this.result.css=_[0],this.result.map=_[1],this.result}walkSync(S){S[r]=!0;let C=v(S);for(let _ of C)if(_===p)S.nodes&&S.each(T=>{T[r]||this.walkSync(T);});else {let T=this.listeners[_];if(T&&this.visitSync(T,S.toProxy()))return}}visitSync(S,C){for(let[_,T]of S){this.result.lastPlugin=_;let L;try{L=T(C,this.helpers);}catch(G){throw this.handleError(G,C.proxyOf)}if(C.type!==\"root\"&&C.type!==\"document\"&&!C.parent)return !0;if(c(L))throw this.getAsyncError()}}runOnRoot(S){this.result.lastPlugin=S;try{if(typeof S==\"object\"&&S.Once){if(this.result.root.type===\"document\"){let C=this.result.root.nodes.map(_=>S.Once(_,this.helpers));return c(C[0])?Promise.all(C):C}return S.Once(this.result.root,this.helpers)}else if(typeof S==\"function\")return S(this.result.root,this.result)}catch(C){throw this.handleError(C)}}getAsyncError(){throw new Error(\"Use process(css).then(cb) to work with async plugins\")}handleError(S,C){let _=this.result.lastPlugin;try{C&&C.addToError(S),this.error=S,S.name===\"CssSyntaxError\"&&!S.plugin?(S.plugin=_.postcssPlugin,S.setMessage()):_.postcssVersion;}catch(T){console&&console.error&&console.error(T);}return S}async runAsync(){this.plugin=0;for(let S=0;S<this.plugins.length;S++){let C=this.plugins[S],_=this.runOnRoot(C);if(c(_))try{await _;}catch(T){throw this.handleError(T)}}if(this.prepareVisitors(),this.hasListener){let S=this.result.root;for(;!S[r];){S[r]=!0;let C=[y(S)];for(;C.length>0;){let _=this.visitTick(C);if(c(_))try{await _;}catch(T){let L=C[C.length-1].node;throw this.handleError(T,L)}}}if(this.listeners.OnceExit)for(let[C,_]of this.listeners.OnceExit){this.result.lastPlugin=C;try{if(S.type===\"document\"){let T=S.nodes.map(L=>_(L,this.helpers));await Promise.all(T);}else await _(S,this.helpers);}catch(T){throw this.handleError(T)}}}return this.processed=!0,this.stringify()}prepareVisitors(){this.listeners={};let S=(C,_,T)=>{this.listeners[_]||(this.listeners[_]=[]),this.listeners[_].push([C,T]);};for(let C of this.plugins)if(typeof C==\"object\")for(let _ in C){if(!m[_]&&/^[A-Z]/.test(_))throw new Error(`Unknown event ${_} in ${C.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`);if(!d[_])if(typeof C[_]==\"object\")for(let T in C[_])T===\"*\"?S(C,_,C[_][T]):S(C,_+\"-\"+T.toLowerCase(),C[_][T]);else typeof C[_]==\"function\"&&S(C,_,C[_]);}this.hasListener=Object.keys(this.listeners).length>0;}visitTick(S){let C=S[S.length-1],{node:_,visitors:T}=C;if(_.type!==\"root\"&&_.type!==\"document\"&&!_.parent){S.pop();return}if(T.length>0&&C.visitorIndex<T.length){let[G,R]=T[C.visitorIndex];C.visitorIndex+=1,C.visitorIndex===T.length&&(C.visitors=[],C.visitorIndex=0),this.result.lastPlugin=G;try{return R(_.toProxy(),this.helpers)}catch(j){throw this.handleError(j,_)}}if(C.iterator!==0){let G=C.iterator,R;for(;R=_.nodes[_.indexes[G]];)if(_.indexes[G]+=1,!R[r]){R[r]=!0,S.push(y(R));return}C.iterator=0,delete _.indexes[G];}let L=C.events;for(;C.eventIndex<L.length;){let G=L[C.eventIndex];if(C.eventIndex+=1,G===p){_.nodes&&_.nodes.length&&(_[r]=!0,C.iterator=_.getIterator());return}else if(this.listeners[G]){C.visitors=this.listeners[G];return}}S.pop();}};x.registerPostcss=S=>{b=S;},e.exports=x,x.default=x,u.registerLazyResult(x),o.registerLazyResult(x);}),Jo=et((t,e)=>{var r=ta(),i=fr();ea();var s=ki(),a=xi(),n=class{constructor(o,l,h){l=l.toString(),this.stringified=!1,this._processor=o,this._css=l,this._opts=h,this._map=void 0;let u,f=i;this.result=new a(this._processor,u,this._opts),this.result.css=l;let m=this;Object.defineProperty(this.result,\"root\",{get(){return m.root}});let d=new r(f,u,this._opts,l);if(d.isMap()){let[p,c]=d.generate();p&&(this.result.css=p),c&&(this.result.map=c);}}get[Symbol.toStringTag](){return \"NoWorkResult\"}get processor(){return this.result.processor}get opts(){return this.result.opts}get css(){return this.result.css}get content(){return this.result.css}get map(){return this.result.map}get root(){if(this._root)return this._root;let o,l=s;try{o=l(this._css,this._opts);}catch(h){this.error=h;}if(this.error)throw this.error;return this._root=o,o}get messages(){return []}warnings(){return []}toString(){return this._css}then(o,l){return this.async().then(o,l)}catch(o){return this.async().catch(o)}finally(o){return this.async().then(o,o)}async(){return this.error?Promise.reject(this.error):Promise.resolve(this.result)}sync(){if(this.error)throw this.error;return this.result}};e.exports=n,n.default=n;}),Yo=et((t,e)=>{var r=Jo(),i=sa(),s=bi(),a=Ge(),n=class{constructor(o=[]){this.version=\"8.4.24\",this.plugins=this.normalize(o);}use(o){return this.plugins=this.plugins.concat(this.normalize([o])),this}process(o,l={}){return this.plugins.length===0&&typeof l.parser>\"u\"&&typeof l.stringifier>\"u\"&&typeof l.syntax>\"u\"?new r(this,o,l):new i(this,o,l)}normalize(o){let l=[];for(let h of o)if(h.postcss===!0?h=h():h.postcss&&(h=h.postcss),typeof h==\"object\"&&Array.isArray(h.plugins))l=l.concat(h.plugins);else if(typeof h==\"object\"&&h.postcssPlugin)l.push(h);else if(typeof h==\"function\")l.push(h);else if(!(typeof h==\"object\"&&(h.parse||h.stringify)))throw new Error(h+\" is not a PostCSS plugin\");return l}};e.exports=n,n.default=n,a.registerProcessor(n),s.registerProcessor(n);}),Ko=et((t,e)=>{var r=ur(),i=Qs(),s=dr(),a=Si(),n=mr(),o=Ge(),l=wi();function h(u,f){if(Array.isArray(u))return u.map(p=>h(p));let{inputs:m,...d}=u;if(m){f=[];for(let p of m){let c={...p,__proto__:n.prototype};c.map&&(c.map={...c.map,__proto__:i.prototype}),f.push(c);}}if(d.nodes&&(d.nodes=u.nodes.map(p=>h(p,f))),d.source){let{inputId:p,...c}=d.source;d.source=c,p!=null&&(d.source.input=f[p]);}if(d.type===\"root\")return new o(d);if(d.type===\"decl\")return new r(d);if(d.type===\"rule\")return new l(d);if(d.type===\"comment\")return new s(d);if(d.type===\"atrule\")return new a(d);throw new Error(\"Unknown node type: \"+u.type)}e.exports=h,h.default=h;}),Xo=et((t,e)=>{var r=yi(),i=ur(),s=sa(),a=ve(),n=Yo(),o=fr(),l=Ko(),h=bi(),u=ra(),f=dr(),m=Si(),d=xi(),p=mr(),c=ki(),v=ia(),y=wi(),g=Ge(),b=cr();function x(...S){return S.length===1&&Array.isArray(S[0])&&(S=S[0]),new n(S)}x.plugin=function(S,C){let _=!1;function T(...G){console&&console.warn&&!_&&(_=!0,console.warn(S+`: postcss.plugin was deprecated. Migration guide:\nhttps://evilmartians.com/chronicles/postcss-8-plugin-migration`),process.env.LANG&&process.env.LANG.startsWith(\"cn\")&&console.warn(S+`: \\u91CC\\u9762 postcss.plugin \\u88AB\\u5F03\\u7528. \\u8FC1\\u79FB\\u6307\\u5357:\nhttps://www.w3ctech.com/topic/2226`));let R=C(...G);return R.postcssPlugin=S,R.postcssVersion=new n().version,R}let L;return Object.defineProperty(T,\"postcss\",{get(){return L||(L=T()),L}}),T.process=function(G,R,j){return x([T(j)]).process(G,R)},T},x.stringify=o,x.parse=c,x.fromJSON=l,x.list=v,x.comment=S=>new f(S),x.atRule=S=>new m(S),x.decl=S=>new i(S),x.rule=S=>new y(S),x.root=S=>new g(S),x.document=S=>new h(S),x.CssSyntaxError=r,x.Declaration=i,x.Container=a,x.Processor=n,x.Document=h,x.Comment=f,x.Warning=u,x.AtRule=m,x.Result=d,x.Input=p,x.Rule=y,x.Root=g,x.Node=b,s.registerPostcss(x),e.exports=x,x.default=x;}),aa=et(()=>{}),na=et((t,e)=>{var r=Js(),i=aa(),s=class extends Error{constructor(a,n,o,l,h,u){super(a),this.name=\"CssSyntaxError\",this.reason=a,h&&(this.file=h),l&&(this.source=l),u&&(this.plugin=u),typeof n<\"u\"&&typeof o<\"u\"&&(typeof n==\"number\"?(this.line=n,this.column=o):(this.line=n.line,this.column=n.column,this.endLine=o.line,this.endColumn=o.column)),this.setMessage(),Error.captureStackTrace&&Error.captureStackTrace(this,s);}setMessage(){this.message=this.plugin?this.plugin+\": \":\"\",this.message+=this.file?this.file:\"<css input>\",typeof this.line<\"u\"&&(this.message+=\":\"+this.line+\":\"+this.column),this.message+=\": \"+this.reason;}showSourceCode(a){if(!this.source)return \"\";let n=this.source;a==null&&(a=r.isColorSupported),i&&a&&(n=i(n));let o=n.split(/\\r?\\n/),l=Math.max(this.line-3,0),h=Math.min(this.line+2,o.length),u=String(h).length,f,m;if(a){let{bold:d,red:p,gray:c}=r.createColors(!0);f=v=>d(p(v)),m=v=>c(v);}else f=m=d=>d;return o.slice(l,h).map((d,p)=>{let c=l+1+p,v=\" \"+(\" \"+c).slice(-u)+\" | \";if(c===this.line){let y=m(v.replace(/\\d/g,\" \"))+d.slice(0,this.column-1).replace(/[^\\t]/g,\" \");return f(\">\")+m(v)+d+`\n `+y+f(\"^\")}return \" \"+m(v)+d}).join(`\n`)}toString(){let a=this.showSourceCode();return a&&(a=`\n\n`+a+`\n`),this.name+\": \"+this.message+a}};e.exports=s,s.default=s;}),Zo=et((t,e)=>{var{SourceMapConsumer:r,SourceMapGenerator:i}=ze(),{existsSync:s,readFileSync:a}=Zs(),{dirname:n,join:o}=Ne();function l(u){return Buffer?Buffer.from(u,\"base64\").toString():window.atob(u)}var h=class{constructor(u,f){if(f.map===!1)return;this.loadAnnotation(u),this.inline=this.startWith(this.annotation,\"data:\");let m=f.map?f.map.prev:void 0,d=this.loadMap(f.from,m);!this.mapFile&&f.from&&(this.mapFile=f.from),this.mapFile&&(this.root=n(this.mapFile)),d&&(this.text=d);}consumer(){return this.consumerCache||(this.consumerCache=new r(this.text)),this.consumerCache}withContent(){return !!(this.consumer().sourcesContent&&this.consumer().sourcesContent.length>0)}startWith(u,f){return u?u.substr(0,f.length)===f:!1}getAnnotationURL(u){return u.replace(/^\\/\\*\\s*# sourceMappingURL=/,\"\").trim()}loadAnnotation(u){let f=u.match(/\\/\\*\\s*# sourceMappingURL=/gm);if(!f)return;let m=u.lastIndexOf(f.pop()),d=u.indexOf(\"*/\",m);m>-1&&d>-1&&(this.annotation=this.getAnnotationURL(u.substring(m,d)));}decodeInline(u){let f=/^data:application\\/json;charset=utf-?8;base64,/,m=/^data:application\\/json;base64,/,d=/^data:application\\/json;charset=utf-?8,/,p=/^data:application\\/json,/;if(d.test(u)||p.test(u))return decodeURIComponent(u.substr(RegExp.lastMatch.length));if(f.test(u)||m.test(u))return l(u.substr(RegExp.lastMatch.length));let c=u.match(/data:application\\/json;([^,]+),/)[1];throw new Error(\"Unsupported source map encoding \"+c)}loadFile(u){if(this.root=n(u),s(u))return this.mapFile=u,a(u,\"utf-8\").toString().trim()}loadMap(u,f){if(f===!1)return !1;if(f){if(typeof f==\"string\")return f;if(typeof f==\"function\"){let m=f(u);if(m){let d=this.loadFile(m);if(!d)throw new Error(\"Unable to load previous source map: \"+m.toString());return d}}else {if(f instanceof r)return i.fromSourceMap(f).toString();if(f instanceof i)return f.toString();if(this.isMap(f))return JSON.stringify(f);throw new Error(\"Unsupported previous source map format: \"+f.toString())}}else {if(this.inline)return this.decodeInline(this.annotation);if(this.annotation){let m=this.annotation;return u&&(m=o(n(u),m)),this.loadFile(m)}}}isMap(u){return typeof u!=\"object\"?!1:typeof u.mappings==\"string\"||typeof u._mappings==\"string\"||Array.isArray(u.sections)}};e.exports=h,h.default=h;}),oa=et((t,e)=>{var{SourceMapConsumer:r,SourceMapGenerator:i}=ze(),{fileURLToPath:s,pathToFileURL:a}=vi(),{resolve:n,isAbsolute:o}=Ne(),{nanoid:l}=Xs(),h=aa(),u=na(),f=Zo(),m=Symbol(\"fromOffsetCache\"),d=!!(r&&i),p=!!(n&&o),c=class{constructor(v,y={}){if(v===null||typeof v>\"u\"||typeof v==\"object\"&&!v.toString)throw new Error(`PostCSS received ${v} instead of CSS string`);if(this.css=v.toString(),this.css[0]===\"\\uFEFF\"||this.css[0]===\"\\uFFFE\"?(this.hasBOM=!0,this.css=this.css.slice(1)):this.hasBOM=!1,y.from&&(!p||/^\\w+:\\/\\//.test(y.from)||o(y.from)?this.file=y.from:this.file=n(y.from)),p&&d){let g=new f(this.css,y);if(g.text){this.map=g;let b=g.consumer().file;!this.file&&b&&(this.file=this.mapResolve(b));}}this.file||(this.id=\"<input css \"+l(6)+\">\"),this.map&&(this.map.file=this.from);}fromOffset(v){let y,g;if(this[m])g=this[m];else {let x=this.css.split(`\n`);g=new Array(x.length);let S=0;for(let C=0,_=x.length;C<_;C++)g[C]=S,S+=x[C].length+1;this[m]=g;}y=g[g.length-1];let b=0;if(v>=y)b=g.length-1;else {let x=g.length-2,S;for(;b<x;)if(S=b+(x-b>>1),v<g[S])x=S-1;else if(v>=g[S+1])b=S+1;else {b=S;break}}return {line:b+1,col:v-g[b]+1}}error(v,y,g,b={}){let x,S,C;if(y&&typeof y==\"object\"){let T=y,L=g;if(typeof T.offset==\"number\"){let G=this.fromOffset(T.offset);y=G.line,g=G.col;}else y=T.line,g=T.column;if(typeof L.offset==\"number\"){let G=this.fromOffset(L.offset);S=G.line,C=G.col;}else S=L.line,C=L.column;}else if(!g){let T=this.fromOffset(y);y=T.line,g=T.col;}let _=this.origin(y,g,S,C);return _?x=new u(v,_.endLine===void 0?_.line:{line:_.line,column:_.column},_.endLine===void 0?_.column:{line:_.endLine,column:_.endColumn},_.source,_.file,b.plugin):x=new u(v,S===void 0?y:{line:y,column:g},S===void 0?g:{line:S,column:C},this.css,this.file,b.plugin),x.input={line:y,column:g,endLine:S,endColumn:C,source:this.css},this.file&&(a&&(x.input.url=a(this.file).toString()),x.input.file=this.file),x}origin(v,y,g,b){if(!this.map)return !1;let x=this.map.consumer(),S=x.originalPositionFor({line:v,column:y});if(!S.source)return !1;let C;typeof g==\"number\"&&(C=x.originalPositionFor({line:g,column:b}));let _;o(S.source)?_=a(S.source):_=new URL(S.source,this.map.consumer().sourceRoot||a(this.map.mapFile));let T={url:_.toString(),line:S.line,column:S.column,endLine:C&&C.line,endColumn:C&&C.column};if(_.protocol===\"file:\")if(s)T.file=s(_);else throw new Error(\"file: protocol is not available in this PostCSS build\");let L=x.sourceContentFor(S.source);return L&&(T.source=L),T}mapResolve(v){return /^\\w+:\\/\\//.test(v)?v:n(this.map.consumer().sourceRoot||this.map.root||\".\",v)}get from(){return this.file||this.id}toJSON(){let v={};for(let y of [\"hasBOM\",\"css\",\"file\",\"id\"])this[y]!=null&&(v[y]=this[y]);return this.map&&(v.map={...this.map},v.map.consumerCache&&(v.map.consumerCache=void 0)),v}};e.exports=c,c.default=c,h&&h.registerInput&&h.registerInput(c);}),la=et((t,e)=>{e.exports.isClean=Symbol(\"isClean\"),e.exports.my=Symbol(\"my\");}),Pi=et((t,e)=>{var r={colon:\": \",indent:\"    \",beforeDecl:`\n`,beforeRule:`\n`,beforeOpen:\" \",beforeClose:`\n`,beforeComment:`\n`,after:`\n`,emptyBody:\"\",commentLeft:\" \",commentRight:\" \",semicolon:!1};function i(a){return a[0].toUpperCase()+a.slice(1)}var s=class{constructor(a){this.builder=a;}stringify(a,n){if(!this[a.type])throw new Error(\"Unknown AST node type \"+a.type+\". Maybe you need to change PostCSS stringifier.\");this[a.type](a,n);}document(a){this.body(a);}root(a){this.body(a),a.raws.after&&this.builder(a.raws.after);}comment(a){let n=this.raw(a,\"left\",\"commentLeft\"),o=this.raw(a,\"right\",\"commentRight\");this.builder(\"/*\"+n+a.text+o+\"*/\",a);}decl(a,n){let o=this.raw(a,\"between\",\"colon\"),l=a.prop+o+this.rawValue(a,\"value\");a.important&&(l+=a.raws.important||\" !important\"),n&&(l+=\";\"),this.builder(l,a);}rule(a){this.block(a,this.rawValue(a,\"selector\")),a.raws.ownSemicolon&&this.builder(a.raws.ownSemicolon,a,\"end\");}atrule(a,n){let o=\"@\"+a.name,l=a.params?this.rawValue(a,\"params\"):\"\";if(typeof a.raws.afterName<\"u\"?o+=a.raws.afterName:l&&(o+=\" \"),a.nodes)this.block(a,o+l);else {let h=(a.raws.between||\"\")+(n?\";\":\"\");this.builder(o+l+h,a);}}body(a){let n=a.nodes.length-1;for(;n>0&&a.nodes[n].type===\"comment\";)n-=1;let o=this.raw(a,\"semicolon\");for(let l=0;l<a.nodes.length;l++){let h=a.nodes[l],u=this.raw(h,\"before\");u&&this.builder(u),this.stringify(h,n!==l||o);}}block(a,n){let o=this.raw(a,\"between\",\"beforeOpen\");this.builder(n+o+\"{\",a,\"start\");let l;a.nodes&&a.nodes.length?(this.body(a),l=this.raw(a,\"after\")):l=this.raw(a,\"after\",\"emptyBody\"),l&&this.builder(l),this.builder(\"}\",a,\"end\");}raw(a,n,o){let l;if(o||(o=n),n&&(l=a.raws[n],typeof l<\"u\"))return l;let h=a.parent;if(o===\"before\"&&(!h||h.type===\"root\"&&h.first===a||h&&h.type===\"document\"))return \"\";if(!h)return r[o];let u=a.root();if(u.rawCache||(u.rawCache={}),typeof u.rawCache[o]<\"u\")return u.rawCache[o];if(o===\"before\"||o===\"after\")return this.beforeAfter(a,o);{let f=\"raw\"+i(o);this[f]?l=this[f](u,a):u.walk(m=>{if(l=m.raws[n],typeof l<\"u\")return !1});}return typeof l>\"u\"&&(l=r[o]),u.rawCache[o]=l,l}rawSemicolon(a){let n;return a.walk(o=>{if(o.nodes&&o.nodes.length&&o.last.type===\"decl\"&&(n=o.raws.semicolon,typeof n<\"u\"))return !1}),n}rawEmptyBody(a){let n;return a.walk(o=>{if(o.nodes&&o.nodes.length===0&&(n=o.raws.after,typeof n<\"u\"))return !1}),n}rawIndent(a){if(a.raws.indent)return a.raws.indent;let n;return a.walk(o=>{let l=o.parent;if(l&&l!==a&&l.parent&&l.parent===a&&typeof o.raws.before<\"u\"){let h=o.raws.before.split(`\n`);return n=h[h.length-1],n=n.replace(/\\S/g,\"\"),!1}}),n}rawBeforeComment(a,n){let o;return a.walkComments(l=>{if(typeof l.raws.before<\"u\")return o=l.raws.before,o.includes(`\n`)&&(o=o.replace(/[^\\n]+$/,\"\")),!1}),typeof o>\"u\"?o=this.raw(n,null,\"beforeDecl\"):o&&(o=o.replace(/\\S/g,\"\")),o}rawBeforeDecl(a,n){let o;return a.walkDecls(l=>{if(typeof l.raws.before<\"u\")return o=l.raws.before,o.includes(`\n`)&&(o=o.replace(/[^\\n]+$/,\"\")),!1}),typeof o>\"u\"?o=this.raw(n,null,\"beforeRule\"):o&&(o=o.replace(/\\S/g,\"\")),o}rawBeforeRule(a){let n;return a.walk(o=>{if(o.nodes&&(o.parent!==a||a.first!==o)&&typeof o.raws.before<\"u\")return n=o.raws.before,n.includes(`\n`)&&(n=n.replace(/[^\\n]+$/,\"\")),!1}),n&&(n=n.replace(/\\S/g,\"\")),n}rawBeforeClose(a){let n;return a.walk(o=>{if(o.nodes&&o.nodes.length>0&&typeof o.raws.after<\"u\")return n=o.raws.after,n.includes(`\n`)&&(n=n.replace(/[^\\n]+$/,\"\")),!1}),n&&(n=n.replace(/\\S/g,\"\")),n}rawBeforeOpen(a){let n;return a.walk(o=>{if(o.type!==\"decl\"&&(n=o.raws.between,typeof n<\"u\"))return !1}),n}rawColon(a){let n;return a.walkDecls(o=>{if(typeof o.raws.between<\"u\")return n=o.raws.between.replace(/[^\\s:]/g,\"\"),!1}),n}beforeAfter(a,n){let o;a.type===\"decl\"?o=this.raw(a,null,\"beforeDecl\"):a.type===\"comment\"?o=this.raw(a,null,\"beforeComment\"):n===\"before\"?o=this.raw(a,null,\"beforeRule\"):o=this.raw(a,null,\"beforeClose\");let l=a.parent,h=0;for(;l&&l.type!==\"root\";)h+=1,l=l.parent;if(o.includes(`\n`)){let u=this.raw(a,null,\"indent\");if(u.length)for(let f=0;f<h;f++)o+=u;}return o}rawValue(a,n){let o=a[n],l=a.raws[n];return l&&l.value===o?l.raw:o}};e.exports=s,s.default=s;}),Qo=et((t,e)=>{var r=Pi();function i(s,a){new r(a).stringify(s);}e.exports=i,i.default=i;}),je=et((t,e)=>{var{isClean:r,my:i}=la(),s=na(),a=Pi(),n=Qo();function o(h,u){let f=new h.constructor;for(let m in h){if(!Object.prototype.hasOwnProperty.call(h,m)||m===\"proxyCache\")continue;let d=h[m],p=typeof d;m===\"parent\"&&p===\"object\"?u&&(f[m]=u):m===\"source\"?f[m]=d:Array.isArray(d)?f[m]=d.map(c=>o(c,f)):(p===\"object\"&&d!==null&&(d=o(d)),f[m]=d);}return f}var l=class{constructor(h={}){this.raws={},this[r]=!1,this[i]=!0;for(let u in h)if(u===\"nodes\"){this.nodes=[];for(let f of h[u])typeof f.clone==\"function\"?this.append(f.clone()):this.append(f);}else this[u]=h[u];}error(h,u={}){if(this.source){let{start:f,end:m}=this.rangeBy(u);return this.source.input.error(h,{line:f.line,column:f.column},{line:m.line,column:m.column},u)}return new s(h)}warn(h,u,f){let m={node:this};for(let d in f)m[d]=f[d];return h.warn(u,m)}remove(){return this.parent&&this.parent.removeChild(this),this.parent=void 0,this}toString(h=n){h.stringify&&(h=h.stringify);let u=\"\";return h(this,f=>{u+=f;}),u}assign(h={}){for(let u in h)this[u]=h[u];return this}clone(h={}){let u=o(this);for(let f in h)u[f]=h[f];return u}cloneBefore(h={}){let u=this.clone(h);return this.parent.insertBefore(this,u),u}cloneAfter(h={}){let u=this.clone(h);return this.parent.insertAfter(this,u),u}replaceWith(...h){if(this.parent){let u=this,f=!1;for(let m of h)m===this?f=!0:f?(this.parent.insertAfter(u,m),u=m):this.parent.insertBefore(u,m);f||this.remove();}return this}next(){if(!this.parent)return;let h=this.parent.index(this);return this.parent.nodes[h+1]}prev(){if(!this.parent)return;let h=this.parent.index(this);return this.parent.nodes[h-1]}before(h){return this.parent.insertBefore(this,h),this}after(h){return this.parent.insertAfter(this,h),this}root(){let h=this;for(;h.parent&&h.parent.type!==\"document\";)h=h.parent;return h}raw(h,u){return new a().raw(this,h,u)}cleanRaws(h){delete this.raws.before,delete this.raws.after,h||delete this.raws.between;}toJSON(h,u){let f={},m=u==null;u=u||new Map;let d=0;for(let p in this){if(!Object.prototype.hasOwnProperty.call(this,p)||p===\"parent\"||p===\"proxyCache\")continue;let c=this[p];if(Array.isArray(c))f[p]=c.map(v=>typeof v==\"object\"&&v.toJSON?v.toJSON(null,u):v);else if(typeof c==\"object\"&&c.toJSON)f[p]=c.toJSON(null,u);else if(p===\"source\"){let v=u.get(c.input);v==null&&(v=d,u.set(c.input,d),d++),f[p]={inputId:v,start:c.start,end:c.end};}else f[p]=c;}return m&&(f.inputs=[...u.keys()].map(p=>p.toJSON())),f}positionInside(h){let u=this.toString(),f=this.source.start.column,m=this.source.start.line;for(let d=0;d<h;d++)u[d]===`\n`?(f=1,m+=1):f+=1;return {line:m,column:f}}positionBy(h){let u=this.source.start;if(h.index)u=this.positionInside(h.index);else if(h.word){let f=this.toString().indexOf(h.word);f!==-1&&(u=this.positionInside(f));}return u}rangeBy(h){let u={line:this.source.start.line,column:this.source.start.column},f=this.source.end?{line:this.source.end.line,column:this.source.end.column+1}:{line:u.line,column:u.column+1};if(h.word){let m=this.toString().indexOf(h.word);m!==-1&&(u=this.positionInside(m),f=this.positionInside(m+h.word.length));}else h.start?u={line:h.start.line,column:h.start.column}:h.index&&(u=this.positionInside(h.index)),h.end?f={line:h.end.line,column:h.end.column}:h.endIndex?f=this.positionInside(h.endIndex):h.index&&(f=this.positionInside(h.index+1));return (f.line<u.line||f.line===u.line&&f.column<=u.column)&&(f={line:u.line,column:u.column+1}),{start:u,end:f}}getProxyProcessor(){return {set(h,u,f){return h[u]===f||(h[u]=f,(u===\"prop\"||u===\"value\"||u===\"name\"||u===\"params\"||u===\"important\"||u===\"text\")&&h.markDirty()),!0},get(h,u){return u===\"proxyOf\"?h:u===\"root\"?()=>h.root().toProxy():h[u]}}}toProxy(){return this.proxyCache||(this.proxyCache=new Proxy(this,this.getProxyProcessor())),this.proxyCache}addToError(h){if(h.postcssNode=this,h.stack&&this.source&&/\\n\\s{4}at /.test(h.stack)){let u=this.source;h.stack=h.stack.replace(/\\n\\s{4}at /,`$&${u.input.from}:${u.start.line}:${u.start.column}$&`);}return h}markDirty(){if(this[r]){this[r]=!1;let h=this;for(;h=h.parent;)h[r]=!1;}}get proxyOf(){return this}};e.exports=l,l.default=l;}),ha=et((t,e)=>{var r=je(),i=class extends r{constructor(s){s&&typeof s.value<\"u\"&&typeof s.value!=\"string\"&&(s={...s,value:String(s.value)}),super(s),this.type=\"decl\";}get variable(){return this.prop.startsWith(\"--\")||this.prop[0]===\"$\"}};e.exports=i,i.default=i;}),pa=et((t,e)=>{var r=\"'\".charCodeAt(0),i='\"'.charCodeAt(0),s=\"\\\\\".charCodeAt(0),a=\"/\".charCodeAt(0),n=`\n`.charCodeAt(0),o=\" \".charCodeAt(0),l=\"\\f\".charCodeAt(0),h=\"\t\".charCodeAt(0),u=\"\\r\".charCodeAt(0),f=\"[\".charCodeAt(0),m=\"]\".charCodeAt(0),d=\"(\".charCodeAt(0),p=\")\".charCodeAt(0),c=\"{\".charCodeAt(0),v=\"}\".charCodeAt(0),y=\";\".charCodeAt(0),g=\"*\".charCodeAt(0),b=\":\".charCodeAt(0),x=\"@\".charCodeAt(0),S=/[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g,C=/[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g,_=/.[\\n\"'(/\\\\]/,T=/[\\da-f]/i;e.exports=function(L,G={}){let R=L.css.valueOf(),j=G.ignoreErrors,$,F,W,A,M,P,E,O,I,Z,K=R.length,q=0,H=[],Q=[];function rt(){return q}function st(ht){throw L.error(\"Unclosed \"+ht,q)}function ut(){return Q.length===0&&q>=K}function mt(ht){if(Q.length)return Q.pop();if(q>=K)return;let at=ht?ht.ignoreUnclosed:!1;switch($=R.charCodeAt(q),$){case n:case o:case h:case u:case l:{F=q;do F+=1,$=R.charCodeAt(F);while($===o||$===n||$===h||$===u||$===l);Z=[\"space\",R.slice(q,F)],q=F-1;break}case f:case m:case c:case v:case b:case y:case p:{let tt=String.fromCharCode($);Z=[tt,tt,q];break}case d:{if(O=H.length?H.pop()[1]:\"\",I=R.charCodeAt(q+1),O===\"url\"&&I!==r&&I!==i&&I!==o&&I!==n&&I!==h&&I!==l&&I!==u){F=q;do{if(P=!1,F=R.indexOf(\")\",F+1),F===-1)if(j||at){F=q;break}else st(\"bracket\");for(E=F;R.charCodeAt(E-1)===s;)E-=1,P=!P;}while(P);Z=[\"brackets\",R.slice(q,F+1),q,F],q=F;}else F=R.indexOf(\")\",q+1),A=R.slice(q,F+1),F===-1||_.test(A)?Z=[\"(\",\"(\",q]:(Z=[\"brackets\",A,q,F],q=F);break}case r:case i:{W=$===r?\"'\":'\"',F=q;do{if(P=!1,F=R.indexOf(W,F+1),F===-1)if(j||at){F=q+1;break}else st(\"string\");for(E=F;R.charCodeAt(E-1)===s;)E-=1,P=!P;}while(P);Z=[\"string\",R.slice(q,F+1),q,F],q=F;break}case x:{S.lastIndex=q+1,S.test(R),S.lastIndex===0?F=R.length-1:F=S.lastIndex-2,Z=[\"at-word\",R.slice(q,F+1),q,F],q=F;break}case s:{for(F=q,M=!0;R.charCodeAt(F+1)===s;)F+=1,M=!M;if($=R.charCodeAt(F+1),M&&$!==a&&$!==o&&$!==n&&$!==h&&$!==u&&$!==l&&(F+=1,T.test(R.charAt(F)))){for(;T.test(R.charAt(F+1));)F+=1;R.charCodeAt(F+1)===o&&(F+=1);}Z=[\"word\",R.slice(q,F+1),q,F],q=F;break}default:{$===a&&R.charCodeAt(q+1)===g?(F=R.indexOf(\"*/\",q+2)+1,F===0&&(j||at?F=R.length:st(\"comment\")),Z=[\"comment\",R.slice(q,F+1),q,F],q=F):(C.lastIndex=q+1,C.test(R),C.lastIndex===0?F=R.length-1:F=C.lastIndex-2,Z=[\"word\",R.slice(q,F+1),q,F],H.push(Z),q=F);break}}return q++,Z}function ot(ht){Q.push(ht);}return {back:ot,nextToken:mt,endOfFile:ut,position:rt}};}),Ci=et((t,e)=>{var r=je(),i=class extends r{constructor(s){super(s),this.type=\"comment\";}};e.exports=i,i.default=i;}),He=et((t,e)=>{var{isClean:r,my:i}=la(),s=ha(),a=Ci(),n=je(),o,l,h,u;function f(p){return p.map(c=>(c.nodes&&(c.nodes=f(c.nodes)),delete c.source,c))}function m(p){if(p[r]=!1,p.proxyOf.nodes)for(let c of p.proxyOf.nodes)m(c);}var d=class extends n{push(p){return p.parent=this,this.proxyOf.nodes.push(p),this}each(p){if(!this.proxyOf.nodes)return;let c=this.getIterator(),v,y;for(;this.indexes[c]<this.proxyOf.nodes.length&&(v=this.indexes[c],y=p(this.proxyOf.nodes[v],v),y!==!1);)this.indexes[c]+=1;return delete this.indexes[c],y}walk(p){return this.each((c,v)=>{let y;try{y=p(c,v);}catch(g){throw c.addToError(g)}return y!==!1&&c.walk&&(y=c.walk(p)),y})}walkDecls(p,c){return c?p instanceof RegExp?this.walk((v,y)=>{if(v.type===\"decl\"&&p.test(v.prop))return c(v,y)}):this.walk((v,y)=>{if(v.type===\"decl\"&&v.prop===p)return c(v,y)}):(c=p,this.walk((v,y)=>{if(v.type===\"decl\")return c(v,y)}))}walkRules(p,c){return c?p instanceof RegExp?this.walk((v,y)=>{if(v.type===\"rule\"&&p.test(v.selector))return c(v,y)}):this.walk((v,y)=>{if(v.type===\"rule\"&&v.selector===p)return c(v,y)}):(c=p,this.walk((v,y)=>{if(v.type===\"rule\")return c(v,y)}))}walkAtRules(p,c){return c?p instanceof RegExp?this.walk((v,y)=>{if(v.type===\"atrule\"&&p.test(v.name))return c(v,y)}):this.walk((v,y)=>{if(v.type===\"atrule\"&&v.name===p)return c(v,y)}):(c=p,this.walk((v,y)=>{if(v.type===\"atrule\")return c(v,y)}))}walkComments(p){return this.walk((c,v)=>{if(c.type===\"comment\")return p(c,v)})}append(...p){for(let c of p){let v=this.normalize(c,this.last);for(let y of v)this.proxyOf.nodes.push(y);}return this.markDirty(),this}prepend(...p){p=p.reverse();for(let c of p){let v=this.normalize(c,this.first,\"prepend\").reverse();for(let y of v)this.proxyOf.nodes.unshift(y);for(let y in this.indexes)this.indexes[y]=this.indexes[y]+v.length;}return this.markDirty(),this}cleanRaws(p){if(super.cleanRaws(p),this.nodes)for(let c of this.nodes)c.cleanRaws(p);}insertBefore(p,c){let v=this.index(p),y=v===0?\"prepend\":!1,g=this.normalize(c,this.proxyOf.nodes[v],y).reverse();v=this.index(p);for(let x of g)this.proxyOf.nodes.splice(v,0,x);let b;for(let x in this.indexes)b=this.indexes[x],v<=b&&(this.indexes[x]=b+g.length);return this.markDirty(),this}insertAfter(p,c){let v=this.index(p),y=this.normalize(c,this.proxyOf.nodes[v]).reverse();v=this.index(p);for(let b of y)this.proxyOf.nodes.splice(v+1,0,b);let g;for(let b in this.indexes)g=this.indexes[b],v<g&&(this.indexes[b]=g+y.length);return this.markDirty(),this}removeChild(p){p=this.index(p),this.proxyOf.nodes[p].parent=void 0,this.proxyOf.nodes.splice(p,1);let c;for(let v in this.indexes)c=this.indexes[v],c>=p&&(this.indexes[v]=c-1);return this.markDirty(),this}removeAll(){for(let p of this.proxyOf.nodes)p.parent=void 0;return this.proxyOf.nodes=[],this.markDirty(),this}replaceValues(p,c,v){return v||(v=c,c={}),this.walkDecls(y=>{c.props&&!c.props.includes(y.prop)||c.fast&&!y.value.includes(c.fast)||(y.value=y.value.replace(p,v));}),this.markDirty(),this}every(p){return this.nodes.every(p)}some(p){return this.nodes.some(p)}index(p){return typeof p==\"number\"?p:(p.proxyOf&&(p=p.proxyOf),this.proxyOf.nodes.indexOf(p))}get first(){if(this.proxyOf.nodes)return this.proxyOf.nodes[0]}get last(){if(this.proxyOf.nodes)return this.proxyOf.nodes[this.proxyOf.nodes.length-1]}normalize(p,c){if(typeof p==\"string\")p=f(o(p).nodes);else if(Array.isArray(p)){p=p.slice(0);for(let v of p)v.parent&&v.parent.removeChild(v,\"ignore\");}else if(p.type===\"root\"&&this.type!==\"document\"){p=p.nodes.slice(0);for(let v of p)v.parent&&v.parent.removeChild(v,\"ignore\");}else if(p.type)p=[p];else if(p.prop){if(typeof p.value>\"u\")throw new Error(\"Value field is missed in node creation\");typeof p.value!=\"string\"&&(p.value=String(p.value)),p=[new s(p)];}else if(p.selector)p=[new l(p)];else if(p.name)p=[new h(p)];else if(p.text)p=[new a(p)];else throw new Error(\"Unknown node type in node creation\");return p.map(v=>(v[i]||d.rebuild(v),v=v.proxyOf,v.parent&&v.parent.removeChild(v),v[r]&&m(v),typeof v.raws.before>\"u\"&&c&&typeof c.raws.before<\"u\"&&(v.raws.before=c.raws.before.replace(/\\S/g,\"\")),v.parent=this.proxyOf,v))}getProxyProcessor(){return {set(p,c,v){return p[c]===v||(p[c]=v,(c===\"name\"||c===\"params\"||c===\"selector\")&&p.markDirty()),!0},get(p,c){return c===\"proxyOf\"?p:p[c]?c===\"each\"||typeof c==\"string\"&&c.startsWith(\"walk\")?(...v)=>p[c](...v.map(y=>typeof y==\"function\"?(g,b)=>y(g.toProxy(),b):y)):c===\"every\"||c===\"some\"?v=>p[c]((y,...g)=>v(y.toProxy(),...g)):c===\"root\"?()=>p.root().toProxy():c===\"nodes\"?p.nodes.map(v=>v.toProxy()):c===\"first\"||c===\"last\"?p[c].toProxy():p[c]:p[c]}}}getIterator(){this.lastEach||(this.lastEach=0),this.indexes||(this.indexes={}),this.lastEach+=1;let p=this.lastEach;return this.indexes[p]=0,p}};d.registerParse=p=>{o=p;},d.registerRule=p=>{l=p;},d.registerAtRule=p=>{h=p;},d.registerRoot=p=>{u=p;},e.exports=d,d.default=d,d.rebuild=p=>{p.type===\"atrule\"?Object.setPrototypeOf(p,h.prototype):p.type===\"rule\"?Object.setPrototypeOf(p,l.prototype):p.type===\"decl\"?Object.setPrototypeOf(p,s.prototype):p.type===\"comment\"?Object.setPrototypeOf(p,a.prototype):p.type===\"root\"&&Object.setPrototypeOf(p,u.prototype),p[i]=!0,p.nodes&&p.nodes.forEach(c=>{d.rebuild(c);});};}),tl=et((t,e)=>{var r=He(),i=class extends r{constructor(s){super(s),this.type=\"atrule\";}append(...s){return this.proxyOf.nodes||(this.nodes=[]),super.append(...s)}prepend(...s){return this.proxyOf.nodes||(this.nodes=[]),super.prepend(...s)}};e.exports=i,i.default=i,r.registerAtRule(i);}),el=et((t,e)=>{var r=He(),i,s,a=class extends r{constructor(n){super(n),this.type=\"root\",this.nodes||(this.nodes=[]);}removeChild(n,o){let l=this.index(n);return !o&&l===0&&this.nodes.length>1&&(this.nodes[1].raws.before=this.nodes[l].raws.before),super.removeChild(n)}normalize(n,o,l){let h=super.normalize(n);if(o){if(l===\"prepend\")this.nodes.length>1?o.raws.before=this.nodes[1].raws.before:delete o.raws.before;else if(this.first!==o)for(let u of h)u.raws.before=o.raws.before;}return h}toResult(n={}){return new i(new s,this,n).stringify()}};a.registerLazyResult=n=>{i=n;},a.registerProcessor=n=>{s=n;},e.exports=a,a.default=a,r.registerRoot(a);}),rl=et((t,e)=>{var r={split(i,s,a){let n=[],o=\"\",l=!1,h=0,u=!1,f=\"\",m=!1;for(let d of i)m?m=!1:d===\"\\\\\"?m=!0:u?d===f&&(u=!1):d==='\"'||d===\"'\"?(u=!0,f=d):d===\"(\"?h+=1:d===\")\"?h>0&&(h-=1):h===0&&s.includes(d)&&(l=!0),l?(o!==\"\"&&n.push(o.trim()),o=\"\",l=!1):o+=d;return (a||o!==\"\")&&n.push(o.trim()),n},space(i){let s=[\" \",`\n`,\"\t\"];return r.split(i,s)},comma(i){return r.split(i,[\",\"],!0)}};e.exports=r,r.default=r;}),il=et((t,e)=>{var r=He(),i=rl(),s=class extends r{constructor(a){super(a),this.type=\"rule\",this.nodes||(this.nodes=[]);}get selectors(){return i.comma(this.selector)}set selectors(a){let n=this.selector?this.selector.match(/,\\s*/):null,o=n?n[0]:\",\"+this.raw(\"between\",\"beforeOpen\");this.selector=a.join(o);}};e.exports=s,s.default=s,r.registerRule(s);}),sl=et((t,e)=>{var r=ha(),i=pa(),s=Ci(),a=tl(),n=el(),o=il(),l={empty:!0,space:!0};function h(f){for(let m=f.length-1;m>=0;m--){let d=f[m],p=d[3]||d[2];if(p)return p}}var u=class{constructor(f){this.input=f,this.root=new n,this.current=this.root,this.spaces=\"\",this.semicolon=!1,this.customProperty=!1,this.createTokenizer(),this.root.source={input:f,start:{offset:0,line:1,column:1}};}createTokenizer(){this.tokenizer=i(this.input);}parse(){let f;for(;!this.tokenizer.endOfFile();)switch(f=this.tokenizer.nextToken(),f[0]){case\"space\":this.spaces+=f[1];break;case\";\":this.freeSemicolon(f);break;case\"}\":this.end(f);break;case\"comment\":this.comment(f);break;case\"at-word\":this.atrule(f);break;case\"{\":this.emptyRule(f);break;default:this.other(f);break}this.endFile();}comment(f){let m=new s;this.init(m,f[2]),m.source.end=this.getPosition(f[3]||f[2]);let d=f[1].slice(2,-2);if(/^\\s*$/.test(d))m.text=\"\",m.raws.left=d,m.raws.right=\"\";else {let p=d.match(/^(\\s*)([^]*\\S)(\\s*)$/);m.text=p[2],m.raws.left=p[1],m.raws.right=p[3];}}emptyRule(f){let m=new o;this.init(m,f[2]),m.selector=\"\",m.raws.between=\"\",this.current=m;}other(f){let m=!1,d=null,p=!1,c=null,v=[],y=f[1].startsWith(\"--\"),g=[],b=f;for(;b;){if(d=b[0],g.push(b),d===\"(\"||d===\"[\")c||(c=b),v.push(d===\"(\"?\")\":\"]\");else if(y&&p&&d===\"{\")c||(c=b),v.push(\"}\");else if(v.length===0)if(d===\";\")if(p){this.decl(g,y);return}else break;else if(d===\"{\"){this.rule(g);return}else if(d===\"}\"){this.tokenizer.back(g.pop()),m=!0;break}else d===\":\"&&(p=!0);else d===v[v.length-1]&&(v.pop(),v.length===0&&(c=null));b=this.tokenizer.nextToken();}if(this.tokenizer.endOfFile()&&(m=!0),v.length>0&&this.unclosedBracket(c),m&&p){if(!y)for(;g.length&&(b=g[g.length-1][0],!(b!==\"space\"&&b!==\"comment\"));)this.tokenizer.back(g.pop());this.decl(g,y);}else this.unknownWord(g);}rule(f){f.pop();let m=new o;this.init(m,f[0][2]),m.raws.between=this.spacesAndCommentsFromEnd(f),this.raw(m,\"selector\",f),this.current=m;}decl(f,m){let d=new r;this.init(d,f[0][2]);let p=f[f.length-1];for(p[0]===\";\"&&(this.semicolon=!0,f.pop()),d.source.end=this.getPosition(p[3]||p[2]||h(f));f[0][0]!==\"word\";)f.length===1&&this.unknownWord(f),d.raws.before+=f.shift()[1];for(d.source.start=this.getPosition(f[0][2]),d.prop=\"\";f.length;){let g=f[0][0];if(g===\":\"||g===\"space\"||g===\"comment\")break;d.prop+=f.shift()[1];}d.raws.between=\"\";let c;for(;f.length;)if(c=f.shift(),c[0]===\":\"){d.raws.between+=c[1];break}else c[0]===\"word\"&&/\\w/.test(c[1])&&this.unknownWord([c]),d.raws.between+=c[1];(d.prop[0]===\"_\"||d.prop[0]===\"*\")&&(d.raws.before+=d.prop[0],d.prop=d.prop.slice(1));let v=[],y;for(;f.length&&(y=f[0][0],!(y!==\"space\"&&y!==\"comment\"));)v.push(f.shift());this.precheckMissedSemicolon(f);for(let g=f.length-1;g>=0;g--){if(c=f[g],c[1].toLowerCase()===\"!important\"){d.important=!0;let b=this.stringFrom(f,g);b=this.spacesFromEnd(f)+b,b!==\" !important\"&&(d.raws.important=b);break}else if(c[1].toLowerCase()===\"important\"){let b=f.slice(0),x=\"\";for(let S=g;S>0;S--){let C=b[S][0];if(x.trim().indexOf(\"!\")===0&&C!==\"space\")break;x=b.pop()[1]+x;}x.trim().indexOf(\"!\")===0&&(d.important=!0,d.raws.important=x,f=b);}if(c[0]!==\"space\"&&c[0]!==\"comment\")break}f.some(g=>g[0]!==\"space\"&&g[0]!==\"comment\")&&(d.raws.between+=v.map(g=>g[1]).join(\"\"),v=[]),this.raw(d,\"value\",v.concat(f),m),d.value.includes(\":\")&&!m&&this.checkMissedSemicolon(f);}atrule(f){let m=new a;m.name=f[1].slice(1),m.name===\"\"&&this.unnamedAtrule(m,f),this.init(m,f[2]);let d,p,c,v=!1,y=!1,g=[],b=[];for(;!this.tokenizer.endOfFile();){if(f=this.tokenizer.nextToken(),d=f[0],d===\"(\"||d===\"[\"?b.push(d===\"(\"?\")\":\"]\"):d===\"{\"&&b.length>0?b.push(\"}\"):d===b[b.length-1]&&b.pop(),b.length===0)if(d===\";\"){m.source.end=this.getPosition(f[2]),this.semicolon=!0;break}else if(d===\"{\"){y=!0;break}else if(d===\"}\"){if(g.length>0){for(c=g.length-1,p=g[c];p&&p[0]===\"space\";)p=g[--c];p&&(m.source.end=this.getPosition(p[3]||p[2]));}this.end(f);break}else g.push(f);else g.push(f);if(this.tokenizer.endOfFile()){v=!0;break}}m.raws.between=this.spacesAndCommentsFromEnd(g),g.length?(m.raws.afterName=this.spacesAndCommentsFromStart(g),this.raw(m,\"params\",g),v&&(f=g[g.length-1],m.source.end=this.getPosition(f[3]||f[2]),this.spaces=m.raws.between,m.raws.between=\"\")):(m.raws.afterName=\"\",m.params=\"\"),y&&(m.nodes=[],this.current=m);}end(f){this.current.nodes&&this.current.nodes.length&&(this.current.raws.semicolon=this.semicolon),this.semicolon=!1,this.current.raws.after=(this.current.raws.after||\"\")+this.spaces,this.spaces=\"\",this.current.parent?(this.current.source.end=this.getPosition(f[2]),this.current=this.current.parent):this.unexpectedClose(f);}endFile(){this.current.parent&&this.unclosedBlock(),this.current.nodes&&this.current.nodes.length&&(this.current.raws.semicolon=this.semicolon),this.current.raws.after=(this.current.raws.after||\"\")+this.spaces;}freeSemicolon(f){if(this.spaces+=f[1],this.current.nodes){let m=this.current.nodes[this.current.nodes.length-1];m&&m.type===\"rule\"&&!m.raws.ownSemicolon&&(m.raws.ownSemicolon=this.spaces,this.spaces=\"\");}}getPosition(f){let m=this.input.fromOffset(f);return {offset:f,line:m.line,column:m.col}}init(f,m){this.current.push(f),f.source={start:this.getPosition(m),input:this.input},f.raws.before=this.spaces,this.spaces=\"\",f.type!==\"comment\"&&(this.semicolon=!1);}raw(f,m,d,p){let c,v,y=d.length,g=\"\",b=!0,x,S;for(let C=0;C<y;C+=1)c=d[C],v=c[0],v===\"space\"&&C===y-1&&!p?b=!1:v===\"comment\"?(S=d[C-1]?d[C-1][0]:\"empty\",x=d[C+1]?d[C+1][0]:\"empty\",!l[S]&&!l[x]?g.slice(-1)===\",\"?b=!1:g+=c[1]:b=!1):g+=c[1];if(!b){let C=d.reduce((_,T)=>_+T[1],\"\");f.raws[m]={value:g,raw:C};}f[m]=g;}spacesAndCommentsFromEnd(f){let m,d=\"\";for(;f.length&&(m=f[f.length-1][0],!(m!==\"space\"&&m!==\"comment\"));)d=f.pop()[1]+d;return d}spacesAndCommentsFromStart(f){let m,d=\"\";for(;f.length&&(m=f[0][0],!(m!==\"space\"&&m!==\"comment\"));)d+=f.shift()[1];return d}spacesFromEnd(f){let m,d=\"\";for(;f.length&&(m=f[f.length-1][0],m===\"space\");)d=f.pop()[1]+d;return d}stringFrom(f,m){let d=\"\";for(let p=m;p<f.length;p++)d+=f[p][1];return f.splice(m,f.length-m),d}colon(f){let m=0,d,p,c;for(let[v,y]of f.entries()){if(d=y,p=d[0],p===\"(\"&&(m+=1),p===\")\"&&(m-=1),m===0&&p===\":\")if(!c)this.doubleColon(d);else {if(c[0]===\"word\"&&c[1]===\"progid\")continue;return v}c=d;}return !1}unclosedBracket(f){throw this.input.error(\"Unclosed bracket\",{offset:f[2]},{offset:f[2]+1})}unknownWord(f){throw this.input.error(\"Unknown word\",{offset:f[0][2]},{offset:f[0][2]+f[0][1].length})}unexpectedClose(f){throw this.input.error(\"Unexpected }\",{offset:f[2]},{offset:f[2]+1})}unclosedBlock(){let f=this.current.source.start;throw this.input.error(\"Unclosed block\",f.line,f.column)}doubleColon(f){throw this.input.error(\"Double colon\",{offset:f[2]},{offset:f[2]+f[1].length})}unnamedAtrule(f,m){throw this.input.error(\"At-rule without name\",{offset:m[2]},{offset:m[2]+m[1].length})}precheckMissedSemicolon(){}checkMissedSemicolon(f){let m=this.colon(f);if(m===!1)return;let d=0,p;for(let c=m-1;c>=0&&(p=f[c],!(p[0]!==\"space\"&&(d+=1,d===2)));c--);throw this.input.error(\"Missed semicolon\",p[0]===\"word\"?p[3]+1:p[2])}};e.exports=u;}),ae=et((t,e)=>{var r=He(),i=s=>{let a=`walk${s.name}`;a.lastIndexOf(\"s\")!==a.length-1&&(a+=\"s\"),!r.prototype[a]&&(r.prototype[a]=function(n){return this.walkType(s,n)});};r.prototype.walkType=function(s,a){if(!s||!a)throw new Error(\"Parameters {type} and {callback} are required.\");let n=typeof s==\"function\";return this.walk((o,l)=>{if(n&&o instanceof s||!n&&o.type===s)return a.call(this,o,l)})},e.exports={registerWalker:i};}),qe=et((t,e)=>{var r=Pi();e.exports=class fa extends r{static stringify(s,a){new fa(a).stringify(s);}basic(s,a){let n=a||s.value,o=s.raws.after&&this.raw(s,\"after\")||\"\";this.builder(n,s,\"start\"),this.builder(o,s,\"end\");}atword(...s){this.atrule(...s);}comment(s){if(s.inline){let a=this.raw(s,\"left\",\"commentLeft\"),n=this.raw(s,\"right\",\"commentRight\");this.builder(`//${a}${s.text}${n}`,s);}else super.comment(s);}func(s){let a=this.raw(s,\"after\")||\"\";this.builder(`${s.name}(`,s,\"start\");for(let n of s.nodes){let o=n.raws.before?this.raw(n,\"before\"):\"\";o&&this.builder(o),this.stringify(n);}this.builder(`)${a}`,s,\"end\");}interpolation(s){this.basic(s,s.prefix+s.params);}numeric(s){let a=s.value+s.unit;this.basic(s,a);}operator(s){this.basic(s);}punctuation(s){this.basic(s);}quoted(s){this.basic(s);}unicodeRange(s){this.basic(s);}word(s){this.basic(s);}};}),al=et((t,e)=>{var r=je(),{registerWalker:i}=ae(),{stringify:s}=qe(),a=class extends r{toString(n=s){return super.toString(n)}};i(a),e.exports=a;}),nl=et((t,e)=>{var r=Ci(),{stringify:i}=qe(),s=/(\\/\\/)/,a=class extends r{static testInline(n){return s.test(n[1])}static tokenizeNext(n,o){let[l]=n,h=n.findIndex(c=>/\\n/.test(c[1])),u=n,f=[];h>=0&&(u=n.slice(0,h),f=n.slice(h)),u=u.map(c=>c[1]);let m=u.concat(\"~~\").join(\"\"),d=u[u.length-1],p=[\"comment\",m,l[2],l[3],d[2],d[3]];o.back([p,...f]);}static tokenizeInline(n,o){let[l,...h]=n,u=l[1].split(/(\\/\\/.+)/).filter(v=>!!v),f=[],[,,m,,d]=l,[,,,p,,c]=l;for(let v of u){let y=v.slice(0,2)===\"//\",g=y?\"comment\":\"word\";y&&(v+=\"~~\"),v!==u[0]&&(p=c+1),c=p+v.length-1,f.push([g,v,m,p,d,c]);}o.back(f.concat(h));}toString(n=i){return super.toString(n)}};e.exports=a;}),ca=et((t,e)=>{var r=oa(),i=pa(),s=[\"*\",\"-\",\"%\",\"+\",\"/\"],a=/([*/])/g,n=(f,m)=>{let[,,d,p,c,v]=f,y=f[1].slice(1,f[1].length-1),g=l(y);for(let x of g)if(x[0]!==\"space\"){let S=x[5]-x[3];x[2]=d,x[3]+=p,x[4]+=c-1,x[5]=x[3]+S;}let b=[[\"(\",\"(\",d,p,d,p],...g];b.push([\")\",\")\",d,v,c,v]);for(let x of b.reverse())m.back(x);},o=(f,m)=>{let d=f[1].split(/([,])/),p=[],[,,c,,v]=f,[,,,y,,g]=f;for(let b of d){b=b||\",\";let x=b===\",\"?\"comma\":\"word\";b!==d[0]&&(y=g+1),g=y+b.length-1,p.push([x,b,c,y,v,g]);}for(let b of p.reverse())m.back(b);},l=f=>{let m=new r(f,{}),d=u(m),p=[];for(;!d.endOfFile();){let c=d.nextToken();p.push(c);}return p},h=(f,m)=>{let[,d,p,,c,v]=f,y=d.split(a),[,,,g]=f,b=y.map(x=>{let S=[s.includes(x)?\"operator\":\"word\",x,p,g,c,v];return g+=x.length,S});for(let x of b.reverse())m.back(x);},u=(...f)=>{let m=i(...f),d=m.nextToken;return m.nextToken=(...p)=>{let c=d(...p);if(!c)return c;let[v,y]=c;return v===\"brackets\"?(n(c,m),c=d(...p)):v===\"word\"&&(s.includes(y)?c[0]=\"operator\":a.test(y)?(h(c,m),c=d(...p)):y.length>1&&y.includes(\",\")&&(o(c,m),c=d(...p))),c},m};e.exports={getTokens:l,tokenizer:u};}),ua=et((t,e)=>{var r=He(),{stringify:i}=qe(),s=class extends r{toString(a=i){return super.toString(a)}};e.exports=s;}),_e=et((t,e)=>{var r=je(),{stringify:i}=qe(),s=class extends r{toString(a=i){return super.toString(a||{})}};e.exports=s;}),ma=et((t,e)=>{var{getTokens:r}=ca(),{registerWalker:i}=ae(),s=_e(),a=class extends s{constructor(n){super(n),this.type=\"punctuation\";}static get chars(){return [\",\",\":\",\"(\",\")\",\"[\",\"]\",\"{\",\"}\"]}static fromTokens(n,o){o.fromFirst(n,a);}static tokenizeBrackets(n,o){let[l,...h]=n,u=l[1].split(/([()])/g).filter(v=>!!v),f=[],[,,m,,d]=l,[,,,p,,c]=l;for(let v of u){let y=v===\"(\"?\"(\":v===\")\"?\")\":\"word\";if(/^\\s+$/.test(v)&&(y=\"space\"),v!==u[0]&&(p=c+1),c=p+v.length-1,y===\"word\"){let g=r(v);for(let b of g)b[3]+=p-1,f.push(b);}else f.push([y,v,m,p,d,c]);}o.back(f.concat(h));}static tokenizeCommas(n,o){let[l,...h]=n,u=l[1].split(/([,])/g).filter(v=>!!v),f=[],[,,m,,d]=l,[,,,p,,c]=l;for(let v of u)v!==u[0]&&(p=c+1),c=p+v.length-1,f.push([\"word\",v,m,p,d,c]);o.back(f.concat(h));}};i(a),e.exports=a;}),ol=et((t,e)=>{var{getTokens:r}=ca(),{registerWalker:i}=ae(),s=ua(),a=ma(),n=[\"annotation\",\"attr\",\"blur\",\"brightness\",\"calc\",\"character-variant\",\"circle\",\"contrast\",\"cubic-bezier\",\"dir\",\"drop-shadow\",\"element\",\"ellipse\",\"grayscale\",\"hsl\",\"hsla\",\"hue-rotate\",\"image\",\"inset\",\"invert\",\"lang\",\"linear-gradient\",\"matrix\",\"matrix3d\",\"minmax\",\"not\",\"nth-child\",\"nth-last-child\",\"nth-last-of-type\",\"nth-of-type\",\"opacity\",\"ornaments\",\"perspective\",\"polygon\",\"radial-gradient\",\"rect\",\"repeat\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"rgb\",\"rgba\",\"rotate\",\"rotatex\",\"rotatey\",\"rotatez\",\"rotate3d\",\"saturate\",\"scale\",\"scalex\",\"scaley\",\"scalez\",\"scale3d\",\"sepia\",\"skew\",\"skewx\",\"skewy\",\"steps\",\"styleset\",\"stylistic\",\"swash\",\"symbols\",\"translate\",\"translatex\",\"translatey\",\"translatez\",\"translate3d\",\"url\",\"var\"],o=[\"-webkit-\",\"-moz-\",\"-ms-\",\"-o-\"],l=new RegExp(`^(${o.join(\"|\")})?(${n.join(\"|\")})`,\"i\"),h=new RegExp(`^(\\\\${a.chars.join(\"|\\\\\")})`),u=/^(hsla?|hwb|lab|lch|rgba?)$/i,f=/^var$/i,m=/^--[^\\s]+$/,d=class extends s{constructor(p={}){super(p),this.type=\"func\",this.isColor=!1,this.isVar=!1,this.name=p.name||\"\",this.nodes||(this.nodes=[]);}static test(p){return p.length>1&&p[0][0]===\"word\"&&!h.test(p[0][1])&&(p[1][0]===\"brackets\"||p[1][0]===\"(\")}static fromTokens(p,c){let[[,,v,y]]=p,[g,b]=p.splice(0,2),x=new d({name:g[1]}),S=0,C=1,_=b;if(!l.test(x.name)&&!/^[a-zA-Z\\-\\.]+$/.test(x.name)){let j=r(x.name);p.unshift(...j,b),c.back(p);return}c.init(x,v,y),c.current=x,b[0]===\"brackets\"&&(C=b[1].match(/[(]/g).length-1);let T=[];for(let j of p)S<C?(j[1]===\")\"?S+=1:j[1]===\"(\"&&(C+=1),b[1]+=j[1],_=j):T.push(j);S!==C&&c.unclosedBracket(b),[,x.params]=b;let L=b[1].slice(1,-1);if(L.length){let j=c.options;x.name===\"url\"&&(j=Object.assign({},c.options,{ignoreUnknownWords:!0})),j.parentNode=x;let{parse:$}=_i(),F=$(L,j),{nodes:W}=F;for(let A of W)x.push(A);F.raws.after&&(x.last.raws.after=F.raws.after);}c.end(_),c.back(T);let{lastNode:G}=c,{nodes:R}=x;G.isColor=u.test(G.name),G.isVar=f.test(G.name)&&R.length&&m.test(R[0].value);}};i(d),e.exports=d;}),ll=et((t,e)=>{var{registerWalker:r}=ae(),i=ua(),s=class extends i{constructor(a={}){super(a),this.type=\"interpolation\",this.prefix=a.prefix||\"\",this.nodes||(this.nodes=[]);}static test(a,n){let{prefix:o}=n.options.interpolation,[l,h]=a;return a.length>1&&l[0]===\"word\"&&o===l[1]&&h[0]===\"{\"}static fromTokens(a,n){let[[,,o,l]]=a,[h]=a.splice(0,2),[,u]=h,f=new s({prefix:u}),m=[],d=!1,p,c=\"{\";n.init(f,o,l),n.current=f;for(let y of a)d?m.push(y):(y[1]===\"}\"&&(d=!0),c+=y[1],p=y);d||n.unclosedBracket(h),f.params=c;let v=c.slice(1,-1);if(v.length){let{parse:y}=_i(),{nodes:g}=y(v,n.options);for(let b of g)f.push(b);}n.end(p),n.back(m);}};r(s),e.exports=s;}),hl=et((t,e)=>{var{registerWalker:r}=ae(),i=_e(),s=/^([+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[Ee][+-]?\\d+)?)$/,a=/^(-?(?:[-A-Z_a-z]|[^\\x00-\\x7F]|\\\\[^\\n\\f\\r])(?:[-\\w]|[^\\x00-\\x7F]|\\\\[^\\n\\f\\r])*|%)$/,n=new RegExp(`^${s.source.slice(1,-1)+a.source.slice(1,-1)}?$`),o=class extends i{constructor(l={}){super(l),this.type=\"numeric\",this.unit=l.unit||\"\";}static fromTokens(l,h){h.fromFirst(l,o);let[[,u]]=l,[,f,m=\"\"]=u.match(n),{lastNode:d}=h;d.unit=m,d.value=f;}static test(l){return n.test(l)}};r(o),e.exports=o;}),pl=et((t,e)=>{var{registerWalker:r}=ae(),i=_e(),s=[\"+\",\"-\",\"/\",\"*\",\"%\",\"=\",\"<=\",\">=\",\"<\",\">\"],a=new RegExp(\"([/|*}])\"),n=/^[*/]\\b/,o=class extends i{constructor(l){super(l),this.type=\"operator\";}static get chars(){return s}static fromTokens(l,h){h.fromFirst(l,o);}static get regex(){return a}static test(l,h){let[u]=l,[,f]=u,{lastNode:m}=h;return m&&m.type===\"func\"&&n.test(f)}static tokenize(l,h){let[u,...f]=l,[,m,d,,p,c]=u,v=m.split(a).filter(b=>!!b),[,,,y]=u,g=v.map(b=>{let x=[\"word\",b,d,y,p,c];return y+=b.length,x});h.back(g.concat(f));}};r(o),e.exports=o;}),fl=et(t=>{var e=t.single=function(i){return \"'\"+i.replace(/\\\\|'/g,function(s){return \"\\\\\"+s})+\"'\"},r=t.double=function(i){return '\"'+i.replace(/\\\\|\"/g,function(s){return \"\\\\\"+s})+'\"'};t.quote=function(i){return /'/.test(i)?r(i):e(i)},t.unquote=function(i){var s=i[0],a=s===\"'\";return i.substring(1,i.length-1).replace(/\\\\\\\\/g,\"\\\\\").replace(a?/\\\\'/g:/\\\\\"/g,s)};}),cl=et((t,e)=>{var{unquote:r}=fl(),{registerWalker:i}=ae(),s=_e(),a=class extends s{constructor(n){super(n),this.type=\"quoted\",n&&n.value&&(this.contents=r(n.value),[this.quote]=n.value);}static fromTokens(n,o){o.fromFirst(n,a);}};i(a),e.exports=a;}),ul=et((t,e)=>{var{registerWalker:r}=ae(),i=_e(),s=class extends i{constructor(a){super(a),this.type=\"unicodeRange\";}static fromTokens(a,n){n.fromFirst(a,s);}static test(a){return /U\\+(\\d|\\w)+(-\\w+)?(\\?+)?/.test(a)}};r(s),e.exports=s;}),ml=et((t,e)=>{e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};}),dl=et((t,e)=>{e.exports=r=>{if(typeof r!=\"string\")throw new TypeError(\"Expected a string\");try{return new URL(r),!0}catch{return !1}};}),yl=et((t,e)=>{var r=ml(),i=dl(),{registerWalker:s}=ae(),a=_e(),n=/^\\\\(.+)/,o=/^#(.+)/,l=/^#([0-9a-f]{3}|[0-9a-f]{4}|[0-9a-f]{6}|[0-9a-f]{8})$/i,h=Object.keys(r),u=class extends a{constructor(f){super(f),this.type=\"word\",this.isColor=!1,this.isHex=!1,this.isUrl=!1,this.isVariable=!1;}static fromTokens(f,m){m.fromFirst(f,u);let{lastNode:d}=m,{value:p}=d;d.isColor=l.test(p)||h.includes(p.toLowerCase()),d.isHex=o.test(p),d.isUrl=p.startsWith(\"//\")?i(`http:${p}`):i(p),d.isVariable=u.testVariable(f[0],m);}static testEscaped(f){let[m,d]=f,[p,c]=m;return p===\"word\"&&(n.test(c)||c===\"\\\\\"&&d&&!/^\\s+$/.test(d[1]))}static testHex(f){let[m,d]=f;return m===\"word\"&&o.test(d)}static testVariable(f,m){let[d,p]=f,{prefixes:c}=m.options.variables,v=new RegExp(`^(${c.join(\"|\")})`);return d===\"word\"&&v.test(p)}static testWord(f,m){let[d]=f;return u.testEscaped(f)||u.testHex(d)||u.testVariable(d,m)}};s(u),e.exports=u;}),gl=et((t,e)=>{var r=sl(),i=al(),s=nl(),a=ol(),n=ll(),o=hl(),l=pl(),h=ma(),u=cl(),f=ul(),m=yl(),d={ignoreUnknownWords:!1,interpolation:!1,parentNode:null,variables:{prefixes:[\"--\"]}};e.exports=class extends r{constructor(p,c={}){super(p),this.lastNode=null,this.options=Object.assign({},d,c),this.parentNode=this.options.parentNode;}back(p){for(let c of p.reverse())this.tokenizer.back(c);}comment(p){super.comment(p);let c=s.testInline(p),v=this.lastNode;v.inline=c,Object.setPrototypeOf(v,s.prototype);}fromFirst(p,c){let[v]=p,[,y,g,b]=v,x=new c({value:y});this.init(x,g,b),this.current=x,this.end(v),this.back(p.slice(1));}init(p,c,v){super.init(p,c,v),this.lastNode=p;}other(p){let c=[],v=[],y=p,g=null,b=null;for(;y;)[g]=y,v.push(y),g===\"(\"||g===\"[\"?(b||(b=y),c.push(g===\"(\"?\")\":\"]\")):g===c[c.length-1]&&(c.pop(),c.length===0&&(b=null)),y=this.tokenizer.nextToken();c.length>0&&this.unclosedBracket(b),this.unknownWord(v);}parse(){let p;for(;!this.tokenizer.endOfFile();)switch(p=this.tokenizer.nextToken(),p[0]){case\"space\":this.spaces+=p[1];break;case\"comment\":this.comment(p);break;case\"at-word\":this.atrule(p),Object.setPrototypeOf(this.lastNode,i.prototype),this.lastNode.type=\"atword\";break;default:this.other(p);break}this.endFile();}unknownWord(p){let[c]=p,[v,y]=c;if(h.chars.includes(v))h.fromTokens(p,this);else if(v===\"word\"&&l.test(p,this))l.fromTokens(p,this);else if(a.test(p))a.fromTokens(p,this);else if(this.options.interpolation&&n.test(p,this))n.fromTokens(p,this);else if(v===\"brackets\")h.tokenizeBrackets(p,this);else if(v===\"comma\")h.fromTokens(p,this);else if(v===\"operator\")l.fromTokens(p,this);else if(v===\"string\")u.fromTokens(p,this);else if(v===\"word\")if(y===\",\")h.fromTokens(p,this);else if(y===\"//\")s.tokenizeNext(p,this);else if(s.testInline(c)){let{parentNode:g}=this;g&&g.type===\"func\"&&g.name===\"url\"?m.fromTokens(p,this):s.tokenizeInline(p,this);}else y.includes(\",\")?h.tokenizeCommas(p,this):m.testWord(p,this)?m.fromTokens(p,this):o.test(y)?o.fromTokens(p,this):f.test(y)?f.fromTokens(p,this):l.chars.includes(y)?l.fromTokens(p,this):/^[\\w-]+$/.test(y)?m.fromTokens(p,this):l.regex.test(y)?l.tokenize(p,this):this.options.ignoreUnknownWords?m.fromTokens(p,this):super.unknownWord(p);else super.unknownWord(p);}};}),_i=et((t,e)=>{var r=oa(),i=gl(),{stringify:s}=qe();e.exports={parse(a,n){let o=new r(a,n),l=new i(o,n);l.parse();let{root:h}=l,u=h.toString;function f(m){return u.bind(h)(m||e.exports.stringify)}return h.toString=f.bind(h),l.root},stringify:s,nodeToString(a){let n=\"\";return e.exports.stringify(a,o=>{n+=o;}),n}};}),vl=et(t=>{var e=e||{};e.stringify=function(){var r={\"visit_linear-gradient\":function(i){return r.visit_gradient(i)},\"visit_repeating-linear-gradient\":function(i){return r.visit_gradient(i)},\"visit_radial-gradient\":function(i){return r.visit_gradient(i)},\"visit_repeating-radial-gradient\":function(i){return r.visit_gradient(i)},visit_gradient:function(i){var s=r.visit(i.orientation);return s&&(s+=\", \"),i.type+\"(\"+s+r.visit(i.colorStops)+\")\"},visit_shape:function(i){var s=i.value,a=r.visit(i.at),n=r.visit(i.style);return n&&(s+=\" \"+n),a&&(s+=\" at \"+a),s},\"visit_default-radial\":function(i){var s=\"\",a=r.visit(i.at);return a&&(s+=a),s},\"visit_extent-keyword\":function(i){var s=i.value,a=r.visit(i.at);return a&&(s+=\" at \"+a),s},\"visit_position-keyword\":function(i){return i.value},visit_position:function(i){return r.visit(i.value.x)+\" \"+r.visit(i.value.y)},\"visit_%\":function(i){return i.value+\"%\"},visit_em:function(i){return i.value+\"em\"},visit_px:function(i){return i.value+\"px\"},visit_literal:function(i){return r.visit_color(i.value,i)},visit_hex:function(i){return r.visit_color(\"#\"+i.value,i)},visit_rgb:function(i){return r.visit_color(\"rgb(\"+i.value.join(\", \")+\")\",i)},visit_rgba:function(i){return r.visit_color(\"rgba(\"+i.value.join(\", \")+\")\",i)},visit_color:function(i,s){var a=i,n=r.visit(s.length);return n&&(a+=\" \"+n),a},visit_angular:function(i){return i.value+\"deg\"},visit_directional:function(i){return \"to \"+i.value},visit_array:function(i){var s=\"\",a=i.length;return i.forEach(function(n,o){s+=r.visit(n),o<a-1&&(s+=\", \");}),s},visit:function(i){if(!i)return \"\";var s=\"\";if(i instanceof Array)return r.visit_array(i,s);if(i.type){var a=r[\"visit_\"+i.type];if(a)return a(i);throw Error(\"Missing visitor visit_\"+i.type)}else throw Error(\"Invalid node.\")}};return function(i){return r.visit(i)}}();var e=e||{};e.parse=function(){var r={linearGradient:/^(\\-(webkit|o|ms|moz)\\-)?(linear\\-gradient)/i,repeatingLinearGradient:/^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-linear\\-gradient)/i,radialGradient:/^(\\-(webkit|o|ms|moz)\\-)?(radial\\-gradient)/i,repeatingRadialGradient:/^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-radial\\-gradient)/i,sideOrCorner:/^to (left (top|bottom)|right (top|bottom)|left|right|top|bottom)/i,extentKeywords:/^(closest\\-side|closest\\-corner|farthest\\-side|farthest\\-corner|contain|cover)/,positionKeywords:/^(left|center|right|top|bottom)/i,pixelValue:/^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))px/,percentageValue:/^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))\\%/,emValue:/^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))em/,angleValue:/^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))deg/,startCall:/^\\(/,endCall:/^\\)/,comma:/^,/,hexColor:/^\\#([0-9a-fA-F]+)/,literalColor:/^([a-zA-Z]+)/,rgbColor:/^rgb/i,rgbaColor:/^rgba/i,number:/^(([0-9]*\\.[0-9]+)|([0-9]+\\.?))/},i=\"\";function s(E){var O=new Error(i+\": \"+E);throw O.source=i,O}function a(){var E=n();return i.length>0&&s(\"Invalid input not EOF\"),E}function n(){return S(o)}function o(){return l(\"linear-gradient\",r.linearGradient,u)||l(\"repeating-linear-gradient\",r.repeatingLinearGradient,u)||l(\"radial-gradient\",r.radialGradient,d)||l(\"repeating-radial-gradient\",r.repeatingRadialGradient,d)}function l(E,O,I){return h(O,function(Z){var K=I();return K&&(M(r.comma)||s(\"Missing comma before color stops\")),{type:E,orientation:K,colorStops:S(C)}})}function h(E,O){var I=M(E);if(I){M(r.startCall)||s(\"Missing (\");var Z=O(I);return M(r.endCall)||s(\"Missing )\"),Z}}function u(){return f()||m()}function f(){return A(\"directional\",r.sideOrCorner,1)}function m(){return A(\"angular\",r.angleValue,1)}function d(){var E,O=p(),I;return O&&(E=[],E.push(O),I=i,M(r.comma)&&(O=p(),O?E.push(O):i=I)),E}function p(){var E=c()||v();if(E)E.at=g();else {var O=y();if(O){E=O;var I=g();I&&(E.at=I);}else {var Z=b();Z&&(E={type:\"default-radial\",at:Z});}}return E}function c(){var E=A(\"shape\",/^(circle)/i,0);return E&&(E.style=W()||y()),E}function v(){var E=A(\"shape\",/^(ellipse)/i,0);return E&&(E.style=$()||y()),E}function y(){return A(\"extent-keyword\",r.extentKeywords,1)}function g(){if(A(\"position\",/^at/,0)){var E=b();return E||s(\"Missing positioning value\"),E}}function b(){var E=x();if(E.x||E.y)return {type:\"position\",value:E}}function x(){return {x:$(),y:$()}}function S(E){var O=E(),I=[];if(O)for(I.push(O);M(r.comma);)O=E(),O?I.push(O):s(\"One extra comma\");return I}function C(){var E=_();return E||s(\"Expected color definition\"),E.length=$(),E}function _(){return L()||R()||G()||T()}function T(){return A(\"literal\",r.literalColor,0)}function L(){return A(\"hex\",r.hexColor,1)}function G(){return h(r.rgbColor,function(){return {type:\"rgb\",value:S(j)}})}function R(){return h(r.rgbaColor,function(){return {type:\"rgba\",value:S(j)}})}function j(){return M(r.number)[1]}function $(){return A(\"%\",r.percentageValue,1)||F()||W()}function F(){return A(\"position-keyword\",r.positionKeywords,1)}function W(){return A(\"px\",r.pixelValue,1)||A(\"em\",r.emValue,1)}function A(E,O,I){var Z=M(O);if(Z)return {type:E,value:Z[I]}}function M(E){var O,I;return I=/^[\\n\\r\\t\\s]+/.exec(i),I&&P(I[0].length),O=E.exec(i),O&&P(O[0].length),O}function P(E){i=i.substr(E);}return function(E){return i=E.toString(),a()}}(),t.parse=e.parse,t.stringify=e.stringify;}),da=et((t,e)=>{var r=200,i=\"__lodash_hash_undefined__\",s=800,a=16,n=9007199254740991,o=\"[object Arguments]\",l=\"[object Array]\",h=\"[object AsyncFunction]\",u=\"[object Boolean]\",f=\"[object Date]\",m=\"[object Error]\",d=\"[object Function]\",p=\"[object GeneratorFunction]\",c=\"[object Map]\",v=\"[object Number]\",y=\"[object Null]\",g=\"[object Object]\",b=\"[object Proxy]\",x=\"[object RegExp]\",S=\"[object Set]\",C=\"[object String]\",_=\"[object Undefined]\",T=\"[object WeakMap]\",L=\"[object ArrayBuffer]\",G=\"[object DataView]\",R=\"[object Float32Array]\",j=\"[object Float64Array]\",$=\"[object Int8Array]\",F=\"[object Int16Array]\",W=\"[object Int32Array]\",A=\"[object Uint8Array]\",M=\"[object Uint8ClampedArray]\",P=\"[object Uint16Array]\",E=\"[object Uint32Array]\",O=/[\\\\^$.*+?()[\\]{}|]/g,I=/^\\[object .+?Constructor\\]$/,Z=/^(?:0|[1-9]\\d*)$/,K={};K[R]=K[j]=K[$]=K[F]=K[W]=K[A]=K[M]=K[P]=K[E]=!0,K[o]=K[l]=K[L]=K[u]=K[G]=K[f]=K[m]=K[d]=K[c]=K[v]=K[g]=K[x]=K[S]=K[C]=K[T]=!1;var q=typeof __webpack_require__.g==\"object\"&&__webpack_require__.g&&__webpack_require__.g.Object===Object&&__webpack_require__.g,H=typeof self==\"object\"&&self&&self.Object===Object&&self,Q=q||H||Function(\"return this\")(),rt=typeof t==\"object\"&&t&&!t.nodeType&&t,st=rt&&typeof e==\"object\"&&e&&!e.nodeType&&e,ut=st&&st.exports===rt,mt=ut&&q.process,ot=function(){try{var D=st&&st.require&&st.require(\"util\").types;return D||mt&&mt.binding&&mt.binding(\"util\")}catch{}}(),ht=ot&&ot.isTypedArray;function at(D,V,N){switch(N.length){case 0:return D.call(V);case 1:return D.call(V,N[0]);case 2:return D.call(V,N[0],N[1]);case 3:return D.call(V,N[0],N[1],N[2])}return D.apply(V,N)}function tt(D,V){for(var N=-1,it=Array(D);++N<D;)it[N]=V(N);return it}function Mt(D){return function(V){return D(V)}}function Lt(D,V){return D?.[V]}function It(D,V){return function(N){return D(V(N))}}var Dt=Array.prototype,St=Function.prototype,Et=Object.prototype,pt=Q[\"__core-js_shared__\"],J=St.toString,Y=Et.hasOwnProperty,nt=function(){var D=/[^.]+$/.exec(pt&&pt.keys&&pt.keys.IE_PROTO||\"\");return D?\"Symbol(src)_1.\"+D:\"\"}(),ct=Et.toString,Ct=J.call(Object),Yt=RegExp(\"^\"+J.call(Y).replace(O,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),te=ut?Q.Buffer:void 0,he=Q.Symbol,pe=Q.Uint8Array,Ti=te?te.allocUnsafe:void 0,Mi=It(Object.getPrototypeOf,Object),Di=Object.create,za=Et.propertyIsEnumerable,Na=Dt.splice,fe=he?he.toStringTag:void 0,Ue=function(){try{var D=kr(Object,\"defineProperty\");return D({},\"\",{}),D}catch{}}(),Ga=te?te.isBuffer:void 0,Fi=Math.max,ja=Date.now,Ii=kr(Q,\"Map\"),Ee=kr(Object,\"create\"),Ha=function(){function D(){}return function(V){if(!ue(V))return {};if(Di)return Di(V);D.prototype=V;var N=new D;return D.prototype=void 0,N}}();function ce(D){var V=-1,N=D==null?0:D.length;for(this.clear();++V<N;){var it=D[V];this.set(it[0],it[1]);}}function qa(){this.__data__=Ee?Ee(null):{},this.size=0;}function $a(D){var V=this.has(D)&&delete this.__data__[D];return this.size-=V?1:0,V}function Wa(D){var V=this.__data__;if(Ee){var N=V[D];return N===i?void 0:N}return Y.call(V,D)?V[D]:void 0}function Ua(D){var V=this.__data__;return Ee?V[D]!==void 0:Y.call(V,D)}function Ja(D,V){var N=this.__data__;return this.size+=this.has(D)?0:1,N[D]=Ee&&V===void 0?i:V,this}ce.prototype.clear=qa,ce.prototype.delete=$a,ce.prototype.get=Wa,ce.prototype.has=Ua,ce.prototype.set=Ja;function ee(D){var V=-1,N=D==null?0:D.length;for(this.clear();++V<N;){var it=D[V];this.set(it[0],it[1]);}}function Ya(){this.__data__=[],this.size=0;}function Ka(D){var V=this.__data__,N=Je(V,D);if(N<0)return !1;var it=V.length-1;return N==it?V.pop():Na.call(V,N,1),--this.size,!0}function Xa(D){var V=this.__data__,N=Je(V,D);return N<0?void 0:V[N][1]}function Za(D){return Je(this.__data__,D)>-1}function Qa(D,V){var N=this.__data__,it=Je(N,D);return it<0?(++this.size,N.push([D,V])):N[it][1]=V,this}ee.prototype.clear=Ya,ee.prototype.delete=Ka,ee.prototype.get=Xa,ee.prototype.has=Za,ee.prototype.set=Qa;function be(D){var V=-1,N=D==null?0:D.length;for(this.clear();++V<N;){var it=D[V];this.set(it[0],it[1]);}}function tn(){this.size=0,this.__data__={hash:new ce,map:new(Ii||ee),string:new ce};}function en(D){var V=Ke(this,D).delete(D);return this.size-=V?1:0,V}function rn(D){return Ke(this,D).get(D)}function sn(D){return Ke(this,D).has(D)}function an(D,V){var N=Ke(this,D),it=N.size;return N.set(D,V),this.size+=N.size==it?0:1,this}be.prototype.clear=tn,be.prototype.delete=en,be.prototype.get=rn,be.prototype.has=sn,be.prototype.set=an;function xe(D){var V=this.__data__=new ee(D);this.size=V.size;}function nn(){this.__data__=new ee,this.size=0;}function on(D){var V=this.__data__,N=V.delete(D);return this.size=V.size,N}function ln(D){return this.__data__.get(D)}function hn(D){return this.__data__.has(D)}function pn(D,V){var N=this.__data__;if(N instanceof ee){var it=N.__data__;if(!Ii||it.length<r-1)return it.push([D,V]),this.size=++N.size,this;N=this.__data__=new be(it);}return N.set(D,V),this.size=N.size,this}xe.prototype.clear=nn,xe.prototype.delete=on,xe.prototype.get=ln,xe.prototype.has=hn,xe.prototype.set=pn;function fn(D,V){var N=_r(D),it=!N&&Cr(D),yt=!N&&!it&&Bi(D),bt=!N&&!it&&!yt&&Ni(D),wt=N||it||yt||bt,dt=wt?tt(D.length,String):[],kt=dt.length;for(var qt in D)(V||Y.call(D,qt))&&!(wt&&(qt==\"length\"||yt&&(qt==\"offset\"||qt==\"parent\")||bt&&(qt==\"buffer\"||qt==\"byteLength\"||qt==\"byteOffset\")||Li(qt,kt)))&&dt.push(qt);return dt}function Sr(D,V,N){(N!==void 0&&!Xe(D[V],N)||N===void 0&&!(V in D))&&wr(D,V,N);}function cn(D,V,N){var it=D[V];(!(Y.call(D,V)&&Xe(it,N))||N===void 0&&!(V in D))&&wr(D,V,N);}function Je(D,V){for(var N=D.length;N--;)if(Xe(D[N][0],V))return N;return -1}function wr(D,V,N){V==\"__proto__\"&&Ue?Ue(D,V,{configurable:!0,enumerable:!0,value:N,writable:!0}):D[V]=N;}var un=_n();function Ye(D){return D==null?D===void 0?_:y:fe&&fe in Object(D)?En(D):In(D)}function Oi(D){return Ae(D)&&Ye(D)==o}function mn(D){if(!ue(D)||Dn(D))return !1;var V=Ar(D)?Yt:I;return V.test(Rn(D))}function dn(D){return Ae(D)&&zi(D.length)&&!!K[Ye(D)]}function yn(D){if(!ue(D))return Fn(D);var V=Ri(D),N=[];for(var it in D)it==\"constructor\"&&(V||!Y.call(D,it))||N.push(it);return N}function Vi(D,V,N,it,yt){D!==V&&un(V,function(bt,wt){if(yt||(yt=new xe),ue(bt))gn(D,V,wt,N,Vi,it,yt);else {var dt=it?it(Pr(D,wt),bt,wt+\"\",D,V,yt):void 0;dt===void 0&&(dt=bt),Sr(D,wt,dt);}},Gi);}function gn(D,V,N,it,yt,bt,wt){var dt=Pr(D,N),kt=Pr(V,N),qt=wt.get(kt);if(qt){Sr(D,N,qt);return}var Nt=bt?bt(dt,kt,N+\"\",D,V,wt):void 0,Te=Nt===void 0;if(Te){var Tr=_r(kt),Mr=!Tr&&Bi(kt),Hi=!Tr&&!Mr&&Ni(kt);Nt=kt,Tr||Mr||Hi?_r(dt)?Nt=dt:Bn(dt)?Nt=kn(dt):Mr?(Te=!1,Nt=xn(kt,!0)):Hi?(Te=!1,Nt=wn(kt,!0)):Nt=[]:zn(kt)||Cr(kt)?(Nt=dt,Cr(dt)?Nt=Nn(dt):(!ue(dt)||Ar(dt))&&(Nt=An(kt))):Te=!1;}Te&&(wt.set(kt,Nt),yt(Nt,kt,it,bt,wt),wt.delete(kt)),Sr(D,N,Nt);}function vn(D,V){return Vn(On(D,V,ji),D+\"\")}var bn=Ue?function(D,V){return Ue(D,\"toString\",{configurable:!0,enumerable:!1,value:jn(V),writable:!0})}:ji;function xn(D,V){if(V)return D.slice();var N=D.length,it=Ti?Ti(N):new D.constructor(N);return D.copy(it),it}function Sn(D){var V=new D.constructor(D.byteLength);return new pe(V).set(new pe(D)),V}function wn(D,V){var N=V?Sn(D.buffer):D.buffer;return new D.constructor(N,D.byteOffset,D.length)}function kn(D,V){var N=-1,it=D.length;for(V||(V=Array(it));++N<it;)V[N]=D[N];return V}function Pn(D,V,N,it){var yt=!N;N||(N={});for(var bt=-1,wt=V.length;++bt<wt;){var dt=V[bt],kt=it?it(N[dt],D[dt],dt,N,D):void 0;kt===void 0&&(kt=D[dt]),yt?wr(N,dt,kt):cn(N,dt,kt);}return N}function Cn(D){return vn(function(V,N){var it=-1,yt=N.length,bt=yt>1?N[yt-1]:void 0,wt=yt>2?N[2]:void 0;for(bt=D.length>3&&typeof bt==\"function\"?(yt--,bt):void 0,wt&&Tn(N[0],N[1],wt)&&(bt=yt<3?void 0:bt,yt=1),V=Object(V);++it<yt;){var dt=N[it];dt&&D(V,dt,it,bt);}return V})}function _n(D){return function(V,N,it){for(var yt=-1,bt=Object(V),wt=it(V),dt=wt.length;dt--;){var kt=wt[D?dt:++yt];if(N(bt[kt],kt,bt)===!1)break}return V}}function Ke(D,V){var N=D.__data__;return Mn(V)?N[typeof V==\"string\"?\"string\":\"hash\"]:N.map}function kr(D,V){var N=Lt(D,V);return mn(N)?N:void 0}function En(D){var V=Y.call(D,fe),N=D[fe];try{D[fe]=void 0;var it=!0;}catch{}var yt=ct.call(D);return it&&(V?D[fe]=N:delete D[fe]),yt}function An(D){return typeof D.constructor==\"function\"&&!Ri(D)?Ha(Mi(D)):{}}function Li(D,V){var N=typeof D;return V=V??n,!!V&&(N==\"number\"||N!=\"symbol\"&&Z.test(D))&&D>-1&&D%1==0&&D<V}function Tn(D,V,N){if(!ue(N))return !1;var it=typeof V;return (it==\"number\"?Er(N)&&Li(V,N.length):it==\"string\"&&V in N)?Xe(N[V],D):!1}function Mn(D){var V=typeof D;return V==\"string\"||V==\"number\"||V==\"symbol\"||V==\"boolean\"?D!==\"__proto__\":D===null}function Dn(D){return !!nt&&nt in D}function Ri(D){var V=D&&D.constructor,N=typeof V==\"function\"&&V.prototype||Et;return D===N}function Fn(D){var V=[];if(D!=null)for(var N in Object(D))V.push(N);return V}function In(D){return ct.call(D)}function On(D,V,N){return V=Fi(V===void 0?D.length-1:V,0),function(){for(var it=arguments,yt=-1,bt=Fi(it.length-V,0),wt=Array(bt);++yt<bt;)wt[yt]=it[V+yt];yt=-1;for(var dt=Array(V+1);++yt<V;)dt[yt]=it[yt];return dt[V]=N(wt),at(D,this,dt)}}function Pr(D,V){if(!(V===\"constructor\"&&typeof D[V]==\"function\")&&V!=\"__proto__\")return D[V]}var Vn=Ln(bn);function Ln(D){var V=0,N=0;return function(){var it=ja(),yt=a-(it-N);if(N=it,yt>0){if(++V>=s)return arguments[0]}else V=0;return D.apply(void 0,arguments)}}function Rn(D){if(D!=null){try{return J.call(D)}catch{}try{return D+\"\"}catch{}}return \"\"}function Xe(D,V){return D===V||D!==D&&V!==V}var Cr=Oi(function(){return arguments}())?Oi:function(D){return Ae(D)&&Y.call(D,\"callee\")&&!za.call(D,\"callee\")},_r=Array.isArray;function Er(D){return D!=null&&zi(D.length)&&!Ar(D)}function Bn(D){return Ae(D)&&Er(D)}var Bi=Ga||Hn;function Ar(D){if(!ue(D))return !1;var V=Ye(D);return V==d||V==p||V==h||V==b}function zi(D){return typeof D==\"number\"&&D>-1&&D%1==0&&D<=n}function ue(D){var V=typeof D;return D!=null&&(V==\"object\"||V==\"function\")}function Ae(D){return D!=null&&typeof D==\"object\"}function zn(D){if(!Ae(D)||Ye(D)!=g)return !1;var V=Mi(D);if(V===null)return !0;var N=Y.call(V,\"constructor\")&&V.constructor;return typeof N==\"function\"&&N instanceof N&&J.call(N)==Ct}var Ni=ht?Mt(ht):dn;function Nn(D){return Pn(D,Gi(D))}function Gi(D){return Er(D)?fn(D,!0):yn(D)}var Gn=Cn(function(D,V,N){Vi(D,V,N);});function jn(D){return function(){return D}}function ji(D){return D}function Hn(){return !1}e.exports=Gn;}),bl=et(t=>{Object.defineProperty(t,\"__esModule\",{value:!0});var e=\"[\",r=\"]\",i=\"{\",s=\"}\",a=\":\",n=\",\",o=\"true\",l=\"false\",h=\"null\",u='\"',f=new Map([[\"t\",o],[\"f\",l],[\"n\",h]]),m=new Map([[u,u],[\"\\\\\",\"\\\\\"],[\"/\",\"/\"],[\"b\",\"\\b\"],[\"n\",`\n`],[\"f\",\"\\f\"],[\"r\",\"\\r\"],[\"t\",\"\t\"]]),d=new Map([[e,\"Punctuator\"],[r,\"Punctuator\"],[i,\"Punctuator\"],[s,\"Punctuator\"],[a,\"Punctuator\"],[n,\"Punctuator\"],[o,\"Boolean\"],[l,\"Boolean\"],[h,\"Null\"]]),p=class extends Error{constructor(H,{line:Q,column:rt,index:st}){super(`${H} (${Q}:${rt})`),this.line=Q,this.column=rt,this.index=st;}},c=class extends p{constructor(H,Q){super(`Unexpected character ${H} found.`,Q);}},v=class extends p{constructor(H){super(`Unexpected token ${H.type}(${H.value}) found.`,H.loc.start);}},y=class extends p{constructor(H){super(\"Unexpected end of input found.\",H);}},g='\"',b=\"/\",x=\"*\",S={comments:!1,ranges:!1};function C(H){return /[\\s\\n]/.test(H)}function _(H){return H>=\"0\"&&H<=\"9\"}function T(H){return _(H)||/[a-f]/i.test(H)}function L(H){return H>=\"1\"&&H<=\"9\"}function G(H){return /[tfn]/.test(H)}function R(H){return _(H)||H===\".\"||H===\"-\"}function j(H,Q){Q=Object.freeze({...S,...Q});let rt=-1,st=1,ut=0,mt=!1,ot=[];function ht(J,Y,nt,ct){let Ct=nt.offset+Y.length,Yt=Q.ranges?{range:[nt.offset,Ct]}:void 0;return {type:J,value:Y,loc:{start:nt,end:ct||{line:nt.line,column:nt.column+Y.length,offset:Ct}},...Yt}}function at(){let J=H.charAt(++rt);return mt?(st++,ut=1,mt=!1):ut++,J===\"\\r\"?(mt=!0,H.charAt(rt+1)===`\n`&&rt++):J===`\n`&&(mt=!0),J}function tt(){return {line:st,column:ut,offset:rt}}function Mt(J){let Y=f.get(J);if(H.slice(rt,rt+Y.length)===Y)return rt+=Y.length-1,ut+=Y.length-1,{value:Y,c:at()};for(let nt=1;nt<Y.length;nt++)Y[nt]!==H.charAt(rt+nt)&&St(at());}function Lt(J){let Y=J;for(J=at();J&&J!==g;){if(J===\"\\\\\")if(Y+=J,J=at(),m.has(J))Y+=J;else if(J===\"u\"){Y+=J;for(let nt=0;nt<4;nt++)J=at(),T(J)?Y+=J:St(J);}else St(J);else Y+=J;J=at();}return J||Et(),Y+=J,{value:Y,c:at()}}function It(J){let Y=\"\";if(J===\"-\"&&(Y+=J,J=at(),_(J)||St(J)),J===\"0\")Y+=J,J=at(),_(J)&&St(J);else {L(J)||St(J);do Y+=J,J=at();while(_(J))}if(J===\".\")do Y+=J,J=at();while(_(J));if(J===\"e\"||J===\"E\")for(Y+=J,J=at(),(J===\"+\"||J===\"-\")&&(Y+=J,J=at());_(J);)Y+=J,J=at();return {value:Y,c:J}}function Dt(J){let Y=J;if(J=at(),J===\"/\"){do Y+=J,J=at();while(J&&J!==\"\\r\"&&J!==`\n`);return {value:Y,c:J}}if(J===x){for(;J;)if(Y+=J,J=at(),J===x&&(Y+=J,J=at(),J===b))return Y+=J,J=at(),{value:Y,c:J};Et();}St(J);}function St(J){throw new c(J,tt())}function Et(){throw new y(tt())}let pt=at();for(;rt<H.length;){for(;C(pt);)pt=at();if(!pt)break;let J=tt();if(d.has(pt))ot.push(ht(d.get(pt),pt,J)),pt=at();else if(G(pt)){let Y=Mt(pt),nt=Y.value;pt=Y.c,ot.push(ht(d.get(nt),nt,J));}else if(R(pt)){let Y=It(pt),nt=Y.value;pt=Y.c,ot.push(ht(\"Number\",nt,J));}else if(pt===g){let Y=Lt(pt),nt=Y.value;pt=Y.c,ot.push(ht(\"String\",nt,J));}else if(pt===b&&Q.comments){let Y=Dt(pt),nt=Y.value;pt=Y.c,ot.push(ht(nt.startsWith(\"//\")?\"LineComment\":\"BlockComment\",nt,J,tt()));}else St(pt);}return ot}var $={document(H,Q={}){return {type:\"Document\",body:H,...Q}},string(H,Q={}){return {type:\"String\",value:H,...Q}},number(H,Q={}){return {type:\"Number\",value:H,...Q}},boolean(H,Q={}){return {type:\"Boolean\",value:H,...Q}},null(H={}){return {type:\"Null\",value:\"null\",...H}},array(H,Q={}){return {type:\"Array\",elements:H,...Q}},object(H,Q={}){return {type:\"Object\",members:H,...Q}},member(H,Q,rt={}){return {type:\"Member\",name:H,value:Q,...rt}}},F={tokens:!1,comments:!1,ranges:!1};function W(H){let Q=H.value.slice(1,-1),rt=\"\",st=Q.indexOf(\"\\\\\"),ut=0;for(;st>=0;){rt+=Q.slice(ut,st);let mt=Q.charAt(st+1);if(m.has(mt))rt+=m.get(mt),ut=st+2;else if(mt===\"u\"){let ot=Q.slice(st+2,st+6);if(ot.length<4||/[^0-9a-f]/i.test(ot))throw new p(`Invalid unicode escape \\\\u${ot}.`,{line:H.loc.start.line,column:H.loc.start.column+st,offset:H.loc.start.offset+st});rt+=String.fromCharCode(parseInt(ot,16)),ut=st+6;}else throw new p(`Invalid escape \\\\${mt}.`,{line:H.loc.start.line,column:H.loc.start.column+st,offset:H.loc.start.offset+st});st=Q.indexOf(\"\\\\\",ut);}return rt+=Q.slice(ut),rt}function A(H){switch(H.type){case\"Boolean\":return H.value===\"true\";case\"Number\":return Number(H.value);case\"Null\":return null;case\"String\":return W(H)}}function M(H,Q){Q=Object.freeze({...F,...Q});let rt=j(H,{comments:!!Q.comments,ranges:!!Q.ranges}),st=0;function ut(){return rt[st++]}function mt(){let Y=rt[st++];return Y&&Y.type.endsWith(\"Comment\")?mt():Y}let ot=Q.comments?mt:ut;function ht(Y,nt){if(!Y||Y.value!==nt)throw new v(Y)}function at(Y,nt){if(!Y||Y.type!==nt)throw new v(Y)}function tt(Y,nt){return Q.ranges?{range:[Y.offset,nt.offset]}:void 0}function Mt(Y){let nt=tt(Y.loc.start,Y.loc.end);return {type:Y.type,value:A(Y),loc:{start:{...Y.loc.start},end:{...Y.loc.end}},...nt}}function Lt(Y){at(Y,\"String\");let nt=Mt(Y);Y=ot(),ht(Y,\":\");let ct=St(),Ct=tt(nt.loc.start,ct.loc.end);return $.member(nt,ct,{loc:{start:{...nt.loc.start},end:{...ct.loc.end}},...Ct})}function It(Y){ht(Y,\"{\");let nt=[],ct=ot();if(ct&&ct.value!==\"}\")do if(nt.push(Lt(ct)),ct=ot(),ct.value===\",\")ct=ot();else break;while(ct);ht(ct,\"}\");let Ct=tt(Y.loc.start,ct.loc.end);return $.object(nt,{loc:{start:{...Y.loc.start},end:{...ct.loc.end}},...Ct})}function Dt(Y){ht(Y,\"[\");let nt=[],ct=ot();if(ct&&ct.value!==\"]\")do if(nt.push(St(ct)),ct=ot(),ct.value===\",\")ct=ot();else break;while(ct);ht(ct,\"]\");let Ct=tt(Y.loc.start,ct.loc.end);return $.array(nt,{type:\"Array\",elements:nt,loc:{start:{...Y.loc.start},end:{...ct.loc.end}},...Ct})}function St(Y){switch(Y=Y||ot(),Y.type){case\"String\":case\"Boolean\":case\"Number\":case\"Null\":return Mt(Y);case\"Punctuator\":if(Y.value===\"{\")return It(Y);if(Y.value===\"[\")return Dt(Y);default:throw new v(Y)}}let Et=St(),pt=ot();if(pt)throw new v(pt);let J={loc:{start:{line:1,column:1,offset:0},end:{...Et.loc.end}}};return Q.tokens&&(J.tokens=rt),Q.ranges&&(J.range=tt(J.loc.start,J.loc.end)),$.document(Et,J)}var P=new Map([[\"Document\",[\"body\"]],[\"Object\",[\"members\"]],[\"Member\",[\"name\",\"value\"]],[\"Array\",[\"elements\"]],[\"String\",[]],[\"Number\",[]],[\"Boolean\",[]],[\"Null\",[]]]);function E(H){return H&&typeof H==\"object\"}function O(H){return E(H)&&typeof H.type==\"string\"}function I(H,Q){function rt(st,ut){typeof Q.enter==\"function\"&&Q.enter(st,ut);for(let mt of P.get(st.type)){let ot=st[mt];E(ot)&&(Array.isArray(ot)?ot.forEach(ht=>rt(ht,st)):O(ot)&&rt(ot,st));}typeof Q.exit==\"function\"&&Q.exit(st,ut);}rt(H);}function Z(H,Q=()=>!0){let rt=[];return I(H,{enter(st,ut){rt.push({node:st,parent:ut,phase:\"enter\"});},exit(st,ut){rt.push({node:st,parent:ut,phase:\"exit\"});}}),rt.filter(Q).values()}function K(H){switch(H.type){case\"String\":case\"Number\":case\"Boolean\":return H.value;case\"Null\":return null;case\"Array\":return H.elements.map(K);case\"Object\":{let Q={};return H.members.forEach(rt=>{Q[K(rt.name)]=K(rt.value);}),Q}case\"Document\":return K(H.body);case\"Property\":throw new Error(\"Cannot evaluate object property outside of an object.\");default:throw new Error(`Unknown node type ${H.type}.`)}}function q(H,{indent:Q=0}={}){let rt=K(H);return JSON.stringify(rt,null,Q)}t.evaluate=K,t.iterator=Z,t.parse=M,t.print=q,t.tokenize=j,t.traverse=I,t.types=$;}),ya=et((t,e)=>{e.exports=function(r){return r!=null&&r.constructor!=null&&typeof r.constructor.isBuffer==\"function\"&&r.constructor.isBuffer(r)};}),xl=et((t,e)=>{var r=Object.prototype.hasOwnProperty,i=Object.prototype.toString,s=Object.defineProperty,a=Object.getOwnPropertyDescriptor,n=function(u){return typeof Array.isArray==\"function\"?Array.isArray(u):i.call(u)===\"[object Array]\"},o=function(u){if(!u||i.call(u)!==\"[object Object]\")return !1;var f=r.call(u,\"constructor\"),m=u.constructor&&u.constructor.prototype&&r.call(u.constructor.prototype,\"isPrototypeOf\");if(u.constructor&&!f&&!m)return !1;var d;for(d in u);return typeof d>\"u\"||r.call(u,d)},l=function(u,f){s&&f.name===\"__proto__\"?s(u,f.name,{enumerable:!0,configurable:!0,value:f.newValue,writable:!0}):u[f.name]=f.newValue;},h=function(u,f){if(f===\"__proto__\")if(r.call(u,f)){if(a)return a(u,f).value}else return;return u[f]};e.exports=function u(){var f,m,d,p,c,v,y=arguments[0],g=1,b=arguments.length,x=!1;for(typeof y==\"boolean\"&&(x=y,y=arguments[1]||{},g=2),(y==null||typeof y!=\"object\"&&typeof y!=\"function\")&&(y={});g<b;++g)if(f=arguments[g],f!=null)for(m in f)d=h(y,m),p=h(f,m),y!==p&&(x&&p&&(o(p)||(c=n(p)))?(c?(c=!1,v=d&&n(d)?d:[]):v=d&&o(d)?d:{},l(y,{name:m,newValue:u(x,v,p)})):typeof p<\"u\"&&l(y,{name:m,newValue:p}));return y};}),Sl=et((exports,module)=>{typeof navigator<\"u\"&&function(t,e){typeof exports==\"object\"&&typeof module<\"u\"?module.exports=e():typeof define==\"function\"&&__webpack_require__.amdO?define(e):(t=typeof globalThis<\"u\"?globalThis:t||self,t.lottie=e());}(exports,function(){var svgNS=\"http://www.w3.org/2000/svg\",locationHref=\"\",_useWebWorker=!1,initialDefaultFrame=-999999,setWebWorker=function(t){_useWebWorker=!!t;},getWebWorker=function(){return _useWebWorker},setLocationHref=function(t){locationHref=t;},getLocationHref=function(){return locationHref};function createTag(t){return document.createElement(t)}function extendPrototype(t,e){var r,i=t.length,s;for(r=0;r<i;r+=1){s=t[r].prototype;for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e.prototype[a]=s[a]);}}function getDescriptor(t,e){return Object.getOwnPropertyDescriptor(t,e)}function createProxyFunction(t){function e(){}return e.prototype=t,e}var audioControllerFactory=function(){function t(e){this.audios=[],this.audioFactory=e,this._volume=1,this._isMuted=!1;}return t.prototype={addAudio:function(e){this.audios.push(e);},pause:function(){var e,r=this.audios.length;for(e=0;e<r;e+=1)this.audios[e].pause();},resume:function(){var e,r=this.audios.length;for(e=0;e<r;e+=1)this.audios[e].resume();},setRate:function(e){var r,i=this.audios.length;for(r=0;r<i;r+=1)this.audios[r].setRate(e);},createAudio:function(e){return this.audioFactory?this.audioFactory(e):window.Howl?new window.Howl({src:[e]}):{isPlaying:!1,play:function(){this.isPlaying=!0;},seek:function(){this.isPlaying=!1;},playing:function(){},rate:function(){},setVolume:function(){}}},setAudioFactory:function(e){this.audioFactory=e;},setVolume:function(e){this._volume=e,this._updateVolume();},mute:function(){this._isMuted=!0,this._updateVolume();},unmute:function(){this._isMuted=!1,this._updateVolume();},getVolume:function(){return this._volume},_updateVolume:function(){var e,r=this.audios.length;for(e=0;e<r;e+=1)this.audios[e].volume(this._volume*(this._isMuted?0:1));}},function(){return new t}}(),createTypedArray=function(){function t(r,i){var s=0,a=[],n;switch(r){case\"int16\":case\"uint8c\":n=1;break;default:n=1.1;break}for(s=0;s<i;s+=1)a.push(n);return a}function e(r,i){return r===\"float32\"?new Float32Array(i):r===\"int16\"?new Int16Array(i):r===\"uint8c\"?new Uint8ClampedArray(i):t(r,i)}return typeof Uint8ClampedArray==\"function\"&&typeof Float32Array==\"function\"?e:t}();function createSizedArray(t){return Array.apply(null,{length:t})}function _typeof$6(t){\"@babel/helpers - typeof\";return typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?_typeof$6=function(e){return typeof e}:_typeof$6=function(e){return e&&typeof Symbol==\"function\"&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},_typeof$6(t)}var subframeEnabled=!0,expressionsPlugin=null,expressionsInterfaces=null,idPrefix$1=\"\",isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),bmPow=Math.pow,bmSqrt=Math.sqrt,bmFloor=Math.floor,bmMax=Math.max,bmMin=Math.min,BMMath={};((function(){var t=[\"abs\",\"acos\",\"acosh\",\"asin\",\"asinh\",\"atan\",\"atanh\",\"atan2\",\"ceil\",\"cbrt\",\"expm1\",\"clz32\",\"cos\",\"cosh\",\"exp\",\"floor\",\"fround\",\"hypot\",\"imul\",\"log\",\"log1p\",\"log2\",\"log10\",\"max\",\"min\",\"pow\",\"random\",\"round\",\"sign\",\"sin\",\"sinh\",\"sqrt\",\"tan\",\"tanh\",\"trunc\",\"E\",\"LN10\",\"LN2\",\"LOG10E\",\"LOG2E\",\"PI\",\"SQRT1_2\",\"SQRT2\"],e,r=t.length;for(e=0;e<r;e+=1)BMMath[t[e]]=Math[t[e]];}))(),BMMath.random=Math.random,BMMath.abs=function(t){var e=_typeof$6(t);if(e===\"object\"&&t.length){var r=createSizedArray(t.length),i,s=t.length;for(i=0;i<s;i+=1)r[i]=Math.abs(t[i]);return r}return Math.abs(t)};var defaultCurveSegments=150,degToRads=Math.PI/180,roundCorner=.5519;function styleDiv(t){t.style.position=\"absolute\",t.style.top=0,t.style.left=0,t.style.display=\"block\",t.style.transformOrigin=\"0 0\",t.style.webkitTransformOrigin=\"0 0\",t.style.backfaceVisibility=\"visible\",t.style.webkitBackfaceVisibility=\"visible\",t.style.transformStyle=\"preserve-3d\",t.style.webkitTransformStyle=\"preserve-3d\",t.style.mozTransformStyle=\"preserve-3d\";}function BMEnterFrameEvent(t,e,r,i){this.type=t,this.currentTime=e,this.totalTime=r,this.direction=i<0?-1:1;}function BMCompleteEvent(t,e){this.type=t,this.direction=e<0?-1:1;}function BMCompleteLoopEvent(t,e,r,i){this.type=t,this.currentLoop=r,this.totalLoops=e,this.direction=i<0?-1:1;}function BMSegmentStartEvent(t,e,r){this.type=t,this.firstFrame=e,this.totalFrames=r;}function BMDestroyEvent(t,e){this.type=t,this.target=e;}function BMRenderFrameErrorEvent(t,e){this.type=\"renderFrameError\",this.nativeError=t,this.currentTime=e;}function BMConfigErrorEvent(t){this.type=\"configError\",this.nativeError=t;}var createElementID=function(){var t=0;return function(){return t+=1,idPrefix$1+\"__lottie_element_\"+t}}();function HSVtoRGB(t,e,r){var i,s,a,n,o,l,h,u;switch(n=Math.floor(t*6),o=t*6-n,l=r*(1-e),h=r*(1-o*e),u=r*(1-(1-o)*e),n%6){case 0:i=r,s=u,a=l;break;case 1:i=h,s=r,a=l;break;case 2:i=l,s=r,a=u;break;case 3:i=l,s=h,a=r;break;case 4:i=u,s=l,a=r;break;case 5:i=r,s=l,a=h;break}return [i,s,a]}function RGBtoHSV(t,e,r){var i=Math.max(t,e,r),s=Math.min(t,e,r),a=i-s,n,o=i===0?0:a/i,l=i/255;switch(i){case s:n=0;break;case t:n=e-r+a*(e<r?6:0),n/=6*a;break;case e:n=r-t+a*2,n/=6*a;break;case r:n=t-e+a*4,n/=6*a;break}return [n,o,l]}function addSaturationToRGB(t,e){var r=RGBtoHSV(t[0]*255,t[1]*255,t[2]*255);return r[1]+=e,r[1]>1?r[1]=1:r[1]<=0&&(r[1]=0),HSVtoRGB(r[0],r[1],r[2])}function addBrightnessToRGB(t,e){var r=RGBtoHSV(t[0]*255,t[1]*255,t[2]*255);return r[2]+=e,r[2]>1?r[2]=1:r[2]<0&&(r[2]=0),HSVtoRGB(r[0],r[1],r[2])}function addHueToRGB(t,e){var r=RGBtoHSV(t[0]*255,t[1]*255,t[2]*255);return r[0]+=e/360,r[0]>1?r[0]-=1:r[0]<0&&(r[0]+=1),HSVtoRGB(r[0],r[1],r[2])}var rgbToHex=function(){var t=[],e,r;for(e=0;e<256;e+=1)r=e.toString(16),t[e]=r.length===1?\"0\"+r:r;return function(i,s,a){return i<0&&(i=0),s<0&&(s=0),a<0&&(a=0),\"#\"+t[i]+t[s]+t[a]}}(),setSubframeEnabled=function(t){subframeEnabled=!!t;},getSubframeEnabled=function(){return subframeEnabled},setExpressionsPlugin=function(t){expressionsPlugin=t;},getExpressionsPlugin=function(){return expressionsPlugin},setExpressionInterfaces=function(t){expressionsInterfaces=t;},getExpressionInterfaces=function(){return expressionsInterfaces},setDefaultCurveSegments=function(t){defaultCurveSegments=t;},getDefaultCurveSegments=function(){return defaultCurveSegments},setIdPrefix=function(t){idPrefix$1=t;};function createNS(t){return document.createElementNS(svgNS,t)}function _typeof$5(t){\"@babel/helpers - typeof\";return typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?_typeof$5=function(e){return typeof e}:_typeof$5=function(e){return e&&typeof Symbol==\"function\"&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},_typeof$5(t)}var dataManager=function(){var t=1,e=[],r,i,s={onmessage:function(){},postMessage:function(m){r({data:m});}},a={postMessage:function(m){s.onmessage({data:m});}};function n(m){if(window.Worker&&window.Blob&&getWebWorker()){var d=new Blob([\"var _workerSelf = self; self.onmessage = \",m.toString()],{type:\"text/javascript\"}),p=URL.createObjectURL(d);return new Worker(p)}return r=m,s}function o(){i||(i=n(function(m){function d(){function c(F,W){var A,M,P=F.length,E,O,I,Z;for(M=0;M<P;M+=1)if(A=F[M],\"ks\"in A&&!A.completed){if(A.completed=!0,A.hasMask){var K=A.masksProperties;for(O=K.length,E=0;E<O;E+=1)if(K[E].pt.k.i)x(K[E].pt.k);else for(Z=K[E].pt.k.length,I=0;I<Z;I+=1)K[E].pt.k[I].s&&x(K[E].pt.k[I].s[0]),K[E].pt.k[I].e&&x(K[E].pt.k[I].e[0]);}A.ty===0?(A.layers=g(A.refId,W),c(A.layers,W)):A.ty===4?b(A.shapes):A.ty===5&&j(A);}}function v(F,W){if(F){var A=0,M=F.length;for(A=0;A<M;A+=1)F[A].t===1&&(F[A].data.layers=g(F[A].data.refId,W),c(F[A].data.layers,W));}}function y(F,W){for(var A=0,M=W.length;A<M;){if(W[A].id===F)return W[A];A+=1;}return null}function g(F,W){var A=y(F,W);return A?A.layers.__used?JSON.parse(JSON.stringify(A.layers)):(A.layers.__used=!0,A.layers):null}function b(F){var W,A=F.length,M,P;for(W=A-1;W>=0;W-=1)if(F[W].ty===\"sh\")if(F[W].ks.k.i)x(F[W].ks.k);else for(P=F[W].ks.k.length,M=0;M<P;M+=1)F[W].ks.k[M].s&&x(F[W].ks.k[M].s[0]),F[W].ks.k[M].e&&x(F[W].ks.k[M].e[0]);else F[W].ty===\"gr\"&&b(F[W].it);}function x(F){var W,A=F.i.length;for(W=0;W<A;W+=1)F.i[W][0]+=F.v[W][0],F.i[W][1]+=F.v[W][1],F.o[W][0]+=F.v[W][0],F.o[W][1]+=F.v[W][1];}function S(F,W){var A=W?W.split(\".\"):[100,100,100];return F[0]>A[0]?!0:A[0]>F[0]?!1:F[1]>A[1]?!0:A[1]>F[1]?!1:F[2]>A[2]?!0:A[2]>F[2]?!1:null}var C=function(){var F=[4,4,14];function W(M){var P=M.t.d;M.t.d={k:[{s:P,t:0}]};}function A(M){var P,E=M.length;for(P=0;P<E;P+=1)M[P].ty===5&&W(M[P]);}return function(M){if(S(F,M.v)&&(A(M.layers),M.assets)){var P,E=M.assets.length;for(P=0;P<E;P+=1)M.assets[P].layers&&A(M.assets[P].layers);}}}(),_=function(){var F=[4,7,99];return function(W){if(W.chars&&!S(F,W.v)){var A,M=W.chars.length;for(A=0;A<M;A+=1){var P=W.chars[A];P.data&&P.data.shapes&&(b(P.data.shapes),P.data.ip=0,P.data.op=99999,P.data.st=0,P.data.sr=1,P.data.ks={p:{k:[0,0],a:0},s:{k:[100,100],a:0},a:{k:[0,0],a:0},r:{k:0,a:0},o:{k:100,a:0}},W.chars[A].t||(P.data.shapes.push({ty:\"no\"}),P.data.shapes[0].it.push({p:{k:[0,0],a:0},s:{k:[100,100],a:0},a:{k:[0,0],a:0},r:{k:0,a:0},o:{k:100,a:0},sk:{k:0,a:0},sa:{k:0,a:0},ty:\"tr\"})));}}}}(),T=function(){var F=[5,7,15];function W(M){var P=M.t.p;typeof P.a==\"number\"&&(P.a={a:0,k:P.a}),typeof P.p==\"number\"&&(P.p={a:0,k:P.p}),typeof P.r==\"number\"&&(P.r={a:0,k:P.r});}function A(M){var P,E=M.length;for(P=0;P<E;P+=1)M[P].ty===5&&W(M[P]);}return function(M){if(S(F,M.v)&&(A(M.layers),M.assets)){var P,E=M.assets.length;for(P=0;P<E;P+=1)M.assets[P].layers&&A(M.assets[P].layers);}}}(),L=function(){var F=[4,1,9];function W(M){var P,E=M.length,O,I;for(P=0;P<E;P+=1)if(M[P].ty===\"gr\")W(M[P].it);else if(M[P].ty===\"fl\"||M[P].ty===\"st\")if(M[P].c.k&&M[P].c.k[0].i)for(I=M[P].c.k.length,O=0;O<I;O+=1)M[P].c.k[O].s&&(M[P].c.k[O].s[0]/=255,M[P].c.k[O].s[1]/=255,M[P].c.k[O].s[2]/=255,M[P].c.k[O].s[3]/=255),M[P].c.k[O].e&&(M[P].c.k[O].e[0]/=255,M[P].c.k[O].e[1]/=255,M[P].c.k[O].e[2]/=255,M[P].c.k[O].e[3]/=255);else M[P].c.k[0]/=255,M[P].c.k[1]/=255,M[P].c.k[2]/=255,M[P].c.k[3]/=255;}function A(M){var P,E=M.length;for(P=0;P<E;P+=1)M[P].ty===4&&W(M[P].shapes);}return function(M){if(S(F,M.v)&&(A(M.layers),M.assets)){var P,E=M.assets.length;for(P=0;P<E;P+=1)M.assets[P].layers&&A(M.assets[P].layers);}}}(),G=function(){var F=[4,4,18];function W(M){var P,E=M.length,O,I;for(P=E-1;P>=0;P-=1)if(M[P].ty===\"sh\")if(M[P].ks.k.i)M[P].ks.k.c=M[P].closed;else for(I=M[P].ks.k.length,O=0;O<I;O+=1)M[P].ks.k[O].s&&(M[P].ks.k[O].s[0].c=M[P].closed),M[P].ks.k[O].e&&(M[P].ks.k[O].e[0].c=M[P].closed);else M[P].ty===\"gr\"&&W(M[P].it);}function A(M){var P,E,O=M.length,I,Z,K,q;for(E=0;E<O;E+=1){if(P=M[E],P.hasMask){var H=P.masksProperties;for(Z=H.length,I=0;I<Z;I+=1)if(H[I].pt.k.i)H[I].pt.k.c=H[I].cl;else for(q=H[I].pt.k.length,K=0;K<q;K+=1)H[I].pt.k[K].s&&(H[I].pt.k[K].s[0].c=H[I].cl),H[I].pt.k[K].e&&(H[I].pt.k[K].e[0].c=H[I].cl);}P.ty===4&&W(P.shapes);}}return function(M){if(S(F,M.v)&&(A(M.layers),M.assets)){var P,E=M.assets.length;for(P=0;P<E;P+=1)M.assets[P].layers&&A(M.assets[P].layers);}}}();function R(F){F.__complete||(L(F),C(F),_(F),T(F),G(F),c(F.layers,F.assets),v(F.chars,F.assets),F.__complete=!0);}function j(F){F.t.a.length===0&&\"m\"in F.t.p;}var $={};return $.completeData=R,$.checkColors=L,$.checkChars=_,$.checkPathProperties=T,$.checkShapes=G,$.completeLayers=c,$}if(a.dataManager||(a.dataManager=d()),a.assetLoader||(a.assetLoader=function(){function c(y){var g=y.getResponseHeader(\"content-type\");return g&&y.responseType===\"json\"&&g.indexOf(\"json\")!==-1||y.response&&_typeof$5(y.response)===\"object\"?y.response:y.response&&typeof y.response==\"string\"?JSON.parse(y.response):y.responseText?JSON.parse(y.responseText):null}function v(y,g,b,x){var S,C=new XMLHttpRequest;try{C.responseType=\"json\";}catch{}C.onreadystatechange=function(){if(C.readyState===4)if(C.status===200)S=c(C),b(S);else try{S=c(C),b(S);}catch(_){x&&x(_);}};try{C.open([\"G\",\"E\",\"T\"].join(\"\"),y,!0);}catch{C.open([\"G\",\"E\",\"T\"].join(\"\"),g+\"/\"+y,!0);}C.send();}return {load:v}}()),m.data.type===\"loadAnimation\")a.assetLoader.load(m.data.path,m.data.fullPath,function(c){a.dataManager.completeData(c),a.postMessage({id:m.data.id,payload:c,status:\"success\"});},function(){a.postMessage({id:m.data.id,status:\"error\"});});else if(m.data.type===\"complete\"){var p=m.data.animation;a.dataManager.completeData(p),a.postMessage({id:m.data.id,payload:p,status:\"success\"});}else m.data.type===\"loadData\"&&a.assetLoader.load(m.data.path,m.data.fullPath,function(c){a.postMessage({id:m.data.id,payload:c,status:\"success\"});},function(){a.postMessage({id:m.data.id,status:\"error\"});});}),i.onmessage=function(m){var d=m.data,p=d.id,c=e[p];e[p]=null,d.status===\"success\"?c.onComplete(d.payload):c.onError&&c.onError();});}function l(m,d){t+=1;var p=\"processId_\"+t;return e[p]={onComplete:m,onError:d},p}function h(m,d,p){o();var c=l(d,p);i.postMessage({type:\"loadAnimation\",path:m,fullPath:window.location.origin+window.location.pathname,id:c});}function u(m,d,p){o();var c=l(d,p);i.postMessage({type:\"loadData\",path:m,fullPath:window.location.origin+window.location.pathname,id:c});}function f(m,d,p){o();var c=l(d,p);i.postMessage({type:\"complete\",animation:m,id:c});}return {loadAnimation:h,loadData:u,completeAnimation:f}}(),ImagePreloader=function(){var t=function(){var y=createTag(\"canvas\");y.width=1,y.height=1;var g=y.getContext(\"2d\");return g.fillStyle=\"rgba(0,0,0,0)\",g.fillRect(0,0,1,1),y}();function e(){this.loadedAssets+=1,this.loadedAssets===this.totalImages&&this.loadedFootagesCount===this.totalFootages&&this.imagesLoadedCb&&this.imagesLoadedCb(null);}function r(){this.loadedFootagesCount+=1,this.loadedAssets===this.totalImages&&this.loadedFootagesCount===this.totalFootages&&this.imagesLoadedCb&&this.imagesLoadedCb(null);}function i(y,g,b){var x=\"\";if(y.e)x=y.p;else if(g){var S=y.p;S.indexOf(\"images/\")!==-1&&(S=S.split(\"/\")[1]),x=g+S;}else x=b,x+=y.u?y.u:\"\",x+=y.p;return x}function s(y){var g=0,b=setInterval(function(){var x=y.getBBox();(x.width||g>500)&&(this._imageLoaded(),clearInterval(b)),g+=1;}.bind(this),50);}function a(y){var g=i(y,this.assetsPath,this.path),b=createNS(\"image\");isSafari?this.testImageLoaded(b):b.addEventListener(\"load\",this._imageLoaded,!1),b.addEventListener(\"error\",function(){x.img=t,this._imageLoaded();}.bind(this),!1),b.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"href\",g),this._elementHelper.append?this._elementHelper.append(b):this._elementHelper.appendChild(b);var x={img:b,assetData:y};return x}function n(y){var g=i(y,this.assetsPath,this.path),b=createTag(\"img\");b.crossOrigin=\"anonymous\",b.addEventListener(\"load\",this._imageLoaded,!1),b.addEventListener(\"error\",function(){x.img=t,this._imageLoaded();}.bind(this),!1),b.src=g;var x={img:b,assetData:y};return x}function o(y){var g={assetData:y},b=i(y,this.assetsPath,this.path);return dataManager.loadData(b,function(x){g.img=x,this._footageLoaded();}.bind(this),function(){g.img={},this._footageLoaded();}.bind(this)),g}function l(y,g){this.imagesLoadedCb=g;var b,x=y.length;for(b=0;b<x;b+=1)y[b].layers||(!y[b].t||y[b].t===\"seq\"?(this.totalImages+=1,this.images.push(this._createImageData(y[b]))):y[b].t===3&&(this.totalFootages+=1,this.images.push(this.createFootageData(y[b]))));}function h(y){this.path=y||\"\";}function u(y){this.assetsPath=y||\"\";}function f(y){for(var g=0,b=this.images.length;g<b;){if(this.images[g].assetData===y)return this.images[g].img;g+=1;}return null}function m(){this.imagesLoadedCb=null,this.images.length=0;}function d(){return this.totalImages===this.loadedAssets}function p(){return this.totalFootages===this.loadedFootagesCount}function c(y,g){y===\"svg\"?(this._elementHelper=g,this._createImageData=this.createImageData.bind(this)):this._createImageData=this.createImgData.bind(this);}function v(){this._imageLoaded=e.bind(this),this._footageLoaded=r.bind(this),this.testImageLoaded=s.bind(this),this.createFootageData=o.bind(this),this.assetsPath=\"\",this.path=\"\",this.totalImages=0,this.totalFootages=0,this.loadedAssets=0,this.loadedFootagesCount=0,this.imagesLoadedCb=null,this.images=[];}return v.prototype={loadAssets:l,setAssetsPath:u,setPath:h,loadedImages:d,loadedFootages:p,destroy:m,getAsset:f,createImgData:n,createImageData:a,imageLoaded:e,footageLoaded:r,setCacheType:c},v}();function BaseEvent(){}BaseEvent.prototype={triggerEvent:function(t,e){if(this._cbs[t])for(var r=this._cbs[t],i=0;i<r.length;i+=1)r[i](e);},addEventListener:function(t,e){return this._cbs[t]||(this._cbs[t]=[]),this._cbs[t].push(e),function(){this.removeEventListener(t,e);}.bind(this)},removeEventListener:function(t,e){if(!e)this._cbs[t]=null;else if(this._cbs[t]){for(var r=0,i=this._cbs[t].length;r<i;)this._cbs[t][r]===e&&(this._cbs[t].splice(r,1),r-=1,i-=1),r+=1;this._cbs[t].length||(this._cbs[t]=null);}}};var markerParser=function(){function t(e){for(var r=e.split(`\\r\n`),i={},s,a=0,n=0;n<r.length;n+=1)s=r[n].split(\":\"),s.length===2&&(i[s[0]]=s[1].trim(),a+=1);if(a===0)throw new Error;return i}return function(e){for(var r=[],i=0;i<e.length;i+=1){var s=e[i],a={time:s.tm,duration:s.dr};try{a.payload=JSON.parse(e[i].cm);}catch{try{a.payload=t(e[i].cm);}catch{a.payload={name:e[i].cm};}}r.push(a);}return r}}(),ProjectInterface=function(){function t(e){this.compositions.push(e);}return function(){function e(r){for(var i=0,s=this.compositions.length;i<s;){if(this.compositions[i].data&&this.compositions[i].data.nm===r)return this.compositions[i].prepareFrame&&this.compositions[i].data.xt&&this.compositions[i].prepareFrame(this.currentFrame),this.compositions[i].compInterface;i+=1;}return null}return e.compositions=[],e.currentFrame=0,e.registerComposition=t,e}}(),renderers={},registerRenderer=function(t,e){renderers[t]=e;};function getRenderer(t){return renderers[t]}function getRegisteredRenderer(){if(renderers.canvas)return \"canvas\";for(var t in renderers)if(renderers[t])return t;return \"\"}function _typeof$4(t){\"@babel/helpers - typeof\";return typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?_typeof$4=function(e){return typeof e}:_typeof$4=function(e){return e&&typeof Symbol==\"function\"&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},_typeof$4(t)}var AnimationItem=function(){this._cbs=[],this.name=\"\",this.path=\"\",this.isLoaded=!1,this.currentFrame=0,this.currentRawFrame=0,this.firstFrame=0,this.totalFrames=0,this.frameRate=0,this.frameMult=0,this.playSpeed=1,this.playDirection=1,this.playCount=0,this.animationData={},this.assets=[],this.isPaused=!0,this.autoplay=!1,this.loop=!0,this.renderer=null,this.animationID=createElementID(),this.assetsPath=\"\",this.timeCompleted=0,this.segmentPos=0,this.isSubframeEnabled=getSubframeEnabled(),this.segments=[],this._idle=!0,this._completedLoop=!1,this.projectInterface=ProjectInterface(),this.imagePreloader=new ImagePreloader,this.audioController=audioControllerFactory(),this.markers=[],this.configAnimation=this.configAnimation.bind(this),this.onSetupError=this.onSetupError.bind(this),this.onSegmentComplete=this.onSegmentComplete.bind(this),this.drawnFrameEvent=new BMEnterFrameEvent(\"drawnFrame\",0,0,0),this.expressionsPlugin=getExpressionsPlugin();};extendPrototype([BaseEvent],AnimationItem),AnimationItem.prototype.setParams=function(t){(t.wrapper||t.container)&&(this.wrapper=t.wrapper||t.container);var e=\"svg\";t.animType?e=t.animType:t.renderer&&(e=t.renderer);var r=getRenderer(e);this.renderer=new r(this,t.rendererSettings),this.imagePreloader.setCacheType(e,this.renderer.globalData.defs),this.renderer.setProjectInterface(this.projectInterface),this.animType=e,t.loop===\"\"||t.loop===null||t.loop===void 0||t.loop===!0?this.loop=!0:t.loop===!1?this.loop=!1:this.loop=parseInt(t.loop,10),this.autoplay=\"autoplay\"in t?t.autoplay:!0,this.name=t.name?t.name:\"\",this.autoloadSegments=Object.prototype.hasOwnProperty.call(t,\"autoloadSegments\")?t.autoloadSegments:!0,this.assetsPath=t.assetsPath,this.initialSegment=t.initialSegment,t.audioFactory&&this.audioController.setAudioFactory(t.audioFactory),t.animationData?this.setupAnimation(t.animationData):t.path&&(t.path.lastIndexOf(\"\\\\\")!==-1?this.path=t.path.substr(0,t.path.lastIndexOf(\"\\\\\")+1):this.path=t.path.substr(0,t.path.lastIndexOf(\"/\")+1),this.fileName=t.path.substr(t.path.lastIndexOf(\"/\")+1),this.fileName=this.fileName.substr(0,this.fileName.lastIndexOf(\".json\")),dataManager.loadAnimation(t.path,this.configAnimation,this.onSetupError));},AnimationItem.prototype.onSetupError=function(){this.trigger(\"data_failed\");},AnimationItem.prototype.setupAnimation=function(t){dataManager.completeAnimation(t,this.configAnimation);},AnimationItem.prototype.setData=function(t,e){e&&_typeof$4(e)!==\"object\"&&(e=JSON.parse(e));var r={wrapper:t,animationData:e},i=t.attributes;r.path=i.getNamedItem(\"data-animation-path\")?i.getNamedItem(\"data-animation-path\").value:i.getNamedItem(\"data-bm-path\")?i.getNamedItem(\"data-bm-path\").value:i.getNamedItem(\"bm-path\")?i.getNamedItem(\"bm-path\").value:\"\",r.animType=i.getNamedItem(\"data-anim-type\")?i.getNamedItem(\"data-anim-type\").value:i.getNamedItem(\"data-bm-type\")?i.getNamedItem(\"data-bm-type\").value:i.getNamedItem(\"bm-type\")?i.getNamedItem(\"bm-type\").value:i.getNamedItem(\"data-bm-renderer\")?i.getNamedItem(\"data-bm-renderer\").value:i.getNamedItem(\"bm-renderer\")?i.getNamedItem(\"bm-renderer\").value:getRegisteredRenderer()||\"canvas\";var s=i.getNamedItem(\"data-anim-loop\")?i.getNamedItem(\"data-anim-loop\").value:i.getNamedItem(\"data-bm-loop\")?i.getNamedItem(\"data-bm-loop\").value:i.getNamedItem(\"bm-loop\")?i.getNamedItem(\"bm-loop\").value:\"\";s===\"false\"?r.loop=!1:s===\"true\"?r.loop=!0:s!==\"\"&&(r.loop=parseInt(s,10));var a=i.getNamedItem(\"data-anim-autoplay\")?i.getNamedItem(\"data-anim-autoplay\").value:i.getNamedItem(\"data-bm-autoplay\")?i.getNamedItem(\"data-bm-autoplay\").value:i.getNamedItem(\"bm-autoplay\")?i.getNamedItem(\"bm-autoplay\").value:!0;r.autoplay=a!==\"false\",r.name=i.getNamedItem(\"data-name\")?i.getNamedItem(\"data-name\").value:i.getNamedItem(\"data-bm-name\")?i.getNamedItem(\"data-bm-name\").value:i.getNamedItem(\"bm-name\")?i.getNamedItem(\"bm-name\").value:\"\";var n=i.getNamedItem(\"data-anim-prerender\")?i.getNamedItem(\"data-anim-prerender\").value:i.getNamedItem(\"data-bm-prerender\")?i.getNamedItem(\"data-bm-prerender\").value:i.getNamedItem(\"bm-prerender\")?i.getNamedItem(\"bm-prerender\").value:\"\";n===\"false\"&&(r.prerender=!1),r.path?this.setParams(r):this.trigger(\"destroy\");},AnimationItem.prototype.includeLayers=function(t){t.op>this.animationData.op&&(this.animationData.op=t.op,this.totalFrames=Math.floor(t.op-this.animationData.ip));var e=this.animationData.layers,r,i=e.length,s=t.layers,a,n=s.length;for(a=0;a<n;a+=1)for(r=0;r<i;){if(e[r].id===s[a].id){e[r]=s[a];break}r+=1;}if((t.chars||t.fonts)&&(this.renderer.globalData.fontManager.addChars(t.chars),this.renderer.globalData.fontManager.addFonts(t.fonts,this.renderer.globalData.defs)),t.assets)for(i=t.assets.length,r=0;r<i;r+=1)this.animationData.assets.push(t.assets[r]);this.animationData.__complete=!1,dataManager.completeAnimation(this.animationData,this.onSegmentComplete);},AnimationItem.prototype.onSegmentComplete=function(t){this.animationData=t;var e=getExpressionsPlugin();e&&e.initExpressions(this),this.loadNextSegment();},AnimationItem.prototype.loadNextSegment=function(){var t=this.animationData.segments;if(!t||t.length===0||!this.autoloadSegments){this.trigger(\"data_ready\"),this.timeCompleted=this.totalFrames;return}var e=t.shift();this.timeCompleted=e.time*this.frameRate;var r=this.path+this.fileName+\"_\"+this.segmentPos+\".json\";this.segmentPos+=1,dataManager.loadData(r,this.includeLayers.bind(this),function(){this.trigger(\"data_failed\");}.bind(this));},AnimationItem.prototype.loadSegments=function(){var t=this.animationData.segments;t||(this.timeCompleted=this.totalFrames),this.loadNextSegment();},AnimationItem.prototype.imagesLoaded=function(){this.trigger(\"loaded_images\"),this.checkLoaded();},AnimationItem.prototype.preloadImages=function(){this.imagePreloader.setAssetsPath(this.assetsPath),this.imagePreloader.setPath(this.path),this.imagePreloader.loadAssets(this.animationData.assets,this.imagesLoaded.bind(this));},AnimationItem.prototype.configAnimation=function(t){if(this.renderer)try{this.animationData=t,this.initialSegment?(this.totalFrames=Math.floor(this.initialSegment[1]-this.initialSegment[0]),this.firstFrame=Math.round(this.initialSegment[0])):(this.totalFrames=Math.floor(this.animationData.op-this.animationData.ip),this.firstFrame=Math.round(this.animationData.ip)),this.renderer.configAnimation(t),t.assets||(t.assets=[]),this.assets=this.animationData.assets,this.frameRate=this.animationData.fr,this.frameMult=this.animationData.fr/1e3,this.renderer.searchExtraCompositions(t.assets),this.markers=markerParser(t.markers||[]),this.trigger(\"config_ready\"),this.preloadImages(),this.loadSegments(),this.updaFrameModifier(),this.waitForFontsLoaded(),this.isPaused&&this.audioController.pause();}catch(e){this.triggerConfigError(e);}},AnimationItem.prototype.waitForFontsLoaded=function(){this.renderer&&(this.renderer.globalData.fontManager.isLoaded?this.checkLoaded():setTimeout(this.waitForFontsLoaded.bind(this),20));},AnimationItem.prototype.checkLoaded=function(){if(!this.isLoaded&&this.renderer.globalData.fontManager.isLoaded&&(this.imagePreloader.loadedImages()||this.renderer.rendererType!==\"canvas\")&&this.imagePreloader.loadedFootages()){this.isLoaded=!0;var t=getExpressionsPlugin();t&&t.initExpressions(this),this.renderer.initItems(),setTimeout(function(){this.trigger(\"DOMLoaded\");}.bind(this),0),this.gotoFrame(),this.autoplay&&this.play();}},AnimationItem.prototype.resize=function(t,e){var r=typeof t==\"number\"?t:void 0,i=typeof e==\"number\"?e:void 0;this.renderer.updateContainerSize(r,i);},AnimationItem.prototype.setSubframe=function(t){this.isSubframeEnabled=!!t;},AnimationItem.prototype.gotoFrame=function(){this.currentFrame=this.isSubframeEnabled?this.currentRawFrame:~~this.currentRawFrame,this.timeCompleted!==this.totalFrames&&this.currentFrame>this.timeCompleted&&(this.currentFrame=this.timeCompleted),this.trigger(\"enterFrame\"),this.renderFrame(),this.trigger(\"drawnFrame\");},AnimationItem.prototype.renderFrame=function(){if(!(this.isLoaded===!1||!this.renderer))try{this.expressionsPlugin&&this.expressionsPlugin.resetFrame(),this.renderer.renderFrame(this.currentFrame+this.firstFrame);}catch(t){this.triggerRenderFrameError(t);}},AnimationItem.prototype.play=function(t){t&&this.name!==t||this.isPaused===!0&&(this.isPaused=!1,this.trigger(\"_play\"),this.audioController.resume(),this._idle&&(this._idle=!1,this.trigger(\"_active\")));},AnimationItem.prototype.pause=function(t){t&&this.name!==t||this.isPaused===!1&&(this.isPaused=!0,this.trigger(\"_pause\"),this._idle=!0,this.trigger(\"_idle\"),this.audioController.pause());},AnimationItem.prototype.togglePause=function(t){t&&this.name!==t||(this.isPaused===!0?this.play():this.pause());},AnimationItem.prototype.stop=function(t){t&&this.name!==t||(this.pause(),this.playCount=0,this._completedLoop=!1,this.setCurrentRawFrameValue(0));},AnimationItem.prototype.getMarkerData=function(t){for(var e,r=0;r<this.markers.length;r+=1)if(e=this.markers[r],e.payload&&e.payload.name===t)return e;return null},AnimationItem.prototype.goToAndStop=function(t,e,r){if(!(r&&this.name!==r)){var i=Number(t);if(isNaN(i)){var s=this.getMarkerData(t);s&&this.goToAndStop(s.time,!0);}else e?this.setCurrentRawFrameValue(t):this.setCurrentRawFrameValue(t*this.frameModifier);this.pause();}},AnimationItem.prototype.goToAndPlay=function(t,e,r){if(!(r&&this.name!==r)){var i=Number(t);if(isNaN(i)){var s=this.getMarkerData(t);s&&(s.duration?this.playSegments([s.time,s.time+s.duration],!0):this.goToAndStop(s.time,!0));}else this.goToAndStop(i,e,r);this.play();}},AnimationItem.prototype.advanceTime=function(t){if(!(this.isPaused===!0||this.isLoaded===!1)){var e=this.currentRawFrame+t*this.frameModifier,r=!1;e>=this.totalFrames-1&&this.frameModifier>0?!this.loop||this.playCount===this.loop?this.checkSegments(e>this.totalFrames?e%this.totalFrames:0)||(r=!0,e=this.totalFrames-1):e>=this.totalFrames?(this.playCount+=1,this.checkSegments(e%this.totalFrames)||(this.setCurrentRawFrameValue(e%this.totalFrames),this._completedLoop=!0,this.trigger(\"loopComplete\"))):this.setCurrentRawFrameValue(e):e<0?this.checkSegments(e%this.totalFrames)||(this.loop&&!(this.playCount--<=0&&this.loop!==!0)?(this.setCurrentRawFrameValue(this.totalFrames+e%this.totalFrames),this._completedLoop?this.trigger(\"loopComplete\"):this._completedLoop=!0):(r=!0,e=0)):this.setCurrentRawFrameValue(e),r&&(this.setCurrentRawFrameValue(e),this.pause(),this.trigger(\"complete\"));}},AnimationItem.prototype.adjustSegment=function(t,e){this.playCount=0,t[1]<t[0]?(this.frameModifier>0&&(this.playSpeed<0?this.setSpeed(-this.playSpeed):this.setDirection(-1)),this.totalFrames=t[0]-t[1],this.timeCompleted=this.totalFrames,this.firstFrame=t[1],this.setCurrentRawFrameValue(this.totalFrames-.001-e)):t[1]>t[0]&&(this.frameModifier<0&&(this.playSpeed<0?this.setSpeed(-this.playSpeed):this.setDirection(1)),this.totalFrames=t[1]-t[0],this.timeCompleted=this.totalFrames,this.firstFrame=t[0],this.setCurrentRawFrameValue(.001+e)),this.trigger(\"segmentStart\");},AnimationItem.prototype.setSegment=function(t,e){var r=-1;this.isPaused&&(this.currentRawFrame+this.firstFrame<t?r=t:this.currentRawFrame+this.firstFrame>e&&(r=e-t)),this.firstFrame=t,this.totalFrames=e-t,this.timeCompleted=this.totalFrames,r!==-1&&this.goToAndStop(r,!0);},AnimationItem.prototype.playSegments=function(t,e){if(e&&(this.segments.length=0),_typeof$4(t[0])===\"object\"){var r,i=t.length;for(r=0;r<i;r+=1)this.segments.push(t[r]);}else this.segments.push(t);this.segments.length&&e&&this.adjustSegment(this.segments.shift(),0),this.isPaused&&this.play();},AnimationItem.prototype.resetSegments=function(t){this.segments.length=0,this.segments.push([this.animationData.ip,this.animationData.op]),t&&this.checkSegments(0);},AnimationItem.prototype.checkSegments=function(t){return this.segments.length?(this.adjustSegment(this.segments.shift(),t),!0):!1},AnimationItem.prototype.destroy=function(t){t&&this.name!==t||!this.renderer||(this.renderer.destroy(),this.imagePreloader.destroy(),this.trigger(\"destroy\"),this._cbs=null,this.onEnterFrame=null,this.onLoopComplete=null,this.onComplete=null,this.onSegmentStart=null,this.onDestroy=null,this.renderer=null,this.expressionsPlugin=null,this.imagePreloader=null,this.projectInterface=null);},AnimationItem.prototype.setCurrentRawFrameValue=function(t){this.currentRawFrame=t,this.gotoFrame();},AnimationItem.prototype.setSpeed=function(t){this.playSpeed=t,this.updaFrameModifier();},AnimationItem.prototype.setDirection=function(t){this.playDirection=t<0?-1:1,this.updaFrameModifier();},AnimationItem.prototype.setLoop=function(t){this.loop=t;},AnimationItem.prototype.setVolume=function(t,e){e&&this.name!==e||this.audioController.setVolume(t);},AnimationItem.prototype.getVolume=function(){return this.audioController.getVolume()},AnimationItem.prototype.mute=function(t){t&&this.name!==t||this.audioController.mute();},AnimationItem.prototype.unmute=function(t){t&&this.name!==t||this.audioController.unmute();},AnimationItem.prototype.updaFrameModifier=function(){this.frameModifier=this.frameMult*this.playSpeed*this.playDirection,this.audioController.setRate(this.playSpeed*this.playDirection);},AnimationItem.prototype.getPath=function(){return this.path},AnimationItem.prototype.getAssetsPath=function(t){var e=\"\";if(t.e)e=t.p;else if(this.assetsPath){var r=t.p;r.indexOf(\"images/\")!==-1&&(r=r.split(\"/\")[1]),e=this.assetsPath+r;}else e=this.path,e+=t.u?t.u:\"\",e+=t.p;return e},AnimationItem.prototype.getAssetData=function(t){for(var e=0,r=this.assets.length;e<r;){if(t===this.assets[e].id)return this.assets[e];e+=1;}return null},AnimationItem.prototype.hide=function(){this.renderer.hide();},AnimationItem.prototype.show=function(){this.renderer.show();},AnimationItem.prototype.getDuration=function(t){return t?this.totalFrames:this.totalFrames/this.frameRate},AnimationItem.prototype.updateDocumentData=function(t,e,r){try{var i=this.renderer.getElementByPath(t);i.updateDocumentData(e,r);}catch{}},AnimationItem.prototype.trigger=function(t){if(this._cbs&&this._cbs[t])switch(t){case\"enterFrame\":this.triggerEvent(t,new BMEnterFrameEvent(t,this.currentFrame,this.totalFrames,this.frameModifier));break;case\"drawnFrame\":this.drawnFrameEvent.currentTime=this.currentFrame,this.drawnFrameEvent.totalTime=this.totalFrames,this.drawnFrameEvent.direction=this.frameModifier,this.triggerEvent(t,this.drawnFrameEvent);break;case\"loopComplete\":this.triggerEvent(t,new BMCompleteLoopEvent(t,this.loop,this.playCount,this.frameMult));break;case\"complete\":this.triggerEvent(t,new BMCompleteEvent(t,this.frameMult));break;case\"segmentStart\":this.triggerEvent(t,new BMSegmentStartEvent(t,this.firstFrame,this.totalFrames));break;case\"destroy\":this.triggerEvent(t,new BMDestroyEvent(t,this));break;default:this.triggerEvent(t);}t===\"enterFrame\"&&this.onEnterFrame&&this.onEnterFrame.call(this,new BMEnterFrameEvent(t,this.currentFrame,this.totalFrames,this.frameMult)),t===\"loopComplete\"&&this.onLoopComplete&&this.onLoopComplete.call(this,new BMCompleteLoopEvent(t,this.loop,this.playCount,this.frameMult)),t===\"complete\"&&this.onComplete&&this.onComplete.call(this,new BMCompleteEvent(t,this.frameMult)),t===\"segmentStart\"&&this.onSegmentStart&&this.onSegmentStart.call(this,new BMSegmentStartEvent(t,this.firstFrame,this.totalFrames)),t===\"destroy\"&&this.onDestroy&&this.onDestroy.call(this,new BMDestroyEvent(t,this));},AnimationItem.prototype.triggerRenderFrameError=function(t){var e=new BMRenderFrameErrorEvent(t,this.currentFrame);this.triggerEvent(\"error\",e),this.onError&&this.onError.call(this,e);},AnimationItem.prototype.triggerConfigError=function(t){var e=new BMConfigErrorEvent(t,this.currentFrame);this.triggerEvent(\"error\",e),this.onError&&this.onError.call(this,e);};var animationManager=function(){var t={},e=[],r=0,i=0,s=0,a=!0,n=!1;function o(A){for(var M=0,P=A.target;M<i;)e[M].animation===P&&(e.splice(M,1),M-=1,i-=1,P.isPaused||f()),M+=1;}function l(A,M){if(!A)return null;for(var P=0;P<i;){if(e[P].elem===A&&e[P].elem!==null)return e[P].animation;P+=1;}var E=new AnimationItem;return m(E,A),E.setData(A,M),E}function h(){var A,M=e.length,P=[];for(A=0;A<M;A+=1)P.push(e[A].animation);return P}function u(){s+=1,G();}function f(){s-=1;}function m(A,M){A.addEventListener(\"destroy\",o),A.addEventListener(\"_active\",u),A.addEventListener(\"_idle\",f),e.push({elem:M,animation:A}),i+=1;}function d(A){var M=new AnimationItem;return m(M,null),M.setParams(A),M}function p(A,M){var P;for(P=0;P<i;P+=1)e[P].animation.setSpeed(A,M);}function c(A,M){var P;for(P=0;P<i;P+=1)e[P].animation.setDirection(A,M);}function v(A){var M;for(M=0;M<i;M+=1)e[M].animation.play(A);}function y(A){var M=A-r,P;for(P=0;P<i;P+=1)e[P].animation.advanceTime(M);r=A,s&&!n?window.requestAnimationFrame(y):a=!0;}function g(A){r=A,window.requestAnimationFrame(y);}function b(A){var M;for(M=0;M<i;M+=1)e[M].animation.pause(A);}function x(A,M,P){var E;for(E=0;E<i;E+=1)e[E].animation.goToAndStop(A,M,P);}function S(A){var M;for(M=0;M<i;M+=1)e[M].animation.stop(A);}function C(A){var M;for(M=0;M<i;M+=1)e[M].animation.togglePause(A);}function _(A){var M;for(M=i-1;M>=0;M-=1)e[M].animation.destroy(A);}function T(A,M,P){var E=[].concat([].slice.call(document.getElementsByClassName(\"lottie\")),[].slice.call(document.getElementsByClassName(\"bodymovin\"))),O,I=E.length;for(O=0;O<I;O+=1)P&&E[O].setAttribute(\"data-bm-type\",P),l(E[O],A);if(M&&I===0){P||(P=\"svg\");var Z=document.getElementsByTagName(\"body\")[0];Z.innerText=\"\";var K=createTag(\"div\");K.style.width=\"100%\",K.style.height=\"100%\",K.setAttribute(\"data-bm-type\",P),Z.appendChild(K),l(K,A);}}function L(){var A;for(A=0;A<i;A+=1)e[A].animation.resize();}function G(){!n&&s&&a&&(window.requestAnimationFrame(g),a=!1);}function R(){n=!0;}function j(){n=!1,G();}function $(A,M){var P;for(P=0;P<i;P+=1)e[P].animation.setVolume(A,M);}function F(A){var M;for(M=0;M<i;M+=1)e[M].animation.mute(A);}function W(A){var M;for(M=0;M<i;M+=1)e[M].animation.unmute(A);}return t.registerAnimation=l,t.loadAnimation=d,t.setSpeed=p,t.setDirection=c,t.play=v,t.pause=b,t.stop=S,t.togglePause=C,t.searchAnimations=T,t.resize=L,t.goToAndStop=x,t.destroy=_,t.freeze=R,t.unfreeze=j,t.setVolume=$,t.mute=F,t.unmute=W,t.getRegisteredAnimations=h,t}(),BezierFactory=function(){var t={};t.getBezierEasing=r;var e={};function r(g,b,x,S,C){var _=C||(\"bez_\"+g+\"_\"+b+\"_\"+x+\"_\"+S).replace(/\\./g,\"p\");if(e[_])return e[_];var T=new y([g,b,x,S]);return e[_]=T,T}var i=4,s=.001,a=1e-7,n=10,o=11,l=1/(o-1),h=typeof Float32Array==\"function\";function u(g,b){return 1-3*b+3*g}function f(g,b){return 3*b-6*g}function m(g){return 3*g}function d(g,b,x){return ((u(b,x)*g+f(b,x))*g+m(b))*g}function p(g,b,x){return 3*u(b,x)*g*g+2*f(b,x)*g+m(b)}function c(g,b,x,S,C){var _,T,L=0;do T=b+(x-b)/2,_=d(T,S,C)-g,_>0?x=T:b=T;while(Math.abs(_)>a&&++L<n);return T}function v(g,b,x,S){for(var C=0;C<i;++C){var _=p(b,x,S);if(_===0)return b;var T=d(b,x,S)-g;b-=T/_;}return b}function y(g){this._p=g,this._mSampleValues=h?new Float32Array(o):new Array(o),this._precomputed=!1,this.get=this.get.bind(this);}return y.prototype={get:function(g){var b=this._p[0],x=this._p[1],S=this._p[2],C=this._p[3];return this._precomputed||this._precompute(),b===x&&S===C?g:g===0?0:g===1?1:d(this._getTForX(g),x,C)},_precompute:function(){var g=this._p[0],b=this._p[1],x=this._p[2],S=this._p[3];this._precomputed=!0,(g!==b||x!==S)&&this._calcSampleValues();},_calcSampleValues:function(){for(var g=this._p[0],b=this._p[2],x=0;x<o;++x)this._mSampleValues[x]=d(x*l,g,b);},_getTForX:function(g){for(var b=this._p[0],x=this._p[2],S=this._mSampleValues,C=0,_=1,T=o-1;_!==T&&S[_]<=g;++_)C+=l;--_;var L=(g-S[_])/(S[_+1]-S[_]),G=C+L*l,R=p(G,b,x);return R>=s?v(g,G,b,x):R===0?G:c(g,C,C+l,b,x)}},t}(),pooling=function(){function t(e){return e.concat(createSizedArray(e.length))}return {double:t}}(),poolFactory=function(){return function(t,e,r){var i=0,s=t,a=createSizedArray(s),n={newElement:o,release:l};function o(){var h;return i?(i-=1,h=a[i]):h=e(),h}function l(h){i===s&&(a=pooling.double(a),s*=2),r&&r(h),a[i]=h,i+=1;}return n}}(),bezierLengthPool=function(){function t(){return {addedLength:0,percents:createTypedArray(\"float32\",getDefaultCurveSegments()),lengths:createTypedArray(\"float32\",getDefaultCurveSegments())}}return poolFactory(8,t)}(),segmentsLengthPool=function(){function t(){return {lengths:[],totalLength:0}}function e(r){var i,s=r.lengths.length;for(i=0;i<s;i+=1)bezierLengthPool.release(r.lengths[i]);r.lengths.length=0;}return poolFactory(8,t,e)}();function bezFunction(){var t=Math;function e(m,d,p,c,v,y){var g=m*c+d*v+p*y-v*c-y*m-p*d;return g>-.001&&g<.001}function r(m,d,p,c,v,y,g,b,x){if(p===0&&y===0&&x===0)return e(m,d,c,v,g,b);var S=t.sqrt(t.pow(c-m,2)+t.pow(v-d,2)+t.pow(y-p,2)),C=t.sqrt(t.pow(g-m,2)+t.pow(b-d,2)+t.pow(x-p,2)),_=t.sqrt(t.pow(g-c,2)+t.pow(b-v,2)+t.pow(x-y,2)),T;return S>C?S>_?T=S-C-_:T=_-C-S:_>C?T=_-C-S:T=C-S-_,T>-1e-4&&T<1e-4}var i=function(){return function(m,d,p,c){var v=getDefaultCurveSegments(),y,g,b,x,S,C=0,_,T=[],L=[],G=bezierLengthPool.newElement();for(b=p.length,y=0;y<v;y+=1){for(S=y/(v-1),_=0,g=0;g<b;g+=1)x=bmPow(1-S,3)*m[g]+3*bmPow(1-S,2)*S*p[g]+3*(1-S)*bmPow(S,2)*c[g]+bmPow(S,3)*d[g],T[g]=x,L[g]!==null&&(_+=bmPow(T[g]-L[g],2)),L[g]=T[g];_&&(_=bmSqrt(_),C+=_),G.percents[y]=S,G.lengths[y]=C;}return G.addedLength=C,G}}();function s(m){var d=segmentsLengthPool.newElement(),p=m.c,c=m.v,v=m.o,y=m.i,g,b=m._length,x=d.lengths,S=0;for(g=0;g<b-1;g+=1)x[g]=i(c[g],c[g+1],v[g],y[g+1]),S+=x[g].addedLength;return p&&b&&(x[g]=i(c[g],c[0],v[g],y[0]),S+=x[g].addedLength),d.totalLength=S,d}function a(m){this.segmentLength=0,this.points=new Array(m);}function n(m,d){this.partialLength=m,this.point=d;}var o=function(){var m={};return function(d,p,c,v){var y=(d[0]+\"_\"+d[1]+\"_\"+p[0]+\"_\"+p[1]+\"_\"+c[0]+\"_\"+c[1]+\"_\"+v[0]+\"_\"+v[1]).replace(/\\./g,\"p\");if(!m[y]){var g=getDefaultCurveSegments(),b,x,S,C,_,T=0,L,G,R=null;d.length===2&&(d[0]!==p[0]||d[1]!==p[1])&&e(d[0],d[1],p[0],p[1],d[0]+c[0],d[1]+c[1])&&e(d[0],d[1],p[0],p[1],p[0]+v[0],p[1]+v[1])&&(g=2);var j=new a(g);for(S=c.length,b=0;b<g;b+=1){for(G=createSizedArray(S),_=b/(g-1),L=0,x=0;x<S;x+=1)C=bmPow(1-_,3)*d[x]+3*bmPow(1-_,2)*_*(d[x]+c[x])+3*(1-_)*bmPow(_,2)*(p[x]+v[x])+bmPow(_,3)*p[x],G[x]=C,R!==null&&(L+=bmPow(G[x]-R[x],2));L=bmSqrt(L),T+=L,j.points[b]=new n(L,G),R=G;}j.segmentLength=T,m[y]=j;}return m[y]}}();function l(m,d){var p=d.percents,c=d.lengths,v=p.length,y=bmFloor((v-1)*m),g=m*d.addedLength,b=0;if(y===v-1||y===0||g===c[y])return p[y];for(var x=c[y]>g?-1:1,S=!0;S;)if(c[y]<=g&&c[y+1]>g?(b=(g-c[y])/(c[y+1]-c[y]),S=!1):y+=x,y<0||y>=v-1){if(y===v-1)return p[y];S=!1;}return p[y]+(p[y+1]-p[y])*b}function h(m,d,p,c,v,y){var g=l(v,y),b=1-g,x=t.round((b*b*b*m[0]+(g*b*b+b*g*b+b*b*g)*p[0]+(g*g*b+b*g*g+g*b*g)*c[0]+g*g*g*d[0])*1e3)/1e3,S=t.round((b*b*b*m[1]+(g*b*b+b*g*b+b*b*g)*p[1]+(g*g*b+b*g*g+g*b*g)*c[1]+g*g*g*d[1])*1e3)/1e3;return [x,S]}var u=createTypedArray(\"float32\",8);function f(m,d,p,c,v,y,g){v<0?v=0:v>1&&(v=1);var b=l(v,g);y=y>1?1:y;var x=l(y,g),S,C=m.length,_=1-b,T=1-x,L=_*_*_,G=b*_*_*3,R=b*b*_*3,j=b*b*b,$=_*_*T,F=b*_*T+_*b*T+_*_*x,W=b*b*T+_*b*x+b*_*x,A=b*b*x,M=_*T*T,P=b*T*T+_*x*T+_*T*x,E=b*x*T+_*x*x+b*T*x,O=b*x*x,I=T*T*T,Z=x*T*T+T*x*T+T*T*x,K=x*x*T+T*x*x+x*T*x,q=x*x*x;for(S=0;S<C;S+=1)u[S*4]=t.round((L*m[S]+G*p[S]+R*c[S]+j*d[S])*1e3)/1e3,u[S*4+1]=t.round(($*m[S]+F*p[S]+W*c[S]+A*d[S])*1e3)/1e3,u[S*4+2]=t.round((M*m[S]+P*p[S]+E*c[S]+O*d[S])*1e3)/1e3,u[S*4+3]=t.round((I*m[S]+Z*p[S]+K*c[S]+q*d[S])*1e3)/1e3;return u}return {getSegmentsLength:s,getNewSegment:f,getPointInSegment:h,buildBezierData:o,pointOnLine2D:e,pointOnLine3D:r}}var bez=bezFunction(),initFrame=initialDefaultFrame,mathAbs=Math.abs;function interpolateValue(t,e){var r=this.offsetTime,i;this.propType===\"multidimensional\"&&(i=createTypedArray(\"float32\",this.pv.length));for(var s=e.lastIndex,a=s,n=this.keyframes.length-1,o=!0,l,h,u;o;){if(l=this.keyframes[a],h=this.keyframes[a+1],a===n-1&&t>=h.t-r){l.h&&(l=h),s=0;break}if(h.t-r>t){s=a;break}a<n-1?a+=1:(s=0,o=!1);}u=this.keyframesMetadata[a]||{};var f,m,d,p,c,v,y=h.t-r,g=l.t-r,b;if(l.to){u.bezierData||(u.bezierData=bez.buildBezierData(l.s,h.s||l.e,l.to,l.ti));var x=u.bezierData;if(t>=y||t<g){var S=t>=y?x.points.length-1:0;for(m=x.points[S].point.length,f=0;f<m;f+=1)i[f]=x.points[S].point[f];}else {u.__fnct?v=u.__fnct:(v=BezierFactory.getBezierEasing(l.o.x,l.o.y,l.i.x,l.i.y,l.n).get,u.__fnct=v),d=v((t-g)/(y-g));var C=x.segmentLength*d,_,T=e.lastFrame<t&&e._lastKeyframeIndex===a?e._lastAddedLength:0;for(c=e.lastFrame<t&&e._lastKeyframeIndex===a?e._lastPoint:0,o=!0,p=x.points.length;o;){if(T+=x.points[c].partialLength,C===0||d===0||c===x.points.length-1){for(m=x.points[c].point.length,f=0;f<m;f+=1)i[f]=x.points[c].point[f];break}else if(C>=T&&C<T+x.points[c+1].partialLength){for(_=(C-T)/x.points[c+1].partialLength,m=x.points[c].point.length,f=0;f<m;f+=1)i[f]=x.points[c].point[f]+(x.points[c+1].point[f]-x.points[c].point[f])*_;break}c<p-1?c+=1:o=!1;}e._lastPoint=c,e._lastAddedLength=T-x.points[c].partialLength,e._lastKeyframeIndex=a;}}else {var L,G,R,j,$;if(n=l.s.length,b=h.s||l.e,this.sh&&l.h!==1)if(t>=y)i[0]=b[0],i[1]=b[1],i[2]=b[2];else if(t<=g)i[0]=l.s[0],i[1]=l.s[1],i[2]=l.s[2];else {var F=createQuaternion(l.s),W=createQuaternion(b),A=(t-g)/(y-g);quaternionToEuler(i,slerp(F,W,A));}else for(a=0;a<n;a+=1)l.h!==1&&(t>=y?d=1:t<g?d=0:(l.o.x.constructor===Array?(u.__fnct||(u.__fnct=[]),u.__fnct[a]?v=u.__fnct[a]:(L=l.o.x[a]===void 0?l.o.x[0]:l.o.x[a],G=l.o.y[a]===void 0?l.o.y[0]:l.o.y[a],R=l.i.x[a]===void 0?l.i.x[0]:l.i.x[a],j=l.i.y[a]===void 0?l.i.y[0]:l.i.y[a],v=BezierFactory.getBezierEasing(L,G,R,j).get,u.__fnct[a]=v)):u.__fnct?v=u.__fnct:(L=l.o.x,G=l.o.y,R=l.i.x,j=l.i.y,v=BezierFactory.getBezierEasing(L,G,R,j).get,l.keyframeMetadata=v),d=v((t-g)/(y-g)))),b=h.s||l.e,$=l.h===1?l.s[a]:l.s[a]+(b[a]-l.s[a])*d,this.propType===\"multidimensional\"?i[a]=$:i=$;}return e.lastIndex=s,i}function slerp(t,e,r){var i=[],s=t[0],a=t[1],n=t[2],o=t[3],l=e[0],h=e[1],u=e[2],f=e[3],m,d,p,c,v;return d=s*l+a*h+n*u+o*f,d<0&&(d=-d,l=-l,h=-h,u=-u,f=-f),1-d>1e-6?(m=Math.acos(d),p=Math.sin(m),c=Math.sin((1-r)*m)/p,v=Math.sin(r*m)/p):(c=1-r,v=r),i[0]=c*s+v*l,i[1]=c*a+v*h,i[2]=c*n+v*u,i[3]=c*o+v*f,i}function quaternionToEuler(t,e){var r=e[0],i=e[1],s=e[2],a=e[3],n=Math.atan2(2*i*a-2*r*s,1-2*i*i-2*s*s),o=Math.asin(2*r*i+2*s*a),l=Math.atan2(2*r*a-2*i*s,1-2*r*r-2*s*s);t[0]=n/degToRads,t[1]=o/degToRads,t[2]=l/degToRads;}function createQuaternion(t){var e=t[0]*degToRads,r=t[1]*degToRads,i=t[2]*degToRads,s=Math.cos(e/2),a=Math.cos(r/2),n=Math.cos(i/2),o=Math.sin(e/2),l=Math.sin(r/2),h=Math.sin(i/2),u=s*a*n-o*l*h,f=o*l*n+s*a*h,m=o*a*n+s*l*h,d=s*l*n-o*a*h;return [f,m,d,u]}function getValueAtCurrentTime(){var t=this.comp.renderedFrame-this.offsetTime,e=this.keyframes[0].t-this.offsetTime,r=this.keyframes[this.keyframes.length-1].t-this.offsetTime;if(!(t===this._caching.lastFrame||this._caching.lastFrame!==initFrame&&(this._caching.lastFrame>=r&&t>=r||this._caching.lastFrame<e&&t<e))){this._caching.lastFrame>=t&&(this._caching._lastKeyframeIndex=-1,this._caching.lastIndex=0);var i=this.interpolateValue(t,this._caching);this.pv=i;}return this._caching.lastFrame=t,this.pv}function setVValue(t){var e;if(this.propType===\"unidimensional\")e=t*this.mult,mathAbs(this.v-e)>1e-5&&(this.v=e,this._mdf=!0);else for(var r=0,i=this.v.length;r<i;)e=t[r]*this.mult,mathAbs(this.v[r]-e)>1e-5&&(this.v[r]=e,this._mdf=!0),r+=1;}function processEffectsSequence(){if(!(this.elem.globalData.frameId===this.frameId||!this.effectsSequence.length)){if(this.lock){this.setVValue(this.pv);return}this.lock=!0,this._mdf=this._isFirstFrame;var t,e=this.effectsSequence.length,r=this.kf?this.pv:this.data.k;for(t=0;t<e;t+=1)r=this.effectsSequence[t](r);this.setVValue(r),this._isFirstFrame=!1,this.lock=!1,this.frameId=this.elem.globalData.frameId;}}function addEffect(t){this.effectsSequence.push(t),this.container.addDynamicProperty(this);}function ValueProperty(t,e,r,i){this.propType=\"unidimensional\",this.mult=r||1,this.data=e,this.v=r?e.k*r:e.k,this.pv=e.k,this._mdf=!1,this.elem=t,this.container=i,this.comp=t.comp,this.k=!1,this.kf=!1,this.vel=0,this.effectsSequence=[],this._isFirstFrame=!0,this.getValue=processEffectsSequence,this.setVValue=setVValue,this.addEffect=addEffect;}function MultiDimensionalProperty(t,e,r,i){this.propType=\"multidimensional\",this.mult=r||1,this.data=e,this._mdf=!1,this.elem=t,this.container=i,this.comp=t.comp,this.k=!1,this.kf=!1,this.frameId=-1;var s,a=e.k.length;for(this.v=createTypedArray(\"float32\",a),this.pv=createTypedArray(\"float32\",a),this.vel=createTypedArray(\"float32\",a),s=0;s<a;s+=1)this.v[s]=e.k[s]*this.mult,this.pv[s]=e.k[s];this._isFirstFrame=!0,this.effectsSequence=[],this.getValue=processEffectsSequence,this.setVValue=setVValue,this.addEffect=addEffect;}function KeyframedValueProperty(t,e,r,i){this.propType=\"unidimensional\",this.keyframes=e.k,this.keyframesMetadata=[],this.offsetTime=t.data.st,this.frameId=-1,this._caching={lastFrame:initFrame,lastIndex:0,value:0,_lastKeyframeIndex:-1},this.k=!0,this.kf=!0,this.data=e,this.mult=r||1,this.elem=t,this.container=i,this.comp=t.comp,this.v=initFrame,this.pv=initFrame,this._isFirstFrame=!0,this.getValue=processEffectsSequence,this.setVValue=setVValue,this.interpolateValue=interpolateValue,this.effectsSequence=[getValueAtCurrentTime.bind(this)],this.addEffect=addEffect;}function KeyframedMultidimensionalProperty(t,e,r,i){this.propType=\"multidimensional\";var s,a=e.k.length,n,o,l,h;for(s=0;s<a-1;s+=1)e.k[s].to&&e.k[s].s&&e.k[s+1]&&e.k[s+1].s&&(n=e.k[s].s,o=e.k[s+1].s,l=e.k[s].to,h=e.k[s].ti,(n.length===2&&!(n[0]===o[0]&&n[1]===o[1])&&bez.pointOnLine2D(n[0],n[1],o[0],o[1],n[0]+l[0],n[1]+l[1])&&bez.pointOnLine2D(n[0],n[1],o[0],o[1],o[0]+h[0],o[1]+h[1])||n.length===3&&!(n[0]===o[0]&&n[1]===o[1]&&n[2]===o[2])&&bez.pointOnLine3D(n[0],n[1],n[2],o[0],o[1],o[2],n[0]+l[0],n[1]+l[1],n[2]+l[2])&&bez.pointOnLine3D(n[0],n[1],n[2],o[0],o[1],o[2],o[0]+h[0],o[1]+h[1],o[2]+h[2]))&&(e.k[s].to=null,e.k[s].ti=null),n[0]===o[0]&&n[1]===o[1]&&l[0]===0&&l[1]===0&&h[0]===0&&h[1]===0&&(n.length===2||n[2]===o[2]&&l[2]===0&&h[2]===0)&&(e.k[s].to=null,e.k[s].ti=null));this.effectsSequence=[getValueAtCurrentTime.bind(this)],this.data=e,this.keyframes=e.k,this.keyframesMetadata=[],this.offsetTime=t.data.st,this.k=!0,this.kf=!0,this._isFirstFrame=!0,this.mult=r||1,this.elem=t,this.container=i,this.comp=t.comp,this.getValue=processEffectsSequence,this.setVValue=setVValue,this.interpolateValue=interpolateValue,this.frameId=-1;var u=e.k[0].s.length;for(this.v=createTypedArray(\"float32\",u),this.pv=createTypedArray(\"float32\",u),s=0;s<u;s+=1)this.v[s]=initFrame,this.pv[s]=initFrame;this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray(\"float32\",u)},this.addEffect=addEffect;}var PropertyFactory=function(){function t(r,i,s,a,n){i.sid&&(i=r.globalData.slotManager.getProp(i));var o;if(!i.k.length)o=new ValueProperty(r,i,a,n);else if(typeof i.k[0]==\"number\")o=new MultiDimensionalProperty(r,i,a,n);else switch(s){case 0:o=new KeyframedValueProperty(r,i,a,n);break;case 1:o=new KeyframedMultidimensionalProperty(r,i,a,n);break}return o.effectsSequence.length&&n.addDynamicProperty(o),o}var e={getProp:t};return e}();function DynamicPropertyContainer(){}DynamicPropertyContainer.prototype={addDynamicProperty:function(t){this.dynamicProperties.indexOf(t)===-1&&(this.dynamicProperties.push(t),this.container.addDynamicProperty(this),this._isAnimated=!0);},iterateDynamicProperties:function(){this._mdf=!1;var t,e=this.dynamicProperties.length;for(t=0;t<e;t+=1)this.dynamicProperties[t].getValue(),this.dynamicProperties[t]._mdf&&(this._mdf=!0);},initDynamicPropertyContainer:function(t){this.container=t,this.dynamicProperties=[],this._mdf=!1,this._isAnimated=!1;}};var pointPool=function(){function t(){return createTypedArray(\"float32\",2)}return poolFactory(8,t)}();function ShapePath(){this.c=!1,this._length=0,this._maxLength=8,this.v=createSizedArray(this._maxLength),this.o=createSizedArray(this._maxLength),this.i=createSizedArray(this._maxLength);}ShapePath.prototype.setPathData=function(t,e){this.c=t,this.setLength(e);for(var r=0;r<e;)this.v[r]=pointPool.newElement(),this.o[r]=pointPool.newElement(),this.i[r]=pointPool.newElement(),r+=1;},ShapePath.prototype.setLength=function(t){for(;this._maxLength<t;)this.doubleArrayLength();this._length=t;},ShapePath.prototype.doubleArrayLength=function(){this.v=this.v.concat(createSizedArray(this._maxLength)),this.i=this.i.concat(createSizedArray(this._maxLength)),this.o=this.o.concat(createSizedArray(this._maxLength)),this._maxLength*=2;},ShapePath.prototype.setXYAt=function(t,e,r,i,s){var a;switch(this._length=Math.max(this._length,i+1),this._length>=this._maxLength&&this.doubleArrayLength(),r){case\"v\":a=this.v;break;case\"i\":a=this.i;break;case\"o\":a=this.o;break;default:a=[];break}(!a[i]||a[i]&&!s)&&(a[i]=pointPool.newElement()),a[i][0]=t,a[i][1]=e;},ShapePath.prototype.setTripleAt=function(t,e,r,i,s,a,n,o){this.setXYAt(t,e,\"v\",n,o),this.setXYAt(r,i,\"o\",n,o),this.setXYAt(s,a,\"i\",n,o);},ShapePath.prototype.reverse=function(){var t=new ShapePath;t.setPathData(this.c,this._length);var e=this.v,r=this.o,i=this.i,s=0;this.c&&(t.setTripleAt(e[0][0],e[0][1],i[0][0],i[0][1],r[0][0],r[0][1],0,!1),s=1);var a=this._length-1,n=this._length,o;for(o=s;o<n;o+=1)t.setTripleAt(e[a][0],e[a][1],i[a][0],i[a][1],r[a][0],r[a][1],o,!1),a-=1;return t},ShapePath.prototype.length=function(){return this._length};var shapePool=function(){function t(){return new ShapePath}function e(s){var a=s._length,n;for(n=0;n<a;n+=1)pointPool.release(s.v[n]),pointPool.release(s.i[n]),pointPool.release(s.o[n]),s.v[n]=null,s.i[n]=null,s.o[n]=null;s._length=0,s.c=!1;}function r(s){var a=i.newElement(),n,o=s._length===void 0?s.v.length:s._length;for(a.setLength(o),a.c=s.c,n=0;n<o;n+=1)a.setTripleAt(s.v[n][0],s.v[n][1],s.o[n][0],s.o[n][1],s.i[n][0],s.i[n][1],n);return a}var i=poolFactory(4,t,e);return i.clone=r,i}();function ShapeCollection(){this._length=0,this._maxLength=4,this.shapes=createSizedArray(this._maxLength);}ShapeCollection.prototype.addShape=function(t){this._length===this._maxLength&&(this.shapes=this.shapes.concat(createSizedArray(this._maxLength)),this._maxLength*=2),this.shapes[this._length]=t,this._length+=1;},ShapeCollection.prototype.releaseShapes=function(){var t;for(t=0;t<this._length;t+=1)shapePool.release(this.shapes[t]);this._length=0;};var shapeCollectionPool=function(){var t={newShapeCollection:s,release:a},e=0,r=4,i=createSizedArray(r);function s(){var n;return e?(e-=1,n=i[e]):n=new ShapeCollection,n}function a(n){var o,l=n._length;for(o=0;o<l;o+=1)shapePool.release(n.shapes[o]);n._length=0,e===r&&(i=pooling.double(i),r*=2),i[e]=n,e+=1;}return t}(),ShapePropertyFactory=function(){var t=-999999;function e(y,g,b){var x=b.lastIndex,S,C,_,T,L,G,R,j,$,F=this.keyframes;if(y<F[0].t-this.offsetTime)S=F[0].s[0],_=!0,x=0;else if(y>=F[F.length-1].t-this.offsetTime)S=F[F.length-1].s?F[F.length-1].s[0]:F[F.length-2].e[0],_=!0;else {for(var W=x,A=F.length-1,M=!0,P,E,O;M&&(P=F[W],E=F[W+1],!(E.t-this.offsetTime>y));)W<A-1?W+=1:M=!1;if(O=this.keyframesMetadata[W]||{},_=P.h===1,x=W,!_){if(y>=E.t-this.offsetTime)j=1;else if(y<P.t-this.offsetTime)j=0;else {var I;O.__fnct?I=O.__fnct:(I=BezierFactory.getBezierEasing(P.o.x,P.o.y,P.i.x,P.i.y).get,O.__fnct=I),j=I((y-(P.t-this.offsetTime))/(E.t-this.offsetTime-(P.t-this.offsetTime)));}C=E.s?E.s[0]:P.e[0];}S=P.s[0];}for(G=g._length,R=S.i[0].length,b.lastIndex=x,T=0;T<G;T+=1)for(L=0;L<R;L+=1)$=_?S.i[T][L]:S.i[T][L]+(C.i[T][L]-S.i[T][L])*j,g.i[T][L]=$,$=_?S.o[T][L]:S.o[T][L]+(C.o[T][L]-S.o[T][L])*j,g.o[T][L]=$,$=_?S.v[T][L]:S.v[T][L]+(C.v[T][L]-S.v[T][L])*j,g.v[T][L]=$;}function r(){var y=this.comp.renderedFrame-this.offsetTime,g=this.keyframes[0].t-this.offsetTime,b=this.keyframes[this.keyframes.length-1].t-this.offsetTime,x=this._caching.lastFrame;return x!==t&&(x<g&&y<g||x>b&&y>b)||(this._caching.lastIndex=x<y?this._caching.lastIndex:0,this.interpolateShape(y,this.pv,this._caching)),this._caching.lastFrame=y,this.pv}function i(){this.paths=this.localShapeCollection;}function s(y,g){if(y._length!==g._length||y.c!==g.c)return !1;var b,x=y._length;for(b=0;b<x;b+=1)if(y.v[b][0]!==g.v[b][0]||y.v[b][1]!==g.v[b][1]||y.o[b][0]!==g.o[b][0]||y.o[b][1]!==g.o[b][1]||y.i[b][0]!==g.i[b][0]||y.i[b][1]!==g.i[b][1])return !1;return !0}function a(y){s(this.v,y)||(this.v=shapePool.clone(y),this.localShapeCollection.releaseShapes(),this.localShapeCollection.addShape(this.v),this._mdf=!0,this.paths=this.localShapeCollection);}function n(){if(this.elem.globalData.frameId!==this.frameId){if(!this.effectsSequence.length){this._mdf=!1;return}if(this.lock){this.setVValue(this.pv);return}this.lock=!0,this._mdf=!1;var y;this.kf?y=this.pv:this.data.ks?y=this.data.ks.k:y=this.data.pt.k;var g,b=this.effectsSequence.length;for(g=0;g<b;g+=1)y=this.effectsSequence[g](y);this.setVValue(y),this.lock=!1,this.frameId=this.elem.globalData.frameId;}}function o(y,g,b){this.propType=\"shape\",this.comp=y.comp,this.container=y,this.elem=y,this.data=g,this.k=!1,this.kf=!1,this._mdf=!1;var x=b===3?g.pt.k:g.ks.k;this.v=shapePool.clone(x),this.pv=shapePool.clone(this.v),this.localShapeCollection=shapeCollectionPool.newShapeCollection(),this.paths=this.localShapeCollection,this.paths.addShape(this.v),this.reset=i,this.effectsSequence=[];}function l(y){this.effectsSequence.push(y),this.container.addDynamicProperty(this);}o.prototype.interpolateShape=e,o.prototype.getValue=n,o.prototype.setVValue=a,o.prototype.addEffect=l;function h(y,g,b){this.propType=\"shape\",this.comp=y.comp,this.elem=y,this.container=y,this.offsetTime=y.data.st,this.keyframes=b===3?g.pt.k:g.ks.k,this.keyframesMetadata=[],this.k=!0,this.kf=!0;var x=this.keyframes[0].s[0].i.length;this.v=shapePool.newElement(),this.v.setPathData(this.keyframes[0].s[0].c,x),this.pv=shapePool.clone(this.v),this.localShapeCollection=shapeCollectionPool.newShapeCollection(),this.paths=this.localShapeCollection,this.paths.addShape(this.v),this.lastFrame=t,this.reset=i,this._caching={lastFrame:t,lastIndex:0},this.effectsSequence=[r.bind(this)];}h.prototype.getValue=n,h.prototype.interpolateShape=e,h.prototype.setVValue=a,h.prototype.addEffect=l;var u=function(){var y=roundCorner;function g(b,x){this.v=shapePool.newElement(),this.v.setPathData(!0,4),this.localShapeCollection=shapeCollectionPool.newShapeCollection(),this.paths=this.localShapeCollection,this.localShapeCollection.addShape(this.v),this.d=x.d,this.elem=b,this.comp=b.comp,this.frameId=-1,this.initDynamicPropertyContainer(b),this.p=PropertyFactory.getProp(b,x.p,1,0,this),this.s=PropertyFactory.getProp(b,x.s,1,0,this),this.dynamicProperties.length?this.k=!0:(this.k=!1,this.convertEllToPath());}return g.prototype={reset:i,getValue:function(){this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties(),this._mdf&&this.convertEllToPath());},convertEllToPath:function(){var b=this.p.v[0],x=this.p.v[1],S=this.s.v[0]/2,C=this.s.v[1]/2,_=this.d!==3,T=this.v;T.v[0][0]=b,T.v[0][1]=x-C,T.v[1][0]=_?b+S:b-S,T.v[1][1]=x,T.v[2][0]=b,T.v[2][1]=x+C,T.v[3][0]=_?b-S:b+S,T.v[3][1]=x,T.i[0][0]=_?b-S*y:b+S*y,T.i[0][1]=x-C,T.i[1][0]=_?b+S:b-S,T.i[1][1]=x-C*y,T.i[2][0]=_?b+S*y:b-S*y,T.i[2][1]=x+C,T.i[3][0]=_?b-S:b+S,T.i[3][1]=x+C*y,T.o[0][0]=_?b+S*y:b-S*y,T.o[0][1]=x-C,T.o[1][0]=_?b+S:b-S,T.o[1][1]=x+C*y,T.o[2][0]=_?b-S*y:b+S*y,T.o[2][1]=x+C,T.o[3][0]=_?b-S:b+S,T.o[3][1]=x-C*y;}},extendPrototype([DynamicPropertyContainer],g),g}(),f=function(){function y(g,b){this.v=shapePool.newElement(),this.v.setPathData(!0,0),this.elem=g,this.comp=g.comp,this.data=b,this.frameId=-1,this.d=b.d,this.initDynamicPropertyContainer(g),b.sy===1?(this.ir=PropertyFactory.getProp(g,b.ir,0,0,this),this.is=PropertyFactory.getProp(g,b.is,0,.01,this),this.convertToPath=this.convertStarToPath):this.convertToPath=this.convertPolygonToPath,this.pt=PropertyFactory.getProp(g,b.pt,0,0,this),this.p=PropertyFactory.getProp(g,b.p,1,0,this),this.r=PropertyFactory.getProp(g,b.r,0,degToRads,this),this.or=PropertyFactory.getProp(g,b.or,0,0,this),this.os=PropertyFactory.getProp(g,b.os,0,.01,this),this.localShapeCollection=shapeCollectionPool.newShapeCollection(),this.localShapeCollection.addShape(this.v),this.paths=this.localShapeCollection,this.dynamicProperties.length?this.k=!0:(this.k=!1,this.convertToPath());}return y.prototype={reset:i,getValue:function(){this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties(),this._mdf&&this.convertToPath());},convertStarToPath:function(){var g=Math.floor(this.pt.v)*2,b=Math.PI*2/g,x=!0,S=this.or.v,C=this.ir.v,_=this.os.v,T=this.is.v,L=2*Math.PI*S/(g*2),G=2*Math.PI*C/(g*2),R,j,$,F,W=-Math.PI/2;W+=this.r.v;var A=this.data.d===3?-1:1;for(this.v._length=0,R=0;R<g;R+=1){j=x?S:C,$=x?_:T,F=x?L:G;var M=j*Math.cos(W),P=j*Math.sin(W),E=M===0&&P===0?0:P/Math.sqrt(M*M+P*P),O=M===0&&P===0?0:-M/Math.sqrt(M*M+P*P);M+=+this.p.v[0],P+=+this.p.v[1],this.v.setTripleAt(M,P,M-E*F*$*A,P-O*F*$*A,M+E*F*$*A,P+O*F*$*A,R,!0),x=!x,W+=b*A;}},convertPolygonToPath:function(){var g=Math.floor(this.pt.v),b=Math.PI*2/g,x=this.or.v,S=this.os.v,C=2*Math.PI*x/(g*4),_,T=-Math.PI*.5,L=this.data.d===3?-1:1;for(T+=this.r.v,this.v._length=0,_=0;_<g;_+=1){var G=x*Math.cos(T),R=x*Math.sin(T),j=G===0&&R===0?0:R/Math.sqrt(G*G+R*R),$=G===0&&R===0?0:-G/Math.sqrt(G*G+R*R);G+=+this.p.v[0],R+=+this.p.v[1],this.v.setTripleAt(G,R,G-j*C*S*L,R-$*C*S*L,G+j*C*S*L,R+$*C*S*L,_,!0),T+=b*L;}this.paths.length=0,this.paths[0]=this.v;}},extendPrototype([DynamicPropertyContainer],y),y}(),m=function(){function y(g,b){this.v=shapePool.newElement(),this.v.c=!0,this.localShapeCollection=shapeCollectionPool.newShapeCollection(),this.localShapeCollection.addShape(this.v),this.paths=this.localShapeCollection,this.elem=g,this.comp=g.comp,this.frameId=-1,this.d=b.d,this.initDynamicPropertyContainer(g),this.p=PropertyFactory.getProp(g,b.p,1,0,this),this.s=PropertyFactory.getProp(g,b.s,1,0,this),this.r=PropertyFactory.getProp(g,b.r,0,0,this),this.dynamicProperties.length?this.k=!0:(this.k=!1,this.convertRectToPath());}return y.prototype={convertRectToPath:function(){var g=this.p.v[0],b=this.p.v[1],x=this.s.v[0]/2,S=this.s.v[1]/2,C=bmMin(x,S,this.r.v),_=C*(1-roundCorner);this.v._length=0,this.d===2||this.d===1?(this.v.setTripleAt(g+x,b-S+C,g+x,b-S+C,g+x,b-S+_,0,!0),this.v.setTripleAt(g+x,b+S-C,g+x,b+S-_,g+x,b+S-C,1,!0),C!==0?(this.v.setTripleAt(g+x-C,b+S,g+x-C,b+S,g+x-_,b+S,2,!0),this.v.setTripleAt(g-x+C,b+S,g-x+_,b+S,g-x+C,b+S,3,!0),this.v.setTripleAt(g-x,b+S-C,g-x,b+S-C,g-x,b+S-_,4,!0),this.v.setTripleAt(g-x,b-S+C,g-x,b-S+_,g-x,b-S+C,5,!0),this.v.setTripleAt(g-x+C,b-S,g-x+C,b-S,g-x+_,b-S,6,!0),this.v.setTripleAt(g+x-C,b-S,g+x-_,b-S,g+x-C,b-S,7,!0)):(this.v.setTripleAt(g-x,b+S,g-x+_,b+S,g-x,b+S,2),this.v.setTripleAt(g-x,b-S,g-x,b-S+_,g-x,b-S,3))):(this.v.setTripleAt(g+x,b-S+C,g+x,b-S+_,g+x,b-S+C,0,!0),C!==0?(this.v.setTripleAt(g+x-C,b-S,g+x-C,b-S,g+x-_,b-S,1,!0),this.v.setTripleAt(g-x+C,b-S,g-x+_,b-S,g-x+C,b-S,2,!0),this.v.setTripleAt(g-x,b-S+C,g-x,b-S+C,g-x,b-S+_,3,!0),this.v.setTripleAt(g-x,b+S-C,g-x,b+S-_,g-x,b+S-C,4,!0),this.v.setTripleAt(g-x+C,b+S,g-x+C,b+S,g-x+_,b+S,5,!0),this.v.setTripleAt(g+x-C,b+S,g+x-_,b+S,g+x-C,b+S,6,!0),this.v.setTripleAt(g+x,b+S-C,g+x,b+S-C,g+x,b+S-_,7,!0)):(this.v.setTripleAt(g-x,b-S,g-x+_,b-S,g-x,b-S,1,!0),this.v.setTripleAt(g-x,b+S,g-x,b+S-_,g-x,b+S,2,!0),this.v.setTripleAt(g+x,b+S,g+x-_,b+S,g+x,b+S,3,!0)));},getValue:function(){this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties(),this._mdf&&this.convertRectToPath());},reset:i},extendPrototype([DynamicPropertyContainer],y),y}();function d(y,g,b){var x;if(b===3||b===4){var S=b===3?g.pt:g.ks,C=S.k;C.length?x=new h(y,g,b):x=new o(y,g,b);}else b===5?x=new m(y,g):b===6?x=new u(y,g):b===7&&(x=new f(y,g));return x.k&&y.addDynamicProperty(x),x}function p(){return o}function c(){return h}var v={};return v.getShapeProp=d,v.getConstructorFunction=p,v.getKeyframedConstructorFunction=c,v}(),Matrix=function(){var t=Math.cos,e=Math.sin,r=Math.tan,i=Math.round;function s(){return this.props[0]=1,this.props[1]=0,this.props[2]=0,this.props[3]=0,this.props[4]=0,this.props[5]=1,this.props[6]=0,this.props[7]=0,this.props[8]=0,this.props[9]=0,this.props[10]=1,this.props[11]=0,this.props[12]=0,this.props[13]=0,this.props[14]=0,this.props[15]=1,this}function a(P){if(P===0)return this;var E=t(P),O=e(P);return this._t(E,-O,0,0,O,E,0,0,0,0,1,0,0,0,0,1)}function n(P){if(P===0)return this;var E=t(P),O=e(P);return this._t(1,0,0,0,0,E,-O,0,0,O,E,0,0,0,0,1)}function o(P){if(P===0)return this;var E=t(P),O=e(P);return this._t(E,0,O,0,0,1,0,0,-O,0,E,0,0,0,0,1)}function l(P){if(P===0)return this;var E=t(P),O=e(P);return this._t(E,-O,0,0,O,E,0,0,0,0,1,0,0,0,0,1)}function h(P,E){return this._t(1,E,P,1,0,0)}function u(P,E){return this.shear(r(P),r(E))}function f(P,E){var O=t(E),I=e(E);return this._t(O,I,0,0,-I,O,0,0,0,0,1,0,0,0,0,1)._t(1,0,0,0,r(P),1,0,0,0,0,1,0,0,0,0,1)._t(O,-I,0,0,I,O,0,0,0,0,1,0,0,0,0,1)}function m(P,E,O){return !O&&O!==0&&(O=1),P===1&&E===1&&O===1?this:this._t(P,0,0,0,0,E,0,0,0,0,O,0,0,0,0,1)}function d(P,E,O,I,Z,K,q,H,Q,rt,st,ut,mt,ot,ht,at){return this.props[0]=P,this.props[1]=E,this.props[2]=O,this.props[3]=I,this.props[4]=Z,this.props[5]=K,this.props[6]=q,this.props[7]=H,this.props[8]=Q,this.props[9]=rt,this.props[10]=st,this.props[11]=ut,this.props[12]=mt,this.props[13]=ot,this.props[14]=ht,this.props[15]=at,this}function p(P,E,O){return O=O||0,P!==0||E!==0||O!==0?this._t(1,0,0,0,0,1,0,0,0,0,1,0,P,E,O,1):this}function c(P,E,O,I,Z,K,q,H,Q,rt,st,ut,mt,ot,ht,at){var tt=this.props;if(P===1&&E===0&&O===0&&I===0&&Z===0&&K===1&&q===0&&H===0&&Q===0&&rt===0&&st===1&&ut===0)return tt[12]=tt[12]*P+tt[15]*mt,tt[13]=tt[13]*K+tt[15]*ot,tt[14]=tt[14]*st+tt[15]*ht,tt[15]*=at,this._identityCalculated=!1,this;var Mt=tt[0],Lt=tt[1],It=tt[2],Dt=tt[3],St=tt[4],Et=tt[5],pt=tt[6],J=tt[7],Y=tt[8],nt=tt[9],ct=tt[10],Ct=tt[11],Yt=tt[12],te=tt[13],he=tt[14],pe=tt[15];return tt[0]=Mt*P+Lt*Z+It*Q+Dt*mt,tt[1]=Mt*E+Lt*K+It*rt+Dt*ot,tt[2]=Mt*O+Lt*q+It*st+Dt*ht,tt[3]=Mt*I+Lt*H+It*ut+Dt*at,tt[4]=St*P+Et*Z+pt*Q+J*mt,tt[5]=St*E+Et*K+pt*rt+J*ot,tt[6]=St*O+Et*q+pt*st+J*ht,tt[7]=St*I+Et*H+pt*ut+J*at,tt[8]=Y*P+nt*Z+ct*Q+Ct*mt,tt[9]=Y*E+nt*K+ct*rt+Ct*ot,tt[10]=Y*O+nt*q+ct*st+Ct*ht,tt[11]=Y*I+nt*H+ct*ut+Ct*at,tt[12]=Yt*P+te*Z+he*Q+pe*mt,tt[13]=Yt*E+te*K+he*rt+pe*ot,tt[14]=Yt*O+te*q+he*st+pe*ht,tt[15]=Yt*I+te*H+he*ut+pe*at,this._identityCalculated=!1,this}function v(P){var E=P.props;return this.transform(E[0],E[1],E[2],E[3],E[4],E[5],E[6],E[7],E[8],E[9],E[10],E[11],E[12],E[13],E[14],E[15])}function y(){return this._identityCalculated||(this._identity=!(this.props[0]!==1||this.props[1]!==0||this.props[2]!==0||this.props[3]!==0||this.props[4]!==0||this.props[5]!==1||this.props[6]!==0||this.props[7]!==0||this.props[8]!==0||this.props[9]!==0||this.props[10]!==1||this.props[11]!==0||this.props[12]!==0||this.props[13]!==0||this.props[14]!==0||this.props[15]!==1),this._identityCalculated=!0),this._identity}function g(P){for(var E=0;E<16;){if(P.props[E]!==this.props[E])return !1;E+=1;}return !0}function b(P){var E;for(E=0;E<16;E+=1)P.props[E]=this.props[E];return P}function x(P){var E;for(E=0;E<16;E+=1)this.props[E]=P[E];}function S(P,E,O){return {x:P*this.props[0]+E*this.props[4]+O*this.props[8]+this.props[12],y:P*this.props[1]+E*this.props[5]+O*this.props[9]+this.props[13],z:P*this.props[2]+E*this.props[6]+O*this.props[10]+this.props[14]}}function C(P,E,O){return P*this.props[0]+E*this.props[4]+O*this.props[8]+this.props[12]}function _(P,E,O){return P*this.props[1]+E*this.props[5]+O*this.props[9]+this.props[13]}function T(P,E,O){return P*this.props[2]+E*this.props[6]+O*this.props[10]+this.props[14]}function L(){var P=this.props[0]*this.props[5]-this.props[1]*this.props[4],E=this.props[5]/P,O=-this.props[1]/P,I=-this.props[4]/P,Z=this.props[0]/P,K=(this.props[4]*this.props[13]-this.props[5]*this.props[12])/P,q=-(this.props[0]*this.props[13]-this.props[1]*this.props[12])/P,H=new Matrix;return H.props[0]=E,H.props[1]=O,H.props[4]=I,H.props[5]=Z,H.props[12]=K,H.props[13]=q,H}function G(P){var E=this.getInverseMatrix();return E.applyToPointArray(P[0],P[1],P[2]||0)}function R(P){var E,O=P.length,I=[];for(E=0;E<O;E+=1)I[E]=G(P[E]);return I}function j(P,E,O){var I=createTypedArray(\"float32\",6);if(this.isIdentity())I[0]=P[0],I[1]=P[1],I[2]=E[0],I[3]=E[1],I[4]=O[0],I[5]=O[1];else {var Z=this.props[0],K=this.props[1],q=this.props[4],H=this.props[5],Q=this.props[12],rt=this.props[13];I[0]=P[0]*Z+P[1]*q+Q,I[1]=P[0]*K+P[1]*H+rt,I[2]=E[0]*Z+E[1]*q+Q,I[3]=E[0]*K+E[1]*H+rt,I[4]=O[0]*Z+O[1]*q+Q,I[5]=O[0]*K+O[1]*H+rt;}return I}function $(P,E,O){var I;return this.isIdentity()?I=[P,E,O]:I=[P*this.props[0]+E*this.props[4]+O*this.props[8]+this.props[12],P*this.props[1]+E*this.props[5]+O*this.props[9]+this.props[13],P*this.props[2]+E*this.props[6]+O*this.props[10]+this.props[14]],I}function F(P,E){if(this.isIdentity())return P+\",\"+E;var O=this.props;return Math.round((P*O[0]+E*O[4]+O[12])*100)/100+\",\"+Math.round((P*O[1]+E*O[5]+O[13])*100)/100}function W(){for(var P=0,E=this.props,O=\"matrix3d(\",I=1e4;P<16;)O+=i(E[P]*I)/I,O+=P===15?\")\":\",\",P+=1;return O}function A(P){var E=1e4;return P<1e-6&&P>0||P>-1e-6&&P<0?i(P*E)/E:P}function M(){var P=this.props,E=A(P[0]),O=A(P[1]),I=A(P[4]),Z=A(P[5]),K=A(P[12]),q=A(P[13]);return \"matrix(\"+E+\",\"+O+\",\"+I+\",\"+Z+\",\"+K+\",\"+q+\")\"}return function(){this.reset=s,this.rotate=a,this.rotateX=n,this.rotateY=o,this.rotateZ=l,this.skew=u,this.skewFromAxis=f,this.shear=h,this.scale=m,this.setTransform=d,this.translate=p,this.transform=c,this.multiply=v,this.applyToPoint=S,this.applyToX=C,this.applyToY=_,this.applyToZ=T,this.applyToPointArray=$,this.applyToTriplePoints=j,this.applyToPointStringified=F,this.toCSS=W,this.to2dCSS=M,this.clone=b,this.cloneFromProps=x,this.equals=g,this.inversePoints=R,this.inversePoint=G,this.getInverseMatrix=L,this._t=this.transform,this.isIdentity=y,this._identity=!0,this._identityCalculated=!1,this.props=createTypedArray(\"float32\",16),this.reset();}}();function _typeof$3(t){\"@babel/helpers - typeof\";return typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?_typeof$3=function(e){return typeof e}:_typeof$3=function(e){return e&&typeof Symbol==\"function\"&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},_typeof$3(t)}var lottie={};function setLocation(t){setLocationHref(t);}function searchAnimations(){animationManager.searchAnimations();}function setSubframeRendering(t){setSubframeEnabled(t);}function setPrefix(t){setIdPrefix(t);}function loadAnimation(t){return animationManager.loadAnimation(t)}function setQuality(t){if(typeof t==\"string\")switch(t){case\"high\":setDefaultCurveSegments(200);break;default:case\"medium\":setDefaultCurveSegments(50);break;case\"low\":setDefaultCurveSegments(10);break}else !isNaN(t)&&t>1&&setDefaultCurveSegments(t);}function inBrowser(){return typeof navigator<\"u\"}function installPlugin(t,e){t===\"expressions\"&&setExpressionsPlugin(e);}function getFactory(t){switch(t){case\"propertyFactory\":return PropertyFactory;case\"shapePropertyFactory\":return ShapePropertyFactory;case\"matrix\":return Matrix;default:return null}}lottie.play=animationManager.play,lottie.pause=animationManager.pause,lottie.setLocationHref=setLocation,lottie.togglePause=animationManager.togglePause,lottie.setSpeed=animationManager.setSpeed,lottie.setDirection=animationManager.setDirection,lottie.stop=animationManager.stop,lottie.searchAnimations=searchAnimations,lottie.registerAnimation=animationManager.registerAnimation,lottie.loadAnimation=loadAnimation,lottie.setSubframeRendering=setSubframeRendering,lottie.resize=animationManager.resize,lottie.goToAndStop=animationManager.goToAndStop,lottie.destroy=animationManager.destroy,lottie.setQuality=setQuality,lottie.inBrowser=inBrowser,lottie.installPlugin=installPlugin,lottie.freeze=animationManager.freeze,lottie.unfreeze=animationManager.unfreeze,lottie.setVolume=animationManager.setVolume,lottie.mute=animationManager.mute,lottie.unmute=animationManager.unmute,lottie.getRegisteredAnimations=animationManager.getRegisteredAnimations,lottie.useWebWorker=setWebWorker,lottie.setIDPrefix=setPrefix,lottie.__getFactory=getFactory,lottie.version=\"5.12.2\";function checkReady(){document.readyState===\"complete\"&&(clearInterval(readyStateCheckInterval),searchAnimations());}function getQueryVariable(t){for(var e=queryString.split(\"&\"),r=0;r<e.length;r+=1){var i=e[r].split(\"=\");if(decodeURIComponent(i[0])==t)return decodeURIComponent(i[1])}return null}var queryString=\"\";{var scripts=document.getElementsByTagName(\"script\"),index=scripts.length-1,myScript=scripts[index]||{src:\"\"};queryString=myScript.src?myScript.src.replace(/^[^\\?]+\\??/,\"\"):\"\",getQueryVariable(\"renderer\");}var readyStateCheckInterval=setInterval(checkReady,100);try{!((typeof exports>\"u\"?\"undefined\":_typeof$3(exports))===\"object\"&&typeof module<\"u\")&&!(typeof define==\"function\"&&__webpack_require__.amdO)&&(window.bodymovin=lottie);}catch(t){}var ShapeModifiers=function(){var t={},e={};t.registerModifier=r,t.getModifier=i;function r(s,a){e[s]||(e[s]=a);}function i(s,a,n){return new e[s](a,n)}return t}();function ShapeModifier(){}ShapeModifier.prototype.initModifierProperties=function(){},ShapeModifier.prototype.addShapeToModifier=function(){},ShapeModifier.prototype.addShape=function(t){if(!this.closed){t.sh.container.addDynamicProperty(t.sh);var e={shape:t.sh,data:t,localShapeCollection:shapeCollectionPool.newShapeCollection()};this.shapes.push(e),this.addShapeToModifier(e),this._isAnimated&&t.setAsAnimated();}},ShapeModifier.prototype.init=function(t,e){this.shapes=[],this.elem=t,this.initDynamicPropertyContainer(t),this.initModifierProperties(t,e),this.frameId=initialDefaultFrame,this.closed=!1,this.k=!1,this.dynamicProperties.length?this.k=!0:this.getValue(!0);},ShapeModifier.prototype.processKeys=function(){this.elem.globalData.frameId!==this.frameId&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties());},extendPrototype([DynamicPropertyContainer],ShapeModifier);function TrimModifier(){}extendPrototype([ShapeModifier],TrimModifier),TrimModifier.prototype.initModifierProperties=function(t,e){this.s=PropertyFactory.getProp(t,e.s,0,.01,this),this.e=PropertyFactory.getProp(t,e.e,0,.01,this),this.o=PropertyFactory.getProp(t,e.o,0,0,this),this.sValue=0,this.eValue=0,this.getValue=this.processKeys,this.m=e.m,this._isAnimated=!!this.s.effectsSequence.length||!!this.e.effectsSequence.length||!!this.o.effectsSequence.length;},TrimModifier.prototype.addShapeToModifier=function(t){t.pathsData=[];},TrimModifier.prototype.calculateShapeEdges=function(t,e,r,i,s){var a=[];e<=1?a.push({s:t,e}):t>=1?a.push({s:t-1,e:e-1}):(a.push({s:t,e:1}),a.push({s:0,e:e-1}));var n=[],o,l=a.length,h;for(o=0;o<l;o+=1)if(h=a[o],!(h.e*s<i||h.s*s>i+r)){var u,f;h.s*s<=i?u=0:u=(h.s*s-i)/r,h.e*s>=i+r?f=1:f=(h.e*s-i)/r,n.push([u,f]);}return n.length||n.push([0,0]),n},TrimModifier.prototype.releasePathsData=function(t){var e,r=t.length;for(e=0;e<r;e+=1)segmentsLengthPool.release(t[e]);return t.length=0,t},TrimModifier.prototype.processShapes=function(t){var e,r;if(this._mdf||t){var i=this.o.v%360/360;if(i<0&&(i+=1),this.s.v>1?e=1+i:this.s.v<0?e=0+i:e=this.s.v+i,this.e.v>1?r=1+i:this.e.v<0?r=0+i:r=this.e.v+i,e>r){var s=e;e=r,r=s;}e=Math.round(e*1e4)*1e-4,r=Math.round(r*1e4)*1e-4,this.sValue=e,this.eValue=r;}else e=this.sValue,r=this.eValue;var a,n,o=this.shapes.length,l,h,u,f,m,d=0;if(r===e)for(n=0;n<o;n+=1)this.shapes[n].localShapeCollection.releaseShapes(),this.shapes[n].shape._mdf=!0,this.shapes[n].shape.paths=this.shapes[n].localShapeCollection,this._mdf&&(this.shapes[n].pathsData.length=0);else if(r===1&&e===0||r===0&&e===1){if(this._mdf)for(n=0;n<o;n+=1)this.shapes[n].pathsData.length=0,this.shapes[n].shape._mdf=!0;}else {var p=[],c,v;for(n=0;n<o;n+=1)if(c=this.shapes[n],!c.shape._mdf&&!this._mdf&&!t&&this.m!==2)c.shape.paths=c.localShapeCollection;else {if(a=c.shape.paths,h=a._length,m=0,!c.shape._mdf&&c.pathsData.length)m=c.totalShapeLength;else {for(u=this.releasePathsData(c.pathsData),l=0;l<h;l+=1)f=bez.getSegmentsLength(a.shapes[l]),u.push(f),m+=f.totalLength;c.totalShapeLength=m,c.pathsData=u;}d+=m,c.shape._mdf=!0;}var y=e,g=r,b=0,x;for(n=o-1;n>=0;n-=1)if(c=this.shapes[n],c.shape._mdf){for(v=c.localShapeCollection,v.releaseShapes(),this.m===2&&o>1?(x=this.calculateShapeEdges(e,r,c.totalShapeLength,b,d),b+=c.totalShapeLength):x=[[y,g]],h=x.length,l=0;l<h;l+=1){y=x[l][0],g=x[l][1],p.length=0,g<=1?p.push({s:c.totalShapeLength*y,e:c.totalShapeLength*g}):y>=1?p.push({s:c.totalShapeLength*(y-1),e:c.totalShapeLength*(g-1)}):(p.push({s:c.totalShapeLength*y,e:c.totalShapeLength}),p.push({s:0,e:c.totalShapeLength*(g-1)}));var S=this.addShapes(c,p[0]);if(p[0].s!==p[0].e){if(p.length>1){var C=c.shape.paths.shapes[c.shape.paths._length-1];if(C.c){var _=S.pop();this.addPaths(S,v),S=this.addShapes(c,p[1],_);}else this.addPaths(S,v),S=this.addShapes(c,p[1]);}this.addPaths(S,v);}}c.shape.paths=v;}}},TrimModifier.prototype.addPaths=function(t,e){var r,i=t.length;for(r=0;r<i;r+=1)e.addShape(t[r]);},TrimModifier.prototype.addSegment=function(t,e,r,i,s,a,n){s.setXYAt(e[0],e[1],\"o\",a),s.setXYAt(r[0],r[1],\"i\",a+1),n&&s.setXYAt(t[0],t[1],\"v\",a),s.setXYAt(i[0],i[1],\"v\",a+1);},TrimModifier.prototype.addSegmentFromArray=function(t,e,r,i){e.setXYAt(t[1],t[5],\"o\",r),e.setXYAt(t[2],t[6],\"i\",r+1),i&&e.setXYAt(t[0],t[4],\"v\",r),e.setXYAt(t[3],t[7],\"v\",r+1);},TrimModifier.prototype.addShapes=function(t,e,r){var i=t.pathsData,s=t.shape.paths.shapes,a,n=t.shape.paths._length,o,l,h=0,u,f,m,d,p=[],c,v=!0;for(r?(f=r._length,c=r._length):(r=shapePool.newElement(),f=0,c=0),p.push(r),a=0;a<n;a+=1){for(m=i[a].lengths,r.c=s[a].c,l=s[a].c?m.length:m.length+1,o=1;o<l;o+=1)if(u=m[o-1],h+u.addedLength<e.s)h+=u.addedLength,r.c=!1;else if(h>e.e){r.c=!1;break}else e.s<=h&&e.e>=h+u.addedLength?(this.addSegment(s[a].v[o-1],s[a].o[o-1],s[a].i[o],s[a].v[o],r,f,v),v=!1):(d=bez.getNewSegment(s[a].v[o-1],s[a].v[o],s[a].o[o-1],s[a].i[o],(e.s-h)/u.addedLength,(e.e-h)/u.addedLength,m[o-1]),this.addSegmentFromArray(d,r,f,v),v=!1,r.c=!1),h+=u.addedLength,f+=1;if(s[a].c&&m.length){if(u=m[o-1],h<=e.e){var y=m[o-1].addedLength;e.s<=h&&e.e>=h+y?(this.addSegment(s[a].v[o-1],s[a].o[o-1],s[a].i[0],s[a].v[0],r,f,v),v=!1):(d=bez.getNewSegment(s[a].v[o-1],s[a].v[0],s[a].o[o-1],s[a].i[0],(e.s-h)/y,(e.e-h)/y,m[o-1]),this.addSegmentFromArray(d,r,f,v),v=!1,r.c=!1);}else r.c=!1;h+=u.addedLength,f+=1;}if(r._length&&(r.setXYAt(r.v[c][0],r.v[c][1],\"i\",c),r.setXYAt(r.v[r._length-1][0],r.v[r._length-1][1],\"o\",r._length-1)),h>e.e)break;a<n-1&&(r=shapePool.newElement(),v=!0,p.push(r),f=0);}return p};function PuckerAndBloatModifier(){}extendPrototype([ShapeModifier],PuckerAndBloatModifier),PuckerAndBloatModifier.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.amount=PropertyFactory.getProp(t,e.a,0,null,this),this._isAnimated=!!this.amount.effectsSequence.length;},PuckerAndBloatModifier.prototype.processPath=function(t,e){var r=e/100,i=[0,0],s=t._length,a=0;for(a=0;a<s;a+=1)i[0]+=t.v[a][0],i[1]+=t.v[a][1];i[0]/=s,i[1]/=s;var n=shapePool.newElement();n.c=t.c;var o,l,h,u,f,m;for(a=0;a<s;a+=1)o=t.v[a][0]+(i[0]-t.v[a][0])*r,l=t.v[a][1]+(i[1]-t.v[a][1])*r,h=t.o[a][0]+(i[0]-t.o[a][0])*-r,u=t.o[a][1]+(i[1]-t.o[a][1])*-r,f=t.i[a][0]+(i[0]-t.i[a][0])*-r,m=t.i[a][1]+(i[1]-t.i[a][1])*-r,n.setTripleAt(o,l,h,u,f,m,a);return n},PuckerAndBloatModifier.prototype.processShapes=function(t){var e,r,i=this.shapes.length,s,a,n=this.amount.v;if(n!==0){var o,l;for(r=0;r<i;r+=1){if(o=this.shapes[r],l=o.localShapeCollection,!(!o.shape._mdf&&!this._mdf&&!t))for(l.releaseShapes(),o.shape._mdf=!0,e=o.shape.paths.shapes,a=o.shape.paths._length,s=0;s<a;s+=1)l.addShape(this.processPath(e[s],n));o.shape.paths=o.localShapeCollection;}}this.dynamicProperties.length||(this._mdf=!1);};var TransformPropertyFactory=function(){var t=[0,0];function e(l){var h=this._mdf;this.iterateDynamicProperties(),this._mdf=this._mdf||h,this.a&&l.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]),this.s&&l.scale(this.s.v[0],this.s.v[1],this.s.v[2]),this.sk&&l.skewFromAxis(-this.sk.v,this.sa.v),this.r?l.rotate(-this.r.v):l.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),this.data.p.s?this.data.p.z?l.translate(this.px.v,this.py.v,-this.pz.v):l.translate(this.px.v,this.py.v,0):l.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);}function r(l){if(this.elem.globalData.frameId!==this.frameId){if(this._isDirty&&(this.precalculateMatrix(),this._isDirty=!1),this.iterateDynamicProperties(),this._mdf||l){var h;if(this.v.cloneFromProps(this.pre.props),this.appliedTransformations<1&&this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]),this.appliedTransformations<2&&this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]),this.sk&&this.appliedTransformations<3&&this.v.skewFromAxis(-this.sk.v,this.sa.v),this.r&&this.appliedTransformations<4?this.v.rotate(-this.r.v):!this.r&&this.appliedTransformations<4&&this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),this.autoOriented){var u,f;if(h=this.elem.globalData.frameRate,this.p&&this.p.keyframes&&this.p.getValueAtTime)this.p._caching.lastFrame+this.p.offsetTime<=this.p.keyframes[0].t?(u=this.p.getValueAtTime((this.p.keyframes[0].t+.01)/h,0),f=this.p.getValueAtTime(this.p.keyframes[0].t/h,0)):this.p._caching.lastFrame+this.p.offsetTime>=this.p.keyframes[this.p.keyframes.length-1].t?(u=this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length-1].t/h,0),f=this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length-1].t-.05)/h,0)):(u=this.p.pv,f=this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime-.01)/h,this.p.offsetTime));else if(this.px&&this.px.keyframes&&this.py.keyframes&&this.px.getValueAtTime&&this.py.getValueAtTime){u=[],f=[];var m=this.px,d=this.py;m._caching.lastFrame+m.offsetTime<=m.keyframes[0].t?(u[0]=m.getValueAtTime((m.keyframes[0].t+.01)/h,0),u[1]=d.getValueAtTime((d.keyframes[0].t+.01)/h,0),f[0]=m.getValueAtTime(m.keyframes[0].t/h,0),f[1]=d.getValueAtTime(d.keyframes[0].t/h,0)):m._caching.lastFrame+m.offsetTime>=m.keyframes[m.keyframes.length-1].t?(u[0]=m.getValueAtTime(m.keyframes[m.keyframes.length-1].t/h,0),u[1]=d.getValueAtTime(d.keyframes[d.keyframes.length-1].t/h,0),f[0]=m.getValueAtTime((m.keyframes[m.keyframes.length-1].t-.01)/h,0),f[1]=d.getValueAtTime((d.keyframes[d.keyframes.length-1].t-.01)/h,0)):(u=[m.pv,d.pv],f[0]=m.getValueAtTime((m._caching.lastFrame+m.offsetTime-.01)/h,m.offsetTime),f[1]=d.getValueAtTime((d._caching.lastFrame+d.offsetTime-.01)/h,d.offsetTime));}else f=t,u=f;this.v.rotate(-Math.atan2(u[1]-f[1],u[0]-f[0]));}this.data.p&&this.data.p.s?this.data.p.z?this.v.translate(this.px.v,this.py.v,-this.pz.v):this.v.translate(this.px.v,this.py.v,0):this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);}this.frameId=this.elem.globalData.frameId;}}function i(){if(this.appliedTransformations=0,this.pre.reset(),!this.a.effectsSequence.length)this.pre.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]),this.appliedTransformations=1;else return;if(!this.s.effectsSequence.length)this.pre.scale(this.s.v[0],this.s.v[1],this.s.v[2]),this.appliedTransformations=2;else return;if(this.sk)if(!this.sk.effectsSequence.length&&!this.sa.effectsSequence.length)this.pre.skewFromAxis(-this.sk.v,this.sa.v),this.appliedTransformations=3;else return;this.r?this.r.effectsSequence.length||(this.pre.rotate(-this.r.v),this.appliedTransformations=4):!this.rz.effectsSequence.length&&!this.ry.effectsSequence.length&&!this.rx.effectsSequence.length&&!this.or.effectsSequence.length&&(this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),this.appliedTransformations=4);}function s(){}function a(l){this._addDynamicProperty(l),this.elem.addDynamicProperty(l),this._isDirty=!0;}function n(l,h,u){if(this.elem=l,this.frameId=-1,this.propType=\"transform\",this.data=h,this.v=new Matrix,this.pre=new Matrix,this.appliedTransformations=0,this.initDynamicPropertyContainer(u||l),h.p&&h.p.s?(this.px=PropertyFactory.getProp(l,h.p.x,0,0,this),this.py=PropertyFactory.getProp(l,h.p.y,0,0,this),h.p.z&&(this.pz=PropertyFactory.getProp(l,h.p.z,0,0,this))):this.p=PropertyFactory.getProp(l,h.p||{k:[0,0,0]},1,0,this),h.rx){if(this.rx=PropertyFactory.getProp(l,h.rx,0,degToRads,this),this.ry=PropertyFactory.getProp(l,h.ry,0,degToRads,this),this.rz=PropertyFactory.getProp(l,h.rz,0,degToRads,this),h.or.k[0].ti){var f,m=h.or.k.length;for(f=0;f<m;f+=1)h.or.k[f].to=null,h.or.k[f].ti=null;}this.or=PropertyFactory.getProp(l,h.or,1,degToRads,this),this.or.sh=!0;}else this.r=PropertyFactory.getProp(l,h.r||{k:0},0,degToRads,this);h.sk&&(this.sk=PropertyFactory.getProp(l,h.sk,0,degToRads,this),this.sa=PropertyFactory.getProp(l,h.sa,0,degToRads,this)),this.a=PropertyFactory.getProp(l,h.a||{k:[0,0,0]},1,0,this),this.s=PropertyFactory.getProp(l,h.s||{k:[100,100,100]},1,.01,this),h.o?this.o=PropertyFactory.getProp(l,h.o,0,.01,l):this.o={_mdf:!1,v:1},this._isDirty=!0,this.dynamicProperties.length||this.getValue(!0);}n.prototype={applyToMatrix:e,getValue:r,precalculateMatrix:i,autoOrient:s},extendPrototype([DynamicPropertyContainer],n),n.prototype.addDynamicProperty=a,n.prototype._addDynamicProperty=DynamicPropertyContainer.prototype.addDynamicProperty;function o(l,h,u){return new n(l,h,u)}return {getTransformProperty:o}}();function RepeaterModifier(){}extendPrototype([ShapeModifier],RepeaterModifier),RepeaterModifier.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.c=PropertyFactory.getProp(t,e.c,0,null,this),this.o=PropertyFactory.getProp(t,e.o,0,null,this),this.tr=TransformPropertyFactory.getTransformProperty(t,e.tr,this),this.so=PropertyFactory.getProp(t,e.tr.so,0,.01,this),this.eo=PropertyFactory.getProp(t,e.tr.eo,0,.01,this),this.data=e,this.dynamicProperties.length||this.getValue(!0),this._isAnimated=!!this.dynamicProperties.length,this.pMatrix=new Matrix,this.rMatrix=new Matrix,this.sMatrix=new Matrix,this.tMatrix=new Matrix,this.matrix=new Matrix;},RepeaterModifier.prototype.applyTransforms=function(t,e,r,i,s,a){var n=a?-1:1,o=i.s.v[0]+(1-i.s.v[0])*(1-s),l=i.s.v[1]+(1-i.s.v[1])*(1-s);t.translate(i.p.v[0]*n*s,i.p.v[1]*n*s,i.p.v[2]),e.translate(-i.a.v[0],-i.a.v[1],i.a.v[2]),e.rotate(-i.r.v*n*s),e.translate(i.a.v[0],i.a.v[1],i.a.v[2]),r.translate(-i.a.v[0],-i.a.v[1],i.a.v[2]),r.scale(a?1/o:o,a?1/l:l),r.translate(i.a.v[0],i.a.v[1],i.a.v[2]);},RepeaterModifier.prototype.init=function(t,e,r,i){for(this.elem=t,this.arr=e,this.pos=r,this.elemsData=i,this._currentCopies=0,this._elements=[],this._groups=[],this.frameId=-1,this.initDynamicPropertyContainer(t),this.initModifierProperties(t,e[r]);r>0;)r-=1,this._elements.unshift(e[r]);this.dynamicProperties.length?this.k=!0:this.getValue(!0);},RepeaterModifier.prototype.resetElements=function(t){var e,r=t.length;for(e=0;e<r;e+=1)t[e]._processed=!1,t[e].ty===\"gr\"&&this.resetElements(t[e].it);},RepeaterModifier.prototype.cloneElements=function(t){var e=JSON.parse(JSON.stringify(t));return this.resetElements(e),e},RepeaterModifier.prototype.changeGroupRender=function(t,e){var r,i=t.length;for(r=0;r<i;r+=1)t[r]._render=e,t[r].ty===\"gr\"&&this.changeGroupRender(t[r].it,e);},RepeaterModifier.prototype.processShapes=function(t){var e,r,i,s,a,n=!1;if(this._mdf||t){var o=Math.ceil(this.c.v);if(this._groups.length<o){for(;this._groups.length<o;){var l={it:this.cloneElements(this._elements),ty:\"gr\"};l.it.push({a:{a:0,ix:1,k:[0,0]},nm:\"Transform\",o:{a:0,ix:7,k:100},p:{a:0,ix:2,k:[0,0]},r:{a:1,ix:6,k:[{s:0,e:0,t:0},{s:0,e:0,t:1}]},s:{a:0,ix:3,k:[100,100]},sa:{a:0,ix:5,k:0},sk:{a:0,ix:4,k:0},ty:\"tr\"}),this.arr.splice(0,0,l),this._groups.splice(0,0,l),this._currentCopies+=1;}this.elem.reloadShapes(),n=!0;}a=0;var h;for(i=0;i<=this._groups.length-1;i+=1){if(h=a<o,this._groups[i]._render=h,this.changeGroupRender(this._groups[i].it,h),!h){var u=this.elemsData[i].it,f=u[u.length-1];f.transform.op.v!==0?(f.transform.op._mdf=!0,f.transform.op.v=0):f.transform.op._mdf=!1;}a+=1;}this._currentCopies=o;var m=this.o.v,d=m%1,p=m>0?Math.floor(m):Math.ceil(m),c=this.pMatrix.props,v=this.rMatrix.props,y=this.sMatrix.props;this.pMatrix.reset(),this.rMatrix.reset(),this.sMatrix.reset(),this.tMatrix.reset(),this.matrix.reset();var g=0;if(m>0){for(;g<p;)this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,!1),g+=1;d&&(this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,d,!1),g+=d);}else if(m<0){for(;g>p;)this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,!0),g-=1;d&&(this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,-d,!0),g-=d);}i=this.data.m===1?0:this._currentCopies-1,s=this.data.m===1?1:-1,a=this._currentCopies;for(var b,x;a;){if(e=this.elemsData[i].it,r=e[e.length-1].transform.mProps.v.props,x=r.length,e[e.length-1].transform.mProps._mdf=!0,e[e.length-1].transform.op._mdf=!0,e[e.length-1].transform.op.v=this._currentCopies===1?this.so.v:this.so.v+(this.eo.v-this.so.v)*(i/(this._currentCopies-1)),g!==0){for((i!==0&&s===1||i!==this._currentCopies-1&&s===-1)&&this.applyTransforms(this.pMatrix,this.rMatrix,this.sMatrix,this.tr,1,!1),this.matrix.transform(v[0],v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9],v[10],v[11],v[12],v[13],v[14],v[15]),this.matrix.transform(y[0],y[1],y[2],y[3],y[4],y[5],y[6],y[7],y[8],y[9],y[10],y[11],y[12],y[13],y[14],y[15]),this.matrix.transform(c[0],c[1],c[2],c[3],c[4],c[5],c[6],c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15]),b=0;b<x;b+=1)r[b]=this.matrix.props[b];this.matrix.reset();}else for(this.matrix.reset(),b=0;b<x;b+=1)r[b]=this.matrix.props[b];g+=1,a-=1,i+=s;}}else for(a=this._currentCopies,i=0,s=1;a;)e=this.elemsData[i].it,r=e[e.length-1].transform.mProps.v.props,e[e.length-1].transform.mProps._mdf=!1,e[e.length-1].transform.op._mdf=!1,a-=1,i+=s;return n},RepeaterModifier.prototype.addShape=function(){};function RoundCornersModifier(){}extendPrototype([ShapeModifier],RoundCornersModifier),RoundCornersModifier.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.rd=PropertyFactory.getProp(t,e.r,0,null,this),this._isAnimated=!!this.rd.effectsSequence.length;},RoundCornersModifier.prototype.processPath=function(t,e){var r=shapePool.newElement();r.c=t.c;var i,s=t._length,a,n,o,l,h,u,f=0,m,d,p,c,v,y;for(i=0;i<s;i+=1)a=t.v[i],o=t.o[i],n=t.i[i],a[0]===o[0]&&a[1]===o[1]&&a[0]===n[0]&&a[1]===n[1]?(i===0||i===s-1)&&!t.c?(r.setTripleAt(a[0],a[1],o[0],o[1],n[0],n[1],f),f+=1):(i===0?l=t.v[s-1]:l=t.v[i-1],h=Math.sqrt(Math.pow(a[0]-l[0],2)+Math.pow(a[1]-l[1],2)),u=h?Math.min(h/2,e)/h:0,v=a[0]+(l[0]-a[0])*u,m=v,y=a[1]-(a[1]-l[1])*u,d=y,p=m-(m-a[0])*roundCorner,c=d-(d-a[1])*roundCorner,r.setTripleAt(m,d,p,c,v,y,f),f+=1,i===s-1?l=t.v[0]:l=t.v[i+1],h=Math.sqrt(Math.pow(a[0]-l[0],2)+Math.pow(a[1]-l[1],2)),u=h?Math.min(h/2,e)/h:0,p=a[0]+(l[0]-a[0])*u,m=p,c=a[1]+(l[1]-a[1])*u,d=c,v=m-(m-a[0])*roundCorner,y=d-(d-a[1])*roundCorner,r.setTripleAt(m,d,p,c,v,y,f),f+=1):(r.setTripleAt(t.v[i][0],t.v[i][1],t.o[i][0],t.o[i][1],t.i[i][0],t.i[i][1],f),f+=1);return r},RoundCornersModifier.prototype.processShapes=function(t){var e,r,i=this.shapes.length,s,a,n=this.rd.v;if(n!==0){var o,l;for(r=0;r<i;r+=1){if(o=this.shapes[r],l=o.localShapeCollection,!(!o.shape._mdf&&!this._mdf&&!t))for(l.releaseShapes(),o.shape._mdf=!0,e=o.shape.paths.shapes,a=o.shape.paths._length,s=0;s<a;s+=1)l.addShape(this.processPath(e[s],n));o.shape.paths=o.localShapeCollection;}}this.dynamicProperties.length||(this._mdf=!1);};function floatEqual(t,e){return Math.abs(t-e)*1e5<=Math.min(Math.abs(t),Math.abs(e))}function floatZero(t){return Math.abs(t)<=1e-5}function lerp(t,e,r){return t*(1-r)+e*r}function lerpPoint(t,e,r){return [lerp(t[0],e[0],r),lerp(t[1],e[1],r)]}function quadRoots(t,e,r){if(t===0)return [];var i=e*e-4*t*r;if(i<0)return [];var s=-e/(2*t);if(i===0)return [s];var a=Math.sqrt(i)/(2*t);return [s-a,s+a]}function polynomialCoefficients(t,e,r,i){return [-t+3*e-3*r+i,3*t-6*e+3*r,-3*t+3*e,t]}function singlePoint(t){return new PolynomialBezier(t,t,t,t,!1)}function PolynomialBezier(t,e,r,i,s){s&&pointEqual(t,e)&&(e=lerpPoint(t,i,1/3)),s&&pointEqual(r,i)&&(r=lerpPoint(t,i,2/3));var a=polynomialCoefficients(t[0],e[0],r[0],i[0]),n=polynomialCoefficients(t[1],e[1],r[1],i[1]);this.a=[a[0],n[0]],this.b=[a[1],n[1]],this.c=[a[2],n[2]],this.d=[a[3],n[3]],this.points=[t,e,r,i];}PolynomialBezier.prototype.point=function(t){return [((this.a[0]*t+this.b[0])*t+this.c[0])*t+this.d[0],((this.a[1]*t+this.b[1])*t+this.c[1])*t+this.d[1]]},PolynomialBezier.prototype.derivative=function(t){return [(3*t*this.a[0]+2*this.b[0])*t+this.c[0],(3*t*this.a[1]+2*this.b[1])*t+this.c[1]]},PolynomialBezier.prototype.tangentAngle=function(t){var e=this.derivative(t);return Math.atan2(e[1],e[0])},PolynomialBezier.prototype.normalAngle=function(t){var e=this.derivative(t);return Math.atan2(e[0],e[1])},PolynomialBezier.prototype.inflectionPoints=function(){var t=this.a[1]*this.b[0]-this.a[0]*this.b[1];if(floatZero(t))return [];var e=-.5*(this.a[1]*this.c[0]-this.a[0]*this.c[1])/t,r=e*e-1/3*(this.b[1]*this.c[0]-this.b[0]*this.c[1])/t;if(r<0)return [];var i=Math.sqrt(r);return floatZero(i)?i>0&&i<1?[e]:[]:[e-i,e+i].filter(function(s){return s>0&&s<1})},PolynomialBezier.prototype.split=function(t){if(t<=0)return [singlePoint(this.points[0]),this];if(t>=1)return [this,singlePoint(this.points[this.points.length-1])];var e=lerpPoint(this.points[0],this.points[1],t),r=lerpPoint(this.points[1],this.points[2],t),i=lerpPoint(this.points[2],this.points[3],t),s=lerpPoint(e,r,t),a=lerpPoint(r,i,t),n=lerpPoint(s,a,t);return [new PolynomialBezier(this.points[0],e,s,n,!0),new PolynomialBezier(n,a,i,this.points[3],!0)]};function extrema(t,e){var r=t.points[0][e],i=t.points[t.points.length-1][e];if(r>i){var s=i;i=r,r=s;}for(var a=quadRoots(3*t.a[e],2*t.b[e],t.c[e]),n=0;n<a.length;n+=1)if(a[n]>0&&a[n]<1){var o=t.point(a[n])[e];o<r?r=o:o>i&&(i=o);}return {min:r,max:i}}PolynomialBezier.prototype.bounds=function(){return {x:extrema(this,0),y:extrema(this,1)}},PolynomialBezier.prototype.boundingBox=function(){var t=this.bounds();return {left:t.x.min,right:t.x.max,top:t.y.min,bottom:t.y.max,width:t.x.max-t.x.min,height:t.y.max-t.y.min,cx:(t.x.max+t.x.min)/2,cy:(t.y.max+t.y.min)/2}};function intersectData(t,e,r){var i=t.boundingBox();return {cx:i.cx,cy:i.cy,width:i.width,height:i.height,bez:t,t:(e+r)/2,t1:e,t2:r}}function splitData(t){var e=t.bez.split(.5);return [intersectData(e[0],t.t1,t.t),intersectData(e[1],t.t,t.t2)]}function boxIntersect(t,e){return Math.abs(t.cx-e.cx)*2<t.width+e.width&&Math.abs(t.cy-e.cy)*2<t.height+e.height}function intersectsImpl(t,e,r,i,s,a){if(boxIntersect(t,e)){if(r>=a||t.width<=i&&t.height<=i&&e.width<=i&&e.height<=i){s.push([t.t,e.t]);return}var n=splitData(t),o=splitData(e);intersectsImpl(n[0],o[0],r+1,i,s,a),intersectsImpl(n[0],o[1],r+1,i,s,a),intersectsImpl(n[1],o[0],r+1,i,s,a),intersectsImpl(n[1],o[1],r+1,i,s,a);}}PolynomialBezier.prototype.intersections=function(t,e,r){e===void 0&&(e=2),r===void 0&&(r=7);var i=[];return intersectsImpl(intersectData(this,0,1),intersectData(t,0,1),0,e,i,r),i},PolynomialBezier.shapeSegment=function(t,e){var r=(e+1)%t.length();return new PolynomialBezier(t.v[e],t.o[e],t.i[r],t.v[r],!0)},PolynomialBezier.shapeSegmentInverted=function(t,e){var r=(e+1)%t.length();return new PolynomialBezier(t.v[r],t.i[r],t.o[e],t.v[e],!0)};function crossProduct(t,e){return [t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function lineIntersection(t,e,r,i){var s=[t[0],t[1],1],a=[e[0],e[1],1],n=[r[0],r[1],1],o=[i[0],i[1],1],l=crossProduct(crossProduct(s,a),crossProduct(n,o));return floatZero(l[2])?null:[l[0]/l[2],l[1]/l[2]]}function polarOffset(t,e,r){return [t[0]+Math.cos(e)*r,t[1]-Math.sin(e)*r]}function pointDistance(t,e){return Math.hypot(t[0]-e[0],t[1]-e[1])}function pointEqual(t,e){return floatEqual(t[0],e[0])&&floatEqual(t[1],e[1])}function ZigZagModifier(){}extendPrototype([ShapeModifier],ZigZagModifier),ZigZagModifier.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.amplitude=PropertyFactory.getProp(t,e.s,0,null,this),this.frequency=PropertyFactory.getProp(t,e.r,0,null,this),this.pointsType=PropertyFactory.getProp(t,e.pt,0,null,this),this._isAnimated=this.amplitude.effectsSequence.length!==0||this.frequency.effectsSequence.length!==0||this.pointsType.effectsSequence.length!==0;};function setPoint(t,e,r,i,s,a,n){var o=r-Math.PI/2,l=r+Math.PI/2,h=e[0]+Math.cos(r)*i*s,u=e[1]-Math.sin(r)*i*s;t.setTripleAt(h,u,h+Math.cos(o)*a,u-Math.sin(o)*a,h+Math.cos(l)*n,u-Math.sin(l)*n,t.length());}function getPerpendicularVector(t,e){var r=[e[0]-t[0],e[1]-t[1]],i=-Math.PI*.5,s=[Math.cos(i)*r[0]-Math.sin(i)*r[1],Math.sin(i)*r[0]+Math.cos(i)*r[1]];return s}function getProjectingAngle(t,e){var r=e===0?t.length()-1:e-1,i=(e+1)%t.length(),s=t.v[r],a=t.v[i],n=getPerpendicularVector(s,a);return Math.atan2(0,1)-Math.atan2(n[1],n[0])}function zigZagCorner(t,e,r,i,s,a,n){var o=getProjectingAngle(e,r),l=e.v[r%e._length],h=e.v[r===0?e._length-1:r-1],u=e.v[(r+1)%e._length],f=a===2?Math.sqrt(Math.pow(l[0]-h[0],2)+Math.pow(l[1]-h[1],2)):0,m=a===2?Math.sqrt(Math.pow(l[0]-u[0],2)+Math.pow(l[1]-u[1],2)):0;setPoint(t,e.v[r%e._length],o,n,i,m/((s+1)*2),f/((s+1)*2));}function zigZagSegment(t,e,r,i,s,a){for(var n=0;n<i;n+=1){var o=(n+1)/(i+1),l=s===2?Math.sqrt(Math.pow(e.points[3][0]-e.points[0][0],2)+Math.pow(e.points[3][1]-e.points[0][1],2)):0,h=e.normalAngle(o),u=e.point(o);setPoint(t,u,h,a,r,l/((i+1)*2),l/((i+1)*2)),a=-a;}return a}ZigZagModifier.prototype.processPath=function(t,e,r,i){var s=t._length,a=shapePool.newElement();if(a.c=t.c,t.c||(s-=1),s===0)return a;var n=-1,o=PolynomialBezier.shapeSegment(t,0);zigZagCorner(a,t,0,e,r,i,n);for(var l=0;l<s;l+=1)n=zigZagSegment(a,o,e,r,i,-n),l===s-1&&!t.c?o=null:o=PolynomialBezier.shapeSegment(t,(l+1)%s),zigZagCorner(a,t,l+1,e,r,i,n);return a},ZigZagModifier.prototype.processShapes=function(t){var e,r,i=this.shapes.length,s,a,n=this.amplitude.v,o=Math.max(0,Math.round(this.frequency.v)),l=this.pointsType.v;if(n!==0){var h,u;for(r=0;r<i;r+=1){if(h=this.shapes[r],u=h.localShapeCollection,!(!h.shape._mdf&&!this._mdf&&!t))for(u.releaseShapes(),h.shape._mdf=!0,e=h.shape.paths.shapes,a=h.shape.paths._length,s=0;s<a;s+=1)u.addShape(this.processPath(e[s],n,o,l));h.shape.paths=h.localShapeCollection;}}this.dynamicProperties.length||(this._mdf=!1);};function linearOffset(t,e,r){var i=Math.atan2(e[0]-t[0],e[1]-t[1]);return [polarOffset(t,i,r),polarOffset(e,i,r)]}function offsetSegment(t,e){var r,i,s,a,n,o,l;l=linearOffset(t.points[0],t.points[1],e),r=l[0],i=l[1],l=linearOffset(t.points[1],t.points[2],e),s=l[0],a=l[1],l=linearOffset(t.points[2],t.points[3],e),n=l[0],o=l[1];var h=lineIntersection(r,i,s,a);h===null&&(h=i);var u=lineIntersection(n,o,s,a);return u===null&&(u=n),new PolynomialBezier(r,h,u,o)}function joinLines(t,e,r,i,s){var a=e.points[3],n=r.points[0];if(i===3||pointEqual(a,n))return a;if(i===2){var o=-e.tangentAngle(1),l=-r.tangentAngle(0)+Math.PI,h=lineIntersection(a,polarOffset(a,o+Math.PI/2,100),n,polarOffset(n,o+Math.PI/2,100)),u=h?pointDistance(h,a):pointDistance(a,n)/2,f=polarOffset(a,o,2*u*roundCorner);return t.setXYAt(f[0],f[1],\"o\",t.length()-1),f=polarOffset(n,l,2*u*roundCorner),t.setTripleAt(n[0],n[1],n[0],n[1],f[0],f[1],t.length()),n}var m=pointEqual(a,e.points[2])?e.points[0]:e.points[2],d=pointEqual(n,r.points[1])?r.points[3]:r.points[1],p=lineIntersection(m,a,n,d);return p&&pointDistance(p,a)<s?(t.setTripleAt(p[0],p[1],p[0],p[1],p[0],p[1],t.length()),p):a}function getIntersection(t,e){var r=t.intersections(e);return r.length&&floatEqual(r[0][0],1)&&r.shift(),r.length?r[0]:null}function pruneSegmentIntersection(t,e){var r=t.slice(),i=e.slice(),s=getIntersection(t[t.length-1],e[0]);return s&&(r[t.length-1]=t[t.length-1].split(s[0])[0],i[0]=e[0].split(s[1])[1]),t.length>1&&e.length>1&&(s=getIntersection(t[0],e[e.length-1]),s)?[[t[0].split(s[0])[0]],[e[e.length-1].split(s[1])[1]]]:[r,i]}function pruneIntersections(t){for(var e,r=1;r<t.length;r+=1)e=pruneSegmentIntersection(t[r-1],t[r]),t[r-1]=e[0],t[r]=e[1];return t.length>1&&(e=pruneSegmentIntersection(t[t.length-1],t[0]),t[t.length-1]=e[0],t[0]=e[1]),t}function offsetSegmentSplit(t,e){var r=t.inflectionPoints(),i,s,a,n;if(r.length===0)return [offsetSegment(t,e)];if(r.length===1||floatEqual(r[1],1))return a=t.split(r[0]),i=a[0],s=a[1],[offsetSegment(i,e),offsetSegment(s,e)];a=t.split(r[0]),i=a[0];var o=(r[1]-r[0])/(1-r[0]);return a=a[1].split(o),n=a[0],s=a[1],[offsetSegment(i,e),offsetSegment(n,e),offsetSegment(s,e)]}function OffsetPathModifier(){}extendPrototype([ShapeModifier],OffsetPathModifier),OffsetPathModifier.prototype.initModifierProperties=function(t,e){this.getValue=this.processKeys,this.amount=PropertyFactory.getProp(t,e.a,0,null,this),this.miterLimit=PropertyFactory.getProp(t,e.ml,0,null,this),this.lineJoin=e.lj,this._isAnimated=this.amount.effectsSequence.length!==0;},OffsetPathModifier.prototype.processPath=function(t,e,r,i){var s=shapePool.newElement();s.c=t.c;var a=t.length();t.c||(a-=1);var n,o,l,h=[];for(n=0;n<a;n+=1)l=PolynomialBezier.shapeSegment(t,n),h.push(offsetSegmentSplit(l,e));if(!t.c)for(n=a-1;n>=0;n-=1)l=PolynomialBezier.shapeSegmentInverted(t,n),h.push(offsetSegmentSplit(l,e));h=pruneIntersections(h);var u=null,f=null;for(n=0;n<h.length;n+=1){var m=h[n];for(f&&(u=joinLines(s,f,m[0],r,i)),f=m[m.length-1],o=0;o<m.length;o+=1)l=m[o],u&&pointEqual(l.points[0],u)?s.setXYAt(l.points[1][0],l.points[1][1],\"o\",s.length()-1):s.setTripleAt(l.points[0][0],l.points[0][1],l.points[1][0],l.points[1][1],l.points[0][0],l.points[0][1],s.length()),s.setTripleAt(l.points[3][0],l.points[3][1],l.points[3][0],l.points[3][1],l.points[2][0],l.points[2][1],s.length()),u=l.points[3];}return h.length&&joinLines(s,f,h[0][0],r,i),s},OffsetPathModifier.prototype.processShapes=function(t){var e,r,i=this.shapes.length,s,a,n=this.amount.v,o=this.miterLimit.v,l=this.lineJoin;if(n!==0){var h,u;for(r=0;r<i;r+=1){if(h=this.shapes[r],u=h.localShapeCollection,!(!h.shape._mdf&&!this._mdf&&!t))for(u.releaseShapes(),h.shape._mdf=!0,e=h.shape.paths.shapes,a=h.shape.paths._length,s=0;s<a;s+=1)u.addShape(this.processPath(e[s],n,l,o));h.shape.paths=h.localShapeCollection;}}this.dynamicProperties.length||(this._mdf=!1);};function getFontProperties(t){for(var e=t.fStyle?t.fStyle.split(\" \"):[],r=\"normal\",i=\"normal\",s=e.length,a,n=0;n<s;n+=1)switch(a=e[n].toLowerCase(),a){case\"italic\":i=\"italic\";break;case\"bold\":r=\"700\";break;case\"black\":r=\"900\";break;case\"medium\":r=\"500\";break;case\"regular\":case\"normal\":r=\"400\";break;case\"light\":case\"thin\":r=\"200\";break}return {style:i,weight:t.fWeight||r}}var FontManager=function(){var t=5e3,e={w:0,size:0,shapes:[],data:{shapes:[]}},r=[];r=r.concat([2304,2305,2306,2307,2362,2363,2364,2364,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2387,2388,2389,2390,2391,2402,2403]);var i=127988,s=917631,a=917601,n=917626,o=65039,l=8205,h=127462,u=127487,f=[\"d83cdffb\",\"d83cdffc\",\"d83cdffd\",\"d83cdffe\",\"d83cdfff\"];function m(A){var M=A.split(\",\"),P,E=M.length,O=[];for(P=0;P<E;P+=1)M[P]!==\"sans-serif\"&&M[P]!==\"monospace\"&&O.push(M[P]);return O.join(\",\")}function d(A,M){var P=createTag(\"span\");P.setAttribute(\"aria-hidden\",!0),P.style.fontFamily=M;var E=createTag(\"span\");E.innerText=\"giItT1WQy@!-/#\",P.style.position=\"absolute\",P.style.left=\"-10000px\",P.style.top=\"-10000px\",P.style.fontSize=\"300px\",P.style.fontVariant=\"normal\",P.style.fontStyle=\"normal\",P.style.fontWeight=\"normal\",P.style.letterSpacing=\"0\",P.appendChild(E),document.body.appendChild(P);var O=E.offsetWidth;return E.style.fontFamily=m(A)+\", \"+M,{node:E,w:O,parent:P}}function p(){var A,M=this.fonts.length,P,E,O=M;for(A=0;A<M;A+=1)this.fonts[A].loaded?O-=1:this.fonts[A].fOrigin===\"n\"||this.fonts[A].origin===0?this.fonts[A].loaded=!0:(P=this.fonts[A].monoCase.node,E=this.fonts[A].monoCase.w,P.offsetWidth!==E?(O-=1,this.fonts[A].loaded=!0):(P=this.fonts[A].sansCase.node,E=this.fonts[A].sansCase.w,P.offsetWidth!==E&&(O-=1,this.fonts[A].loaded=!0)),this.fonts[A].loaded&&(this.fonts[A].sansCase.parent.parentNode.removeChild(this.fonts[A].sansCase.parent),this.fonts[A].monoCase.parent.parentNode.removeChild(this.fonts[A].monoCase.parent)));O!==0&&Date.now()-this.initTime<t?setTimeout(this.checkLoadedFontsBinded,20):setTimeout(this.setIsLoadedBinded,10);}function c(A,M){var P=document.body&&M?\"svg\":\"canvas\",E,O=getFontProperties(A);if(P===\"svg\"){var I=createNS(\"text\");I.style.fontSize=\"100px\",I.setAttribute(\"font-family\",A.fFamily),I.setAttribute(\"font-style\",O.style),I.setAttribute(\"font-weight\",O.weight),I.textContent=\"1\",A.fClass?(I.style.fontFamily=\"inherit\",I.setAttribute(\"class\",A.fClass)):I.style.fontFamily=A.fFamily,M.appendChild(I),E=I;}else {var Z=new OffscreenCanvas(500,500).getContext(\"2d\");Z.font=O.style+\" \"+O.weight+\" 100px \"+A.fFamily,E=Z;}function K(q){return P===\"svg\"?(E.textContent=q,E.getComputedTextLength()):E.measureText(q).width}return {measureText:K}}function v(A,M){if(!A){this.isLoaded=!0;return}if(this.chars){this.isLoaded=!0,this.fonts=A.list;return}if(!document.body){this.isLoaded=!0,A.list.forEach(function(st){st.helper=c(st),st.cache={};}),this.fonts=A.list;return}var P=A.list,E,O=P.length,I=O;for(E=0;E<O;E+=1){var Z=!0,K,q;if(P[E].loaded=!1,P[E].monoCase=d(P[E].fFamily,\"monospace\"),P[E].sansCase=d(P[E].fFamily,\"sans-serif\"),!P[E].fPath)P[E].loaded=!0,I-=1;else if(P[E].fOrigin===\"p\"||P[E].origin===3){if(K=document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"'+P[E].fFamily+'\"], style[f-origin=\"3\"][f-family=\"'+P[E].fFamily+'\"]'),K.length>0&&(Z=!1),Z){var H=createTag(\"style\");H.setAttribute(\"f-forigin\",P[E].fOrigin),H.setAttribute(\"f-origin\",P[E].origin),H.setAttribute(\"f-family\",P[E].fFamily),H.type=\"text/css\",H.innerText=\"@font-face {font-family: \"+P[E].fFamily+\"; font-style: normal; src: url('\"+P[E].fPath+\"');}\",M.appendChild(H);}}else if(P[E].fOrigin===\"g\"||P[E].origin===1){for(K=document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]'),q=0;q<K.length;q+=1)K[q].href.indexOf(P[E].fPath)!==-1&&(Z=!1);if(Z){var Q=createTag(\"link\");Q.setAttribute(\"f-forigin\",P[E].fOrigin),Q.setAttribute(\"f-origin\",P[E].origin),Q.type=\"text/css\",Q.rel=\"stylesheet\",Q.href=P[E].fPath,document.body.appendChild(Q);}}else if(P[E].fOrigin===\"t\"||P[E].origin===2){for(K=document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]'),q=0;q<K.length;q+=1)P[E].fPath===K[q].src&&(Z=!1);if(Z){var rt=createTag(\"link\");rt.setAttribute(\"f-forigin\",P[E].fOrigin),rt.setAttribute(\"f-origin\",P[E].origin),rt.setAttribute(\"rel\",\"stylesheet\"),rt.setAttribute(\"href\",P[E].fPath),M.appendChild(rt);}}P[E].helper=c(P[E],M),P[E].cache={},this.fonts.push(P[E]);}I===0?this.isLoaded=!0:setTimeout(this.checkLoadedFonts.bind(this),100);}function y(A){if(A){this.chars||(this.chars=[]);var M,P=A.length,E,O=this.chars.length,I;for(M=0;M<P;M+=1){for(E=0,I=!1;E<O;)this.chars[E].style===A[M].style&&this.chars[E].fFamily===A[M].fFamily&&this.chars[E].ch===A[M].ch&&(I=!0),E+=1;I||(this.chars.push(A[M]),O+=1);}}}function g(A,M,P){for(var E=0,O=this.chars.length;E<O;){if(this.chars[E].ch===A&&this.chars[E].style===M&&this.chars[E].fFamily===P)return this.chars[E];E+=1;}return (typeof A==\"string\"&&A.charCodeAt(0)!==13||!A)&&console&&console.warn&&!this._warned&&(this._warned=!0,console.warn(\"Missing character from exported characters list: \",A,M,P)),e}function b(A,M,P){var E=this.getFontByName(M),O=A;if(!E.cache[O]){var I=E.helper;if(A===\" \"){var Z=I.measureText(\"|\"+A+\"|\"),K=I.measureText(\"||\");E.cache[O]=(Z-K)/100;}else E.cache[O]=I.measureText(A)/100;}return E.cache[O]*P}function x(A){for(var M=0,P=this.fonts.length;M<P;){if(this.fonts[M].fName===A)return this.fonts[M];M+=1;}return this.fonts[0]}function S(A){var M=0,P=A.charCodeAt(0);if(P>=55296&&P<=56319){var E=A.charCodeAt(1);E>=56320&&E<=57343&&(M=(P-55296)*1024+E-56320+65536);}return M}function C(A,M){var P=A.toString(16)+M.toString(16);return f.indexOf(P)!==-1}function _(A){return A===l}function T(A){return A===o}function L(A){var M=S(A);return M>=h&&M<=u}function G(A){return L(A.substr(0,2))&&L(A.substr(2,2))}function R(A){return r.indexOf(A)!==-1}function j(A,M){var P=S(A.substr(M,2));if(P!==i)return !1;var E=0;for(M+=2;E<5;){if(P=S(A.substr(M,2)),P<a||P>n)return !1;E+=1,M+=2;}return S(A.substr(M,2))===s}function $(){this.isLoaded=!0;}var F=function(){this.fonts=[],this.chars=null,this.typekitLoaded=0,this.isLoaded=!1,this._warned=!1,this.initTime=Date.now(),this.setIsLoadedBinded=this.setIsLoaded.bind(this),this.checkLoadedFontsBinded=this.checkLoadedFonts.bind(this);};F.isModifier=C,F.isZeroWidthJoiner=_,F.isFlagEmoji=G,F.isRegionalCode=L,F.isCombinedCharacter=R,F.isRegionalFlag=j,F.isVariationSelector=T,F.BLACK_FLAG_CODE_POINT=i;var W={addChars:y,addFonts:v,getCharData:g,getFontByName:x,measureText:b,checkLoadedFonts:p,setIsLoaded:$};return F.prototype=W,F}();function SlotManager(t){this.animationData=t;}SlotManager.prototype.getProp=function(t){return this.animationData.slots&&this.animationData.slots[t.sid]?Object.assign(t,this.animationData.slots[t.sid].p):t};function slotFactory(t){return new SlotManager(t)}function RenderableElement(){}RenderableElement.prototype={initRenderable:function(){this.isInRange=!1,this.hidden=!1,this.isTransparent=!1,this.renderableComponents=[];},addRenderableComponent:function(t){this.renderableComponents.indexOf(t)===-1&&this.renderableComponents.push(t);},removeRenderableComponent:function(t){this.renderableComponents.indexOf(t)!==-1&&this.renderableComponents.splice(this.renderableComponents.indexOf(t),1);},prepareRenderableFrame:function(t){this.checkLayerLimits(t);},checkTransparency:function(){this.finalTransform.mProp.o.v<=0?!this.isTransparent&&this.globalData.renderConfig.hideOnTransparent&&(this.isTransparent=!0,this.hide()):this.isTransparent&&(this.isTransparent=!1,this.show());},checkLayerLimits:function(t){this.data.ip-this.data.st<=t&&this.data.op-this.data.st>t?this.isInRange!==!0&&(this.globalData._mdf=!0,this._mdf=!0,this.isInRange=!0,this.show()):this.isInRange!==!1&&(this.globalData._mdf=!0,this.isInRange=!1,this.hide());},renderRenderable:function(){var t,e=this.renderableComponents.length;for(t=0;t<e;t+=1)this.renderableComponents[t].renderFrame(this._isFirstFrame);},sourceRectAtTime:function(){return {top:0,left:0,width:100,height:100}},getLayerSize:function(){return this.data.ty===5?{w:this.data.textData.width,h:this.data.textData.height}:{w:this.data.width,h:this.data.height}}};var getBlendMode=function(){var t={0:\"source-over\",1:\"multiply\",2:\"screen\",3:\"overlay\",4:\"darken\",5:\"lighten\",6:\"color-dodge\",7:\"color-burn\",8:\"hard-light\",9:\"soft-light\",10:\"difference\",11:\"exclusion\",12:\"hue\",13:\"saturation\",14:\"color\",15:\"luminosity\"};return function(e){return t[e]||\"\"}}();function SliderEffect(t,e,r){this.p=PropertyFactory.getProp(e,t.v,0,0,r);}function AngleEffect(t,e,r){this.p=PropertyFactory.getProp(e,t.v,0,0,r);}function ColorEffect(t,e,r){this.p=PropertyFactory.getProp(e,t.v,1,0,r);}function PointEffect(t,e,r){this.p=PropertyFactory.getProp(e,t.v,1,0,r);}function LayerIndexEffect(t,e,r){this.p=PropertyFactory.getProp(e,t.v,0,0,r);}function MaskIndexEffect(t,e,r){this.p=PropertyFactory.getProp(e,t.v,0,0,r);}function CheckboxEffect(t,e,r){this.p=PropertyFactory.getProp(e,t.v,0,0,r);}function NoValueEffect(){this.p={};}function EffectsManager(t,e){var r=t.ef||[];this.effectElements=[];var i,s=r.length,a;for(i=0;i<s;i+=1)a=new GroupEffect(r[i],e),this.effectElements.push(a);}function GroupEffect(t,e){this.init(t,e);}extendPrototype([DynamicPropertyContainer],GroupEffect),GroupEffect.prototype.getValue=GroupEffect.prototype.iterateDynamicProperties,GroupEffect.prototype.init=function(t,e){this.data=t,this.effectElements=[],this.initDynamicPropertyContainer(e);var r,i=this.data.ef.length,s,a=this.data.ef;for(r=0;r<i;r+=1){switch(s=null,a[r].ty){case 0:s=new SliderEffect(a[r],e,this);break;case 1:s=new AngleEffect(a[r],e,this);break;case 2:s=new ColorEffect(a[r],e,this);break;case 3:s=new PointEffect(a[r],e,this);break;case 4:case 7:s=new CheckboxEffect(a[r],e,this);break;case 10:s=new LayerIndexEffect(a[r],e,this);break;case 11:s=new MaskIndexEffect(a[r],e,this);break;case 5:s=new EffectsManager(a[r],e);break;default:s=new NoValueEffect(a[r]);break}s&&this.effectElements.push(s);}};function BaseElement(){}BaseElement.prototype={checkMasks:function(){if(!this.data.hasMask)return !1;for(var t=0,e=this.data.masksProperties.length;t<e;){if(this.data.masksProperties[t].mode!==\"n\"&&this.data.masksProperties[t].cl!==!1)return !0;t+=1;}return !1},initExpressions:function(){var t=getExpressionInterfaces();if(t){var e=t(\"layer\"),r=t(\"effects\"),i=t(\"shape\"),s=t(\"text\"),a=t(\"comp\");this.layerInterface=e(this),this.data.hasMask&&this.maskManager&&this.layerInterface.registerMaskInterface(this.maskManager);var n=r.createEffectsInterface(this,this.layerInterface);this.layerInterface.registerEffectsInterface(n),this.data.ty===0||this.data.xt?this.compInterface=a(this):this.data.ty===4?(this.layerInterface.shapeInterface=i(this.shapesData,this.itemsData,this.layerInterface),this.layerInterface.content=this.layerInterface.shapeInterface):this.data.ty===5&&(this.layerInterface.textInterface=s(this),this.layerInterface.text=this.layerInterface.textInterface);}},setBlendMode:function(){var t=getBlendMode(this.data.bm),e=this.baseElement||this.layerElement;e.style[\"mix-blend-mode\"]=t;},initBaseData:function(t,e,r){this.globalData=e,this.comp=r,this.data=t,this.layerId=createElementID(),this.data.sr||(this.data.sr=1),this.effectsManager=new EffectsManager(this.data,this,this.dynamicProperties);},getType:function(){return this.type},sourceRectAtTime:function(){}};function FrameElement(){}FrameElement.prototype={initFrame:function(){this._isFirstFrame=!1,this.dynamicProperties=[],this._mdf=!1;},prepareProperties:function(t,e){var r,i=this.dynamicProperties.length;for(r=0;r<i;r+=1)(e||this._isParent&&this.dynamicProperties[r].propType===\"transform\")&&(this.dynamicProperties[r].getValue(),this.dynamicProperties[r]._mdf&&(this.globalData._mdf=!0,this._mdf=!0));},addDynamicProperty:function(t){this.dynamicProperties.indexOf(t)===-1&&this.dynamicProperties.push(t);}};function FootageElement(t,e,r){this.initFrame(),this.initRenderable(),this.assetData=e.getAssetData(t.refId),this.footageData=e.imageLoader.getAsset(this.assetData),this.initBaseData(t,e,r);}FootageElement.prototype.prepareFrame=function(){},extendPrototype([RenderableElement,BaseElement,FrameElement],FootageElement),FootageElement.prototype.getBaseElement=function(){return null},FootageElement.prototype.renderFrame=function(){},FootageElement.prototype.destroy=function(){},FootageElement.prototype.initExpressions=function(){var t=getExpressionInterfaces();if(t){var e=t(\"footage\");this.layerInterface=e(this);}},FootageElement.prototype.getFootageData=function(){return this.footageData};function AudioElement(t,e,r){this.initFrame(),this.initRenderable(),this.assetData=e.getAssetData(t.refId),this.initBaseData(t,e,r),this._isPlaying=!1,this._canPlay=!1;var i=this.globalData.getAssetsPath(this.assetData);this.audio=this.globalData.audioController.createAudio(i),this._currentTime=0,this.globalData.audioController.addAudio(this),this._volumeMultiplier=1,this._volume=1,this._previousVolume=null,this.tm=t.tm?PropertyFactory.getProp(this,t.tm,0,e.frameRate,this):{_placeholder:!0},this.lv=PropertyFactory.getProp(this,t.au&&t.au.lv?t.au.lv:{k:[100]},1,.01,this);}AudioElement.prototype.prepareFrame=function(t){if(this.prepareRenderableFrame(t,!0),this.prepareProperties(t,!0),this.tm._placeholder)this._currentTime=t/this.data.sr;else {var e=this.tm.v;this._currentTime=e;}this._volume=this.lv.v[0];var r=this._volume*this._volumeMultiplier;this._previousVolume!==r&&(this._previousVolume=r,this.audio.volume(r));},extendPrototype([RenderableElement,BaseElement,FrameElement],AudioElement),AudioElement.prototype.renderFrame=function(){this.isInRange&&this._canPlay&&(this._isPlaying?(!this.audio.playing()||Math.abs(this._currentTime/this.globalData.frameRate-this.audio.seek())>.1)&&this.audio.seek(this._currentTime/this.globalData.frameRate):(this.audio.play(),this.audio.seek(this._currentTime/this.globalData.frameRate),this._isPlaying=!0));},AudioElement.prototype.show=function(){},AudioElement.prototype.hide=function(){this.audio.pause(),this._isPlaying=!1;},AudioElement.prototype.pause=function(){this.audio.pause(),this._isPlaying=!1,this._canPlay=!1;},AudioElement.prototype.resume=function(){this._canPlay=!0;},AudioElement.prototype.setRate=function(t){this.audio.rate(t);},AudioElement.prototype.volume=function(t){this._volumeMultiplier=t,this._previousVolume=t*this._volume,this.audio.volume(this._previousVolume);},AudioElement.prototype.getBaseElement=function(){return null},AudioElement.prototype.destroy=function(){},AudioElement.prototype.sourceRectAtTime=function(){},AudioElement.prototype.initExpressions=function(){};function BaseRenderer(){}BaseRenderer.prototype.checkLayers=function(t){var e,r=this.layers.length,i;for(this.completeLayers=!0,e=r-1;e>=0;e-=1)this.elements[e]||(i=this.layers[e],i.ip-i.st<=t-this.layers[e].st&&i.op-i.st>t-this.layers[e].st&&this.buildItem(e)),this.completeLayers=this.elements[e]?this.completeLayers:!1;this.checkPendingElements();},BaseRenderer.prototype.createItem=function(t){switch(t.ty){case 2:return this.createImage(t);case 0:return this.createComp(t);case 1:return this.createSolid(t);case 3:return this.createNull(t);case 4:return this.createShape(t);case 5:return this.createText(t);case 6:return this.createAudio(t);case 13:return this.createCamera(t);case 15:return this.createFootage(t);default:return this.createNull(t)}},BaseRenderer.prototype.createCamera=function(){throw new Error(\"You're using a 3d camera. Try the html renderer.\")},BaseRenderer.prototype.createAudio=function(t){return new AudioElement(t,this.globalData,this)},BaseRenderer.prototype.createFootage=function(t){return new FootageElement(t,this.globalData,this)},BaseRenderer.prototype.buildAllItems=function(){var t,e=this.layers.length;for(t=0;t<e;t+=1)this.buildItem(t);this.checkPendingElements();},BaseRenderer.prototype.includeLayers=function(t){this.completeLayers=!1;var e,r=t.length,i,s=this.layers.length;for(e=0;e<r;e+=1)for(i=0;i<s;){if(this.layers[i].id===t[e].id){this.layers[i]=t[e];break}i+=1;}},BaseRenderer.prototype.setProjectInterface=function(t){this.globalData.projectInterface=t;},BaseRenderer.prototype.initItems=function(){this.globalData.progressiveLoad||this.buildAllItems();},BaseRenderer.prototype.buildElementParenting=function(t,e,r){for(var i=this.elements,s=this.layers,a=0,n=s.length;a<n;)s[a].ind==e&&(!i[a]||i[a]===!0?(this.buildItem(a),this.addPendingElement(t)):(r.push(i[a]),i[a].setAsParent(),s[a].parent!==void 0?this.buildElementParenting(t,s[a].parent,r):t.setHierarchy(r))),a+=1;},BaseRenderer.prototype.addPendingElement=function(t){this.pendingElements.push(t);},BaseRenderer.prototype.searchExtraCompositions=function(t){var e,r=t.length;for(e=0;e<r;e+=1)if(t[e].xt){var i=this.createComp(t[e]);i.initExpressions(),this.globalData.projectInterface.registerComposition(i);}},BaseRenderer.prototype.getElementById=function(t){var e,r=this.elements.length;for(e=0;e<r;e+=1)if(this.elements[e].data.ind===t)return this.elements[e];return null},BaseRenderer.prototype.getElementByPath=function(t){var e=t.shift(),r;if(typeof e==\"number\")r=this.elements[e];else {var i,s=this.elements.length;for(i=0;i<s;i+=1)if(this.elements[i].data.nm===e){r=this.elements[i];break}}return t.length===0?r:r.getElementByPath(t)},BaseRenderer.prototype.setupGlobalData=function(t,e){this.globalData.fontManager=new FontManager,this.globalData.slotManager=slotFactory(t),this.globalData.fontManager.addChars(t.chars),this.globalData.fontManager.addFonts(t.fonts,e),this.globalData.getAssetData=this.animationItem.getAssetData.bind(this.animationItem),this.globalData.getAssetsPath=this.animationItem.getAssetsPath.bind(this.animationItem),this.globalData.imageLoader=this.animationItem.imagePreloader,this.globalData.audioController=this.animationItem.audioController,this.globalData.frameId=0,this.globalData.frameRate=t.fr,this.globalData.nm=t.nm,this.globalData.compSize={w:t.w,h:t.h};};var effectTypes={TRANSFORM_EFFECT:\"transformEFfect\"};function TransformElement(){}TransformElement.prototype={initTransform:function(){var t=new Matrix;this.finalTransform={mProp:this.data.ks?TransformPropertyFactory.getTransformProperty(this,this.data.ks,this):{o:0},_matMdf:!1,_localMatMdf:!1,_opMdf:!1,mat:t,localMat:t,localOpacity:1},this.data.ao&&(this.finalTransform.mProp.autoOriented=!0),this.data.ty;},renderTransform:function(){if(this.finalTransform._opMdf=this.finalTransform.mProp.o._mdf||this._isFirstFrame,this.finalTransform._matMdf=this.finalTransform.mProp._mdf||this._isFirstFrame,this.hierarchy){var t,e=this.finalTransform.mat,r=0,i=this.hierarchy.length;if(!this.finalTransform._matMdf)for(;r<i;){if(this.hierarchy[r].finalTransform.mProp._mdf){this.finalTransform._matMdf=!0;break}r+=1;}if(this.finalTransform._matMdf)for(t=this.finalTransform.mProp.v.props,e.cloneFromProps(t),r=0;r<i;r+=1)e.multiply(this.hierarchy[r].finalTransform.mProp.v);}this.finalTransform._matMdf&&(this.finalTransform._localMatMdf=this.finalTransform._matMdf),this.finalTransform._opMdf&&(this.finalTransform.localOpacity=this.finalTransform.mProp.o.v);},renderLocalTransform:function(){if(this.localTransforms){var t=0,e=this.localTransforms.length;if(this.finalTransform._localMatMdf=this.finalTransform._matMdf,!this.finalTransform._localMatMdf||!this.finalTransform._opMdf)for(;t<e;)this.localTransforms[t]._mdf&&(this.finalTransform._localMatMdf=!0),this.localTransforms[t]._opMdf&&!this.finalTransform._opMdf&&(this.finalTransform.localOpacity=this.finalTransform.mProp.o.v,this.finalTransform._opMdf=!0),t+=1;if(this.finalTransform._localMatMdf){var r=this.finalTransform.localMat;for(this.localTransforms[0].matrix.clone(r),t=1;t<e;t+=1){var i=this.localTransforms[t].matrix;r.multiply(i);}r.multiply(this.finalTransform.mat);}if(this.finalTransform._opMdf){var s=this.finalTransform.localOpacity;for(t=0;t<e;t+=1)s*=this.localTransforms[t].opacity*.01;this.finalTransform.localOpacity=s;}}},searchEffectTransforms:function(){if(this.renderableEffectsManager){var t=this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);if(t.length){this.localTransforms=[],this.finalTransform.localMat=new Matrix;var e=0,r=t.length;for(e=0;e<r;e+=1)this.localTransforms.push(t[e]);}}},globalToLocal:function(t){var e=[];e.push(this.finalTransform);for(var r=!0,i=this.comp;r;)i.finalTransform?(i.data.hasMask&&e.splice(0,0,i.finalTransform),i=i.comp):r=!1;var s,a=e.length,n;for(s=0;s<a;s+=1)n=e[s].mat.applyToPointArray(0,0,0),t=[t[0]-n[0],t[1]-n[1],0];return t},mHelper:new Matrix};function MaskElement(t,e,r){this.data=t,this.element=e,this.globalData=r,this.storedData=[],this.masksProperties=this.data.masksProperties||[],this.maskElement=null;var i=this.globalData.defs,s,a=this.masksProperties?this.masksProperties.length:0;this.viewData=createSizedArray(a),this.solidPath=\"\";var n,o=this.masksProperties,l=0,h=[],u,f,m=createElementID(),d,p,c,v,y=\"clipPath\",g=\"clip-path\";for(s=0;s<a;s+=1)if((o[s].mode!==\"a\"&&o[s].mode!==\"n\"||o[s].inv||o[s].o.k!==100||o[s].o.x)&&(y=\"mask\",g=\"mask\"),(o[s].mode===\"s\"||o[s].mode===\"i\")&&l===0?(d=createNS(\"rect\"),d.setAttribute(\"fill\",\"#ffffff\"),d.setAttribute(\"width\",this.element.comp.data.w||0),d.setAttribute(\"height\",this.element.comp.data.h||0),h.push(d)):d=null,n=createNS(\"path\"),o[s].mode===\"n\")this.viewData[s]={op:PropertyFactory.getProp(this.element,o[s].o,0,.01,this.element),prop:ShapePropertyFactory.getShapeProp(this.element,o[s],3),elem:n,lastPath:\"\"},i.appendChild(n);else {l+=1,n.setAttribute(\"fill\",o[s].mode===\"s\"?\"#000000\":\"#ffffff\"),n.setAttribute(\"clip-rule\",\"nonzero\");var b;if(o[s].x.k!==0?(y=\"mask\",g=\"mask\",v=PropertyFactory.getProp(this.element,o[s].x,0,null,this.element),b=createElementID(),p=createNS(\"filter\"),p.setAttribute(\"id\",b),c=createNS(\"feMorphology\"),c.setAttribute(\"operator\",\"erode\"),c.setAttribute(\"in\",\"SourceGraphic\"),c.setAttribute(\"radius\",\"0\"),p.appendChild(c),i.appendChild(p),n.setAttribute(\"stroke\",o[s].mode===\"s\"?\"#000000\":\"#ffffff\")):(c=null,v=null),this.storedData[s]={elem:n,x:v,expan:c,lastPath:\"\",lastOperator:\"\",filterId:b,lastRadius:0},o[s].mode===\"i\"){f=h.length;var x=createNS(\"g\");for(u=0;u<f;u+=1)x.appendChild(h[u]);var S=createNS(\"mask\");S.setAttribute(\"mask-type\",\"alpha\"),S.setAttribute(\"id\",m+\"_\"+l),S.appendChild(n),i.appendChild(S),x.setAttribute(\"mask\",\"url(\"+getLocationHref()+\"#\"+m+\"_\"+l+\")\"),h.length=0,h.push(x);}else h.push(n);o[s].inv&&!this.solidPath&&(this.solidPath=this.createLayerSolidPath()),this.viewData[s]={elem:n,lastPath:\"\",op:PropertyFactory.getProp(this.element,o[s].o,0,.01,this.element),prop:ShapePropertyFactory.getShapeProp(this.element,o[s],3),invRect:d},this.viewData[s].prop.k||this.drawPath(o[s],this.viewData[s].prop.v,this.viewData[s]);}for(this.maskElement=createNS(y),a=h.length,s=0;s<a;s+=1)this.maskElement.appendChild(h[s]);l>0&&(this.maskElement.setAttribute(\"id\",m),this.element.maskedElement.setAttribute(g,\"url(\"+getLocationHref()+\"#\"+m+\")\"),i.appendChild(this.maskElement)),this.viewData.length&&this.element.addRenderableComponent(this);}MaskElement.prototype.getMaskProperty=function(t){return this.viewData[t].prop},MaskElement.prototype.renderFrame=function(t){var e=this.element.finalTransform.mat,r,i=this.masksProperties.length;for(r=0;r<i;r+=1)if((this.viewData[r].prop._mdf||t)&&this.drawPath(this.masksProperties[r],this.viewData[r].prop.v,this.viewData[r]),(this.viewData[r].op._mdf||t)&&this.viewData[r].elem.setAttribute(\"fill-opacity\",this.viewData[r].op.v),this.masksProperties[r].mode!==\"n\"&&(this.viewData[r].invRect&&(this.element.finalTransform.mProp._mdf||t)&&this.viewData[r].invRect.setAttribute(\"transform\",e.getInverseMatrix().to2dCSS()),this.storedData[r].x&&(this.storedData[r].x._mdf||t))){var s=this.storedData[r].expan;this.storedData[r].x.v<0?(this.storedData[r].lastOperator!==\"erode\"&&(this.storedData[r].lastOperator=\"erode\",this.storedData[r].elem.setAttribute(\"filter\",\"url(\"+getLocationHref()+\"#\"+this.storedData[r].filterId+\")\")),s.setAttribute(\"radius\",-this.storedData[r].x.v)):(this.storedData[r].lastOperator!==\"dilate\"&&(this.storedData[r].lastOperator=\"dilate\",this.storedData[r].elem.setAttribute(\"filter\",null)),this.storedData[r].elem.setAttribute(\"stroke-width\",this.storedData[r].x.v*2));}},MaskElement.prototype.getMaskelement=function(){return this.maskElement},MaskElement.prototype.createLayerSolidPath=function(){var t=\"M0,0 \";return t+=\" h\"+this.globalData.compSize.w,t+=\" v\"+this.globalData.compSize.h,t+=\" h-\"+this.globalData.compSize.w,t+=\" v-\"+this.globalData.compSize.h+\" \",t},MaskElement.prototype.drawPath=function(t,e,r){var i=\" M\"+e.v[0][0]+\",\"+e.v[0][1],s,a;for(a=e._length,s=1;s<a;s+=1)i+=\" C\"+e.o[s-1][0]+\",\"+e.o[s-1][1]+\" \"+e.i[s][0]+\",\"+e.i[s][1]+\" \"+e.v[s][0]+\",\"+e.v[s][1];if(e.c&&a>1&&(i+=\" C\"+e.o[s-1][0]+\",\"+e.o[s-1][1]+\" \"+e.i[0][0]+\",\"+e.i[0][1]+\" \"+e.v[0][0]+\",\"+e.v[0][1]),r.lastPath!==i){var n=\"\";r.elem&&(e.c&&(n=t.inv?this.solidPath+i:i),r.elem.setAttribute(\"d\",n)),r.lastPath=i;}},MaskElement.prototype.destroy=function(){this.element=null,this.globalData=null,this.maskElement=null,this.data=null,this.masksProperties=null;};var filtersFactory=function(){var t={};t.createFilter=e,t.createAlphaToLuminanceFilter=r;function e(i,s){var a=createNS(\"filter\");return a.setAttribute(\"id\",i),s!==!0&&(a.setAttribute(\"filterUnits\",\"objectBoundingBox\"),a.setAttribute(\"x\",\"0%\"),a.setAttribute(\"y\",\"0%\"),a.setAttribute(\"width\",\"100%\"),a.setAttribute(\"height\",\"100%\")),a}function r(){var i=createNS(\"feColorMatrix\");return i.setAttribute(\"type\",\"matrix\"),i.setAttribute(\"color-interpolation-filters\",\"sRGB\"),i.setAttribute(\"values\",\"0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1\"),i}return t}(),featureSupport=function(){var t={maskType:!0,svgLumaHidden:!0,offscreenCanvas:typeof OffscreenCanvas<\"u\"};return (/MSIE 10/i.test(navigator.userAgent)||/MSIE 9/i.test(navigator.userAgent)||/rv:11.0/i.test(navigator.userAgent)||/Edge\\/\\d./i.test(navigator.userAgent))&&(t.maskType=!1),/firefox/i.test(navigator.userAgent)&&(t.svgLumaHidden=!1),t}(),registeredEffects$1={},idPrefix=\"filter_result_\";function SVGEffects(t){var e,r=\"SourceGraphic\",i=t.data.ef?t.data.ef.length:0,s=createElementID(),a=filtersFactory.createFilter(s,!0),n=0;this.filters=[];var o;for(e=0;e<i;e+=1){o=null;var l=t.data.ef[e].ty;if(registeredEffects$1[l]){var h=registeredEffects$1[l].effect;o=new h(a,t.effectsManager.effectElements[e],t,idPrefix+n,r),r=idPrefix+n,registeredEffects$1[l].countsAsEffect&&(n+=1);}o&&this.filters.push(o);}n&&(t.globalData.defs.appendChild(a),t.layerElement.setAttribute(\"filter\",\"url(\"+getLocationHref()+\"#\"+s+\")\")),this.filters.length&&t.addRenderableComponent(this);}SVGEffects.prototype.renderFrame=function(t){var e,r=this.filters.length;for(e=0;e<r;e+=1)this.filters[e].renderFrame(t);},SVGEffects.prototype.getEffects=function(t){var e,r=this.filters.length,i=[];for(e=0;e<r;e+=1)this.filters[e].type===t&&i.push(this.filters[e]);return i};function registerEffect$1(t,e,r){registeredEffects$1[t]={effect:e,countsAsEffect:r};}function SVGBaseElement(){}SVGBaseElement.prototype={initRendererElement:function(){this.layerElement=createNS(\"g\");},createContainerElements:function(){this.matteElement=createNS(\"g\"),this.transformedElement=this.layerElement,this.maskedElement=this.layerElement,this._sizeChanged=!1;var t=null;if(this.data.td){this.matteMasks={};var e=createNS(\"g\");e.setAttribute(\"id\",this.layerId),e.appendChild(this.layerElement),t=e,this.globalData.defs.appendChild(e);}else this.data.tt?(this.matteElement.appendChild(this.layerElement),t=this.matteElement,this.baseElement=this.matteElement):this.baseElement=this.layerElement;if(this.data.ln&&this.layerElement.setAttribute(\"id\",this.data.ln),this.data.cl&&this.layerElement.setAttribute(\"class\",this.data.cl),this.data.ty===0&&!this.data.hd){var r=createNS(\"clipPath\"),i=createNS(\"path\");i.setAttribute(\"d\",\"M0,0 L\"+this.data.w+\",0 L\"+this.data.w+\",\"+this.data.h+\" L0,\"+this.data.h+\"z\");var s=createElementID();if(r.setAttribute(\"id\",s),r.appendChild(i),this.globalData.defs.appendChild(r),this.checkMasks()){var a=createNS(\"g\");a.setAttribute(\"clip-path\",\"url(\"+getLocationHref()+\"#\"+s+\")\"),a.appendChild(this.layerElement),this.transformedElement=a,t?t.appendChild(this.transformedElement):this.baseElement=this.transformedElement;}else this.layerElement.setAttribute(\"clip-path\",\"url(\"+getLocationHref()+\"#\"+s+\")\");}this.data.bm!==0&&this.setBlendMode();},renderElement:function(){this.finalTransform._localMatMdf&&this.transformedElement.setAttribute(\"transform\",this.finalTransform.localMat.to2dCSS()),this.finalTransform._opMdf&&this.transformedElement.setAttribute(\"opacity\",this.finalTransform.localOpacity);},destroyBaseElement:function(){this.layerElement=null,this.matteElement=null,this.maskManager.destroy();},getBaseElement:function(){return this.data.hd?null:this.baseElement},createRenderableComponents:function(){this.maskManager=new MaskElement(this.data,this,this.globalData),this.renderableEffectsManager=new SVGEffects(this),this.searchEffectTransforms();},getMatte:function(t){if(this.matteMasks||(this.matteMasks={}),!this.matteMasks[t]){var e=this.layerId+\"_\"+t,r,i,s,a;if(t===1||t===3){var n=createNS(\"mask\");n.setAttribute(\"id\",e),n.setAttribute(\"mask-type\",t===3?\"luminance\":\"alpha\"),s=createNS(\"use\"),s.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"href\",\"#\"+this.layerId),n.appendChild(s),this.globalData.defs.appendChild(n),!featureSupport.maskType&&t===1&&(n.setAttribute(\"mask-type\",\"luminance\"),r=createElementID(),i=filtersFactory.createFilter(r),this.globalData.defs.appendChild(i),i.appendChild(filtersFactory.createAlphaToLuminanceFilter()),a=createNS(\"g\"),a.appendChild(s),n.appendChild(a),a.setAttribute(\"filter\",\"url(\"+getLocationHref()+\"#\"+r+\")\"));}else if(t===2){var o=createNS(\"mask\");o.setAttribute(\"id\",e),o.setAttribute(\"mask-type\",\"alpha\");var l=createNS(\"g\");o.appendChild(l),r=createElementID(),i=filtersFactory.createFilter(r);var h=createNS(\"feComponentTransfer\");h.setAttribute(\"in\",\"SourceGraphic\"),i.appendChild(h);var u=createNS(\"feFuncA\");u.setAttribute(\"type\",\"table\"),u.setAttribute(\"tableValues\",\"1.0 0.0\"),h.appendChild(u),this.globalData.defs.appendChild(i);var f=createNS(\"rect\");f.setAttribute(\"width\",this.comp.data.w),f.setAttribute(\"height\",this.comp.data.h),f.setAttribute(\"x\",\"0\"),f.setAttribute(\"y\",\"0\"),f.setAttribute(\"fill\",\"#ffffff\"),f.setAttribute(\"opacity\",\"0\"),l.setAttribute(\"filter\",\"url(\"+getLocationHref()+\"#\"+r+\")\"),l.appendChild(f),s=createNS(\"use\"),s.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"href\",\"#\"+this.layerId),l.appendChild(s),featureSupport.maskType||(o.setAttribute(\"mask-type\",\"luminance\"),i.appendChild(filtersFactory.createAlphaToLuminanceFilter()),a=createNS(\"g\"),l.appendChild(f),a.appendChild(this.layerElement),l.appendChild(a)),this.globalData.defs.appendChild(o);}this.matteMasks[t]=e;}return this.matteMasks[t]},setMatte:function(t){this.matteElement&&this.matteElement.setAttribute(\"mask\",\"url(\"+getLocationHref()+\"#\"+t+\")\");}};function HierarchyElement(){}HierarchyElement.prototype={initHierarchy:function(){this.hierarchy=[],this._isParent=!1,this.checkParenting();},setHierarchy:function(t){this.hierarchy=t;},setAsParent:function(){this._isParent=!0;},checkParenting:function(){this.data.parent!==void 0&&this.comp.buildElementParenting(this,this.data.parent,[]);}};function RenderableDOMElement(){}(function(){var t={initElement:function(e,r,i){this.initFrame(),this.initBaseData(e,r,i),this.initTransform(e,r,i),this.initHierarchy(),this.initRenderable(),this.initRendererElement(),this.createContainerElements(),this.createRenderableComponents(),this.createContent(),this.hide();},hide:function(){if(!this.hidden&&(!this.isInRange||this.isTransparent)){var e=this.baseElement||this.layerElement;e.style.display=\"none\",this.hidden=!0;}},show:function(){if(this.isInRange&&!this.isTransparent){if(!this.data.hd){var e=this.baseElement||this.layerElement;e.style.display=\"block\";}this.hidden=!1,this._isFirstFrame=!0;}},renderFrame:function(){this.data.hd||this.hidden||(this.renderTransform(),this.renderRenderable(),this.renderLocalTransform(),this.renderElement(),this.renderInnerContent(),this._isFirstFrame&&(this._isFirstFrame=!1));},renderInnerContent:function(){},prepareFrame:function(e){this._mdf=!1,this.prepareRenderableFrame(e),this.prepareProperties(e,this.isInRange),this.checkTransparency();},destroy:function(){this.innerElem=null,this.destroyBaseElement();}};extendPrototype([RenderableElement,createProxyFunction(t)],RenderableDOMElement);})();function IImageElement(t,e,r){this.assetData=e.getAssetData(t.refId),this.assetData&&this.assetData.sid&&(this.assetData=e.slotManager.getProp(this.assetData)),this.initElement(t,e,r),this.sourceRect={top:0,left:0,width:this.assetData.w,height:this.assetData.h};}extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement],IImageElement),IImageElement.prototype.createContent=function(){var t=this.globalData.getAssetsPath(this.assetData);this.innerElem=createNS(\"image\"),this.innerElem.setAttribute(\"width\",this.assetData.w+\"px\"),this.innerElem.setAttribute(\"height\",this.assetData.h+\"px\"),this.innerElem.setAttribute(\"preserveAspectRatio\",this.assetData.pr||this.globalData.renderConfig.imagePreserveAspectRatio),this.innerElem.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"href\",t),this.layerElement.appendChild(this.innerElem);},IImageElement.prototype.sourceRectAtTime=function(){return this.sourceRect};function ProcessedElement(t,e){this.elem=t,this.pos=e;}function IShapeElement(){}IShapeElement.prototype={addShapeToModifiers:function(t){var e,r=this.shapeModifiers.length;for(e=0;e<r;e+=1)this.shapeModifiers[e].addShape(t);},isShapeInAnimatedModifiers:function(t){for(var e=0,r=this.shapeModifiers.length;e<r;)if(this.shapeModifiers[e].isAnimatedWithShape(t))return !0;return !1},renderModifiers:function(){if(this.shapeModifiers.length){var t,e=this.shapes.length;for(t=0;t<e;t+=1)this.shapes[t].sh.reset();e=this.shapeModifiers.length;var r;for(t=e-1;t>=0&&(r=this.shapeModifiers[t].processShapes(this._isFirstFrame),!r);t-=1);}},searchProcessedElement:function(t){for(var e=this.processedElements,r=0,i=e.length;r<i;){if(e[r].elem===t)return e[r].pos;r+=1;}return 0},addProcessedElement:function(t,e){for(var r=this.processedElements,i=r.length;i;)if(i-=1,r[i].elem===t){r[i].pos=e;return}r.push(new ProcessedElement(t,e));},prepareFrame:function(t){this.prepareRenderableFrame(t),this.prepareProperties(t,this.isInRange);}};var lineCapEnum={1:\"butt\",2:\"round\",3:\"square\"},lineJoinEnum={1:\"miter\",2:\"round\",3:\"bevel\"};function SVGShapeData(t,e,r){this.caches=[],this.styles=[],this.transformers=t,this.lStr=\"\",this.sh=r,this.lvl=e,this._isAnimated=!!r.k;for(var i=0,s=t.length;i<s;){if(t[i].mProps.dynamicProperties.length){this._isAnimated=!0;break}i+=1;}}SVGShapeData.prototype.setAsAnimated=function(){this._isAnimated=!0;};function SVGStyleData(t,e){this.data=t,this.type=t.ty,this.d=\"\",this.lvl=e,this._mdf=!1,this.closed=t.hd===!0,this.pElem=createNS(\"path\"),this.msElem=null;}SVGStyleData.prototype.reset=function(){this.d=\"\",this._mdf=!1;};function DashProperty(t,e,r,i){this.elem=t,this.frameId=-1,this.dataProps=createSizedArray(e.length),this.renderer=r,this.k=!1,this.dashStr=\"\",this.dashArray=createTypedArray(\"float32\",e.length?e.length-1:0),this.dashoffset=createTypedArray(\"float32\",1),this.initDynamicPropertyContainer(i);var s,a=e.length||0,n;for(s=0;s<a;s+=1)n=PropertyFactory.getProp(t,e[s].v,0,0,this),this.k=n.k||this.k,this.dataProps[s]={n:e[s].n,p:n};this.k||this.getValue(!0),this._isAnimated=this.k;}DashProperty.prototype.getValue=function(t){if(!(this.elem.globalData.frameId===this.frameId&&!t)&&(this.frameId=this.elem.globalData.frameId,this.iterateDynamicProperties(),this._mdf=this._mdf||t,this._mdf)){var e=0,r=this.dataProps.length;for(this.renderer===\"svg\"&&(this.dashStr=\"\"),e=0;e<r;e+=1)this.dataProps[e].n!==\"o\"?this.renderer===\"svg\"?this.dashStr+=\" \"+this.dataProps[e].p.v:this.dashArray[e]=this.dataProps[e].p.v:this.dashoffset[0]=this.dataProps[e].p.v;}},extendPrototype([DynamicPropertyContainer],DashProperty);function SVGStrokeStyleData(t,e,r){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.o=PropertyFactory.getProp(t,e.o,0,.01,this),this.w=PropertyFactory.getProp(t,e.w,0,null,this),this.d=new DashProperty(t,e.d||{},\"svg\",this),this.c=PropertyFactory.getProp(t,e.c,1,255,this),this.style=r,this._isAnimated=!!this._isAnimated;}extendPrototype([DynamicPropertyContainer],SVGStrokeStyleData);function SVGFillStyleData(t,e,r){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.o=PropertyFactory.getProp(t,e.o,0,.01,this),this.c=PropertyFactory.getProp(t,e.c,1,255,this),this.style=r;}extendPrototype([DynamicPropertyContainer],SVGFillStyleData);function SVGNoStyleData(t,e,r){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.style=r;}extendPrototype([DynamicPropertyContainer],SVGNoStyleData);function GradientProperty(t,e,r){this.data=e,this.c=createTypedArray(\"uint8c\",e.p*4);var i=e.k.k[0].s?e.k.k[0].s.length-e.p*4:e.k.k.length-e.p*4;this.o=createTypedArray(\"float32\",i),this._cmdf=!1,this._omdf=!1,this._collapsable=this.checkCollapsable(),this._hasOpacity=i,this.initDynamicPropertyContainer(r),this.prop=PropertyFactory.getProp(t,e.k,1,null,this),this.k=this.prop.k,this.getValue(!0);}GradientProperty.prototype.comparePoints=function(t,e){for(var r=0,i=this.o.length/2,s;r<i;){if(s=Math.abs(t[r*4]-t[e*4+r*2]),s>.01)return !1;r+=1;}return !0},GradientProperty.prototype.checkCollapsable=function(){if(this.o.length/2!==this.c.length/4)return !1;if(this.data.k.k[0].s)for(var t=0,e=this.data.k.k.length;t<e;){if(!this.comparePoints(this.data.k.k[t].s,this.data.p))return !1;t+=1;}else if(!this.comparePoints(this.data.k.k,this.data.p))return !1;return !0},GradientProperty.prototype.getValue=function(t){if(this.prop.getValue(),this._mdf=!1,this._cmdf=!1,this._omdf=!1,this.prop._mdf||t){var e,r=this.data.p*4,i,s;for(e=0;e<r;e+=1)i=e%4===0?100:255,s=Math.round(this.prop.v[e]*i),this.c[e]!==s&&(this.c[e]=s,this._cmdf=!t);if(this.o.length)for(r=this.prop.v.length,e=this.data.p*4;e<r;e+=1)i=e%2===0?100:1,s=e%2===0?Math.round(this.prop.v[e]*100):this.prop.v[e],this.o[e-this.data.p*4]!==s&&(this.o[e-this.data.p*4]=s,this._omdf=!t);this._mdf=!t;}},extendPrototype([DynamicPropertyContainer],GradientProperty);function SVGGradientFillStyleData(t,e,r){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.initGradientData(t,e,r);}SVGGradientFillStyleData.prototype.initGradientData=function(t,e,r){this.o=PropertyFactory.getProp(t,e.o,0,.01,this),this.s=PropertyFactory.getProp(t,e.s,1,null,this),this.e=PropertyFactory.getProp(t,e.e,1,null,this),this.h=PropertyFactory.getProp(t,e.h||{k:0},0,.01,this),this.a=PropertyFactory.getProp(t,e.a||{k:0},0,degToRads,this),this.g=new GradientProperty(t,e.g,this),this.style=r,this.stops=[],this.setGradientData(r.pElem,e),this.setGradientOpacity(e,r),this._isAnimated=!!this._isAnimated;},SVGGradientFillStyleData.prototype.setGradientData=function(t,e){var r=createElementID(),i=createNS(e.t===1?\"linearGradient\":\"radialGradient\");i.setAttribute(\"id\",r),i.setAttribute(\"spreadMethod\",\"pad\"),i.setAttribute(\"gradientUnits\",\"userSpaceOnUse\");var s=[],a,n,o;for(o=e.g.p*4,n=0;n<o;n+=4)a=createNS(\"stop\"),i.appendChild(a),s.push(a);t.setAttribute(e.ty===\"gf\"?\"fill\":\"stroke\",\"url(\"+getLocationHref()+\"#\"+r+\")\"),this.gf=i,this.cst=s;},SVGGradientFillStyleData.prototype.setGradientOpacity=function(t,e){if(this.g._hasOpacity&&!this.g._collapsable){var r,i,s,a=createNS(\"mask\"),n=createNS(\"path\");a.appendChild(n);var o=createElementID(),l=createElementID();a.setAttribute(\"id\",l);var h=createNS(t.t===1?\"linearGradient\":\"radialGradient\");h.setAttribute(\"id\",o),h.setAttribute(\"spreadMethod\",\"pad\"),h.setAttribute(\"gradientUnits\",\"userSpaceOnUse\"),s=t.g.k.k[0].s?t.g.k.k[0].s.length:t.g.k.k.length;var u=this.stops;for(i=t.g.p*4;i<s;i+=2)r=createNS(\"stop\"),r.setAttribute(\"stop-color\",\"rgb(255,255,255)\"),h.appendChild(r),u.push(r);n.setAttribute(t.ty===\"gf\"?\"fill\":\"stroke\",\"url(\"+getLocationHref()+\"#\"+o+\")\"),t.ty===\"gs\"&&(n.setAttribute(\"stroke-linecap\",lineCapEnum[t.lc||2]),n.setAttribute(\"stroke-linejoin\",lineJoinEnum[t.lj||2]),t.lj===1&&n.setAttribute(\"stroke-miterlimit\",t.ml)),this.of=h,this.ms=a,this.ost=u,this.maskId=l,e.msElem=n;}},extendPrototype([DynamicPropertyContainer],SVGGradientFillStyleData);function SVGGradientStrokeStyleData(t,e,r){this.initDynamicPropertyContainer(t),this.getValue=this.iterateDynamicProperties,this.w=PropertyFactory.getProp(t,e.w,0,null,this),this.d=new DashProperty(t,e.d||{},\"svg\",this),this.initGradientData(t,e,r),this._isAnimated=!!this._isAnimated;}extendPrototype([SVGGradientFillStyleData,DynamicPropertyContainer],SVGGradientStrokeStyleData);function ShapeGroupData(){this.it=[],this.prevViewData=[],this.gr=createNS(\"g\");}function SVGTransformData(t,e,r){this.transform={mProps:t,op:e,container:r},this.elements=[],this._isAnimated=this.transform.mProps.dynamicProperties.length||this.transform.op.effectsSequence.length;}var buildShapeString=function(t,e,r,i){if(e===0)return \"\";var s=t.o,a=t.i,n=t.v,o,l=\" M\"+i.applyToPointStringified(n[0][0],n[0][1]);for(o=1;o<e;o+=1)l+=\" C\"+i.applyToPointStringified(s[o-1][0],s[o-1][1])+\" \"+i.applyToPointStringified(a[o][0],a[o][1])+\" \"+i.applyToPointStringified(n[o][0],n[o][1]);return r&&e&&(l+=\" C\"+i.applyToPointStringified(s[o-1][0],s[o-1][1])+\" \"+i.applyToPointStringified(a[0][0],a[0][1])+\" \"+i.applyToPointStringified(n[0][0],n[0][1]),l+=\"z\"),l},SVGElementsRenderer=function(){var t=new Matrix,e=new Matrix,r={createRenderFunction:i};function i(f){switch(f.ty){case\"fl\":return o;case\"gf\":return h;case\"gs\":return l;case\"st\":return u;case\"sh\":case\"el\":case\"rc\":case\"sr\":return n;case\"tr\":return s;case\"no\":return a;default:return null}}function s(f,m,d){(d||m.transform.op._mdf)&&m.transform.container.setAttribute(\"opacity\",m.transform.op.v),(d||m.transform.mProps._mdf)&&m.transform.container.setAttribute(\"transform\",m.transform.mProps.v.to2dCSS());}function a(){}function n(f,m,d){var p,c,v,y,g,b,x=m.styles.length,S=m.lvl,C,_,T,L;for(b=0;b<x;b+=1){if(y=m.sh._mdf||d,m.styles[b].lvl<S){for(_=e.reset(),T=S-m.styles[b].lvl,L=m.transformers.length-1;!y&&T>0;)y=m.transformers[L].mProps._mdf||y,T-=1,L-=1;if(y)for(T=S-m.styles[b].lvl,L=m.transformers.length-1;T>0;)_.multiply(m.transformers[L].mProps.v),T-=1,L-=1;}else _=t;if(C=m.sh.paths,c=C._length,y){for(v=\"\",p=0;p<c;p+=1)g=C.shapes[p],g&&g._length&&(v+=buildShapeString(g,g._length,g.c,_));m.caches[b]=v;}else v=m.caches[b];m.styles[b].d+=f.hd===!0?\"\":v,m.styles[b]._mdf=y||m.styles[b]._mdf;}}function o(f,m,d){var p=m.style;(m.c._mdf||d)&&p.pElem.setAttribute(\"fill\",\"rgb(\"+bmFloor(m.c.v[0])+\",\"+bmFloor(m.c.v[1])+\",\"+bmFloor(m.c.v[2])+\")\"),(m.o._mdf||d)&&p.pElem.setAttribute(\"fill-opacity\",m.o.v);}function l(f,m,d){h(f,m,d),u(f,m,d);}function h(f,m,d){var p=m.gf,c=m.g._hasOpacity,v=m.s.v,y=m.e.v;if(m.o._mdf||d){var g=f.ty===\"gf\"?\"fill-opacity\":\"stroke-opacity\";m.style.pElem.setAttribute(g,m.o.v);}if(m.s._mdf||d){var b=f.t===1?\"x1\":\"cx\",x=b===\"x1\"?\"y1\":\"cy\";p.setAttribute(b,v[0]),p.setAttribute(x,v[1]),c&&!m.g._collapsable&&(m.of.setAttribute(b,v[0]),m.of.setAttribute(x,v[1]));}var S,C,_,T;if(m.g._cmdf||d){S=m.cst;var L=m.g.c;for(_=S.length,C=0;C<_;C+=1)T=S[C],T.setAttribute(\"offset\",L[C*4]+\"%\"),T.setAttribute(\"stop-color\",\"rgb(\"+L[C*4+1]+\",\"+L[C*4+2]+\",\"+L[C*4+3]+\")\");}if(c&&(m.g._omdf||d)){var G=m.g.o;for(m.g._collapsable?S=m.cst:S=m.ost,_=S.length,C=0;C<_;C+=1)T=S[C],m.g._collapsable||T.setAttribute(\"offset\",G[C*2]+\"%\"),T.setAttribute(\"stop-opacity\",G[C*2+1]);}if(f.t===1)(m.e._mdf||d)&&(p.setAttribute(\"x2\",y[0]),p.setAttribute(\"y2\",y[1]),c&&!m.g._collapsable&&(m.of.setAttribute(\"x2\",y[0]),m.of.setAttribute(\"y2\",y[1])));else {var R;if((m.s._mdf||m.e._mdf||d)&&(R=Math.sqrt(Math.pow(v[0]-y[0],2)+Math.pow(v[1]-y[1],2)),p.setAttribute(\"r\",R),c&&!m.g._collapsable&&m.of.setAttribute(\"r\",R)),m.e._mdf||m.h._mdf||m.a._mdf||d){R||(R=Math.sqrt(Math.pow(v[0]-y[0],2)+Math.pow(v[1]-y[1],2)));var j=Math.atan2(y[1]-v[1],y[0]-v[0]),$=m.h.v;$>=1?$=.99:$<=-1&&($=-.99);var F=R*$,W=Math.cos(j+m.a.v)*F+v[0],A=Math.sin(j+m.a.v)*F+v[1];p.setAttribute(\"fx\",W),p.setAttribute(\"fy\",A),c&&!m.g._collapsable&&(m.of.setAttribute(\"fx\",W),m.of.setAttribute(\"fy\",A));}}}function u(f,m,d){var p=m.style,c=m.d;c&&(c._mdf||d)&&c.dashStr&&(p.pElem.setAttribute(\"stroke-dasharray\",c.dashStr),p.pElem.setAttribute(\"stroke-dashoffset\",c.dashoffset[0])),m.c&&(m.c._mdf||d)&&p.pElem.setAttribute(\"stroke\",\"rgb(\"+bmFloor(m.c.v[0])+\",\"+bmFloor(m.c.v[1])+\",\"+bmFloor(m.c.v[2])+\")\"),(m.o._mdf||d)&&p.pElem.setAttribute(\"stroke-opacity\",m.o.v),(m.w._mdf||d)&&(p.pElem.setAttribute(\"stroke-width\",m.w.v),p.msElem&&p.msElem.setAttribute(\"stroke-width\",m.w.v));}return r}();function SVGShapeElement(t,e,r){this.shapes=[],this.shapesData=t.shapes,this.stylesList=[],this.shapeModifiers=[],this.itemsData=[],this.processedElements=[],this.animatedContents=[],this.initElement(t,e,r),this.prevViewData=[];}extendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement],SVGShapeElement),SVGShapeElement.prototype.initSecondaryElement=function(){},SVGShapeElement.prototype.identityMatrix=new Matrix,SVGShapeElement.prototype.buildExpressionInterface=function(){},SVGShapeElement.prototype.createContent=function(){this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,0,[],!0),this.filterUniqueShapes();},SVGShapeElement.prototype.filterUniqueShapes=function(){var t,e=this.shapes.length,r,i,s=this.stylesList.length,a,n=[],o=!1;for(i=0;i<s;i+=1){for(a=this.stylesList[i],o=!1,n.length=0,t=0;t<e;t+=1)r=this.shapes[t],r.styles.indexOf(a)!==-1&&(n.push(r),o=r._isAnimated||o);n.length>1&&o&&this.setShapesAsAnimated(n);}},SVGShapeElement.prototype.setShapesAsAnimated=function(t){var e,r=t.length;for(e=0;e<r;e+=1)t[e].setAsAnimated();},SVGShapeElement.prototype.createStyleElement=function(t,e){var r,i=new SVGStyleData(t,e),s=i.pElem;if(t.ty===\"st\")r=new SVGStrokeStyleData(this,t,i);else if(t.ty===\"fl\")r=new SVGFillStyleData(this,t,i);else if(t.ty===\"gf\"||t.ty===\"gs\"){var a=t.ty===\"gf\"?SVGGradientFillStyleData:SVGGradientStrokeStyleData;r=new a(this,t,i),this.globalData.defs.appendChild(r.gf),r.maskId&&(this.globalData.defs.appendChild(r.ms),this.globalData.defs.appendChild(r.of),s.setAttribute(\"mask\",\"url(\"+getLocationHref()+\"#\"+r.maskId+\")\"));}else t.ty===\"no\"&&(r=new SVGNoStyleData(this,t,i));return (t.ty===\"st\"||t.ty===\"gs\")&&(s.setAttribute(\"stroke-linecap\",lineCapEnum[t.lc||2]),s.setAttribute(\"stroke-linejoin\",lineJoinEnum[t.lj||2]),s.setAttribute(\"fill-opacity\",\"0\"),t.lj===1&&s.setAttribute(\"stroke-miterlimit\",t.ml)),t.r===2&&s.setAttribute(\"fill-rule\",\"evenodd\"),t.ln&&s.setAttribute(\"id\",t.ln),t.cl&&s.setAttribute(\"class\",t.cl),t.bm&&(s.style[\"mix-blend-mode\"]=getBlendMode(t.bm)),this.stylesList.push(i),this.addToAnimatedContents(t,r),r},SVGShapeElement.prototype.createGroupElement=function(t){var e=new ShapeGroupData;return t.ln&&e.gr.setAttribute(\"id\",t.ln),t.cl&&e.gr.setAttribute(\"class\",t.cl),t.bm&&(e.gr.style[\"mix-blend-mode\"]=getBlendMode(t.bm)),e},SVGShapeElement.prototype.createTransformElement=function(t,e){var r=TransformPropertyFactory.getTransformProperty(this,t,this),i=new SVGTransformData(r,r.o,e);return this.addToAnimatedContents(t,i),i},SVGShapeElement.prototype.createShapeElement=function(t,e,r){var i=4;t.ty===\"rc\"?i=5:t.ty===\"el\"?i=6:t.ty===\"sr\"&&(i=7);var s=ShapePropertyFactory.getShapeProp(this,t,i,this),a=new SVGShapeData(e,r,s);return this.shapes.push(a),this.addShapeToModifiers(a),this.addToAnimatedContents(t,a),a},SVGShapeElement.prototype.addToAnimatedContents=function(t,e){for(var r=0,i=this.animatedContents.length;r<i;){if(this.animatedContents[r].element===e)return;r+=1;}this.animatedContents.push({fn:SVGElementsRenderer.createRenderFunction(t),element:e,data:t});},SVGShapeElement.prototype.setElementStyles=function(t){var e=t.styles,r,i=this.stylesList.length;for(r=0;r<i;r+=1)this.stylesList[r].closed||e.push(this.stylesList[r]);},SVGShapeElement.prototype.reloadShapes=function(){this._isFirstFrame=!0;var t,e=this.itemsData.length;for(t=0;t<e;t+=1)this.prevViewData[t]=this.itemsData[t];for(this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,0,[],!0),this.filterUniqueShapes(),e=this.dynamicProperties.length,t=0;t<e;t+=1)this.dynamicProperties[t].getValue();this.renderModifiers();},SVGShapeElement.prototype.searchShapes=function(t,e,r,i,s,a,n){var o=[].concat(a),l,h=t.length-1,u,f,m=[],d=[],p,c,v;for(l=h;l>=0;l-=1){if(v=this.searchProcessedElement(t[l]),v?e[l]=r[v-1]:t[l]._render=n,t[l].ty===\"fl\"||t[l].ty===\"st\"||t[l].ty===\"gf\"||t[l].ty===\"gs\"||t[l].ty===\"no\")v?e[l].style.closed=!1:e[l]=this.createStyleElement(t[l],s),t[l]._render&&e[l].style.pElem.parentNode!==i&&i.appendChild(e[l].style.pElem),m.push(e[l].style);else if(t[l].ty===\"gr\"){if(!v)e[l]=this.createGroupElement(t[l]);else for(f=e[l].it.length,u=0;u<f;u+=1)e[l].prevViewData[u]=e[l].it[u];this.searchShapes(t[l].it,e[l].it,e[l].prevViewData,e[l].gr,s+1,o,n),t[l]._render&&e[l].gr.parentNode!==i&&i.appendChild(e[l].gr);}else t[l].ty===\"tr\"?(v||(e[l]=this.createTransformElement(t[l],i)),p=e[l].transform,o.push(p)):t[l].ty===\"sh\"||t[l].ty===\"rc\"||t[l].ty===\"el\"||t[l].ty===\"sr\"?(v||(e[l]=this.createShapeElement(t[l],o,s)),this.setElementStyles(e[l])):t[l].ty===\"tm\"||t[l].ty===\"rd\"||t[l].ty===\"ms\"||t[l].ty===\"pb\"||t[l].ty===\"zz\"||t[l].ty===\"op\"?(v?(c=e[l],c.closed=!1):(c=ShapeModifiers.getModifier(t[l].ty),c.init(this,t[l]),e[l]=c,this.shapeModifiers.push(c)),d.push(c)):t[l].ty===\"rp\"&&(v?(c=e[l],c.closed=!0):(c=ShapeModifiers.getModifier(t[l].ty),e[l]=c,c.init(this,t,l,e),this.shapeModifiers.push(c),n=!1),d.push(c));this.addProcessedElement(t[l],l+1);}for(h=m.length,l=0;l<h;l+=1)m[l].closed=!0;for(h=d.length,l=0;l<h;l+=1)d[l].closed=!0;},SVGShapeElement.prototype.renderInnerContent=function(){this.renderModifiers();var t,e=this.stylesList.length;for(t=0;t<e;t+=1)this.stylesList[t].reset();for(this.renderShape(),t=0;t<e;t+=1)(this.stylesList[t]._mdf||this._isFirstFrame)&&(this.stylesList[t].msElem&&(this.stylesList[t].msElem.setAttribute(\"d\",this.stylesList[t].d),this.stylesList[t].d=\"M0 0\"+this.stylesList[t].d),this.stylesList[t].pElem.setAttribute(\"d\",this.stylesList[t].d||\"M0 0\"));},SVGShapeElement.prototype.renderShape=function(){var t,e=this.animatedContents.length,r;for(t=0;t<e;t+=1)r=this.animatedContents[t],(this._isFirstFrame||r.element._isAnimated)&&r.data!==!0&&r.fn(r.data,r.element,this._isFirstFrame);},SVGShapeElement.prototype.destroy=function(){this.destroyBaseElement(),this.shapesData=null,this.itemsData=null;};function LetterProps(t,e,r,i,s,a){this.o=t,this.sw=e,this.sc=r,this.fc=i,this.m=s,this.p=a,this._mdf={o:!0,sw:!!e,sc:!!r,fc:!!i,m:!0,p:!0};}LetterProps.prototype.update=function(t,e,r,i,s,a){this._mdf.o=!1,this._mdf.sw=!1,this._mdf.sc=!1,this._mdf.fc=!1,this._mdf.m=!1,this._mdf.p=!1;var n=!1;return this.o!==t&&(this.o=t,this._mdf.o=!0,n=!0),this.sw!==e&&(this.sw=e,this._mdf.sw=!0,n=!0),this.sc!==r&&(this.sc=r,this._mdf.sc=!0,n=!0),this.fc!==i&&(this.fc=i,this._mdf.fc=!0,n=!0),this.m!==s&&(this.m=s,this._mdf.m=!0,n=!0),a.length&&(this.p[0]!==a[0]||this.p[1]!==a[1]||this.p[4]!==a[4]||this.p[5]!==a[5]||this.p[12]!==a[12]||this.p[13]!==a[13])&&(this.p=a,this._mdf.p=!0,n=!0),n};function TextProperty(t,e){this._frameId=initialDefaultFrame,this.pv=\"\",this.v=\"\",this.kf=!1,this._isFirstFrame=!0,this._mdf=!1,e.d&&e.d.sid&&(e.d=t.globalData.slotManager.getProp(e.d)),this.data=e,this.elem=t,this.comp=this.elem.comp,this.keysIndex=0,this.canResize=!1,this.minimumFontSize=1,this.effectsSequence=[],this.currentData={ascent:0,boxWidth:this.defaultBoxWidth,f:\"\",fStyle:\"\",fWeight:\"\",fc:\"\",j:\"\",justifyOffset:\"\",l:[],lh:0,lineWidths:[],ls:\"\",of:\"\",s:\"\",sc:\"\",sw:0,t:0,tr:0,sz:0,ps:null,fillColorAnim:!1,strokeColorAnim:!1,strokeWidthAnim:!1,yOffset:0,finalSize:0,finalText:[],finalLineHeight:0,__complete:!1},this.copyData(this.currentData,this.data.d.k[0].s),this.searchProperty()||this.completeTextData(this.currentData);}TextProperty.prototype.defaultBoxWidth=[0,0],TextProperty.prototype.copyData=function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t},TextProperty.prototype.setCurrentData=function(t){t.__complete||this.completeTextData(t),this.currentData=t,this.currentData.boxWidth=this.currentData.boxWidth||this.defaultBoxWidth,this._mdf=!0;},TextProperty.prototype.searchProperty=function(){return this.searchKeyframes()},TextProperty.prototype.searchKeyframes=function(){return this.kf=this.data.d.k.length>1,this.kf&&this.addEffect(this.getKeyframeValue.bind(this)),this.kf},TextProperty.prototype.addEffect=function(t){this.effectsSequence.push(t),this.elem.addDynamicProperty(this);},TextProperty.prototype.getValue=function(t){if(!((this.elem.globalData.frameId===this.frameId||!this.effectsSequence.length)&&!t)){this.currentData.t=this.data.d.k[this.keysIndex].s.t;var e=this.currentData,r=this.keysIndex;if(this.lock){this.setCurrentData(this.currentData);return}this.lock=!0,this._mdf=!1;var i,s=this.effectsSequence.length,a=t||this.data.d.k[this.keysIndex].s;for(i=0;i<s;i+=1)r!==this.keysIndex?a=this.effectsSequence[i](a,a.t):a=this.effectsSequence[i](this.currentData,a.t);e!==a&&this.setCurrentData(a),this.v=this.currentData,this.pv=this.v,this.lock=!1,this.frameId=this.elem.globalData.frameId;}},TextProperty.prototype.getKeyframeValue=function(){for(var t=this.data.d.k,e=this.elem.comp.renderedFrame,r=0,i=t.length;r<=i-1&&!(r===i-1||t[r+1].t>e);)r+=1;return this.keysIndex!==r&&(this.keysIndex=r),this.data.d.k[this.keysIndex].s},TextProperty.prototype.buildFinalText=function(t){for(var e=[],r=0,i=t.length,s,a,n=!1,o=!1,l=\"\";r<i;)n=o,o=!1,s=t.charCodeAt(r),l=t.charAt(r),FontManager.isCombinedCharacter(s)?n=!0:s>=55296&&s<=56319?FontManager.isRegionalFlag(t,r)?l=t.substr(r,14):(a=t.charCodeAt(r+1),a>=56320&&a<=57343&&(FontManager.isModifier(s,a)?(l=t.substr(r,2),n=!0):FontManager.isFlagEmoji(t.substr(r,4))?l=t.substr(r,4):l=t.substr(r,2))):s>56319?(a=t.charCodeAt(r+1),FontManager.isVariationSelector(s)&&(n=!0)):FontManager.isZeroWidthJoiner(s)&&(n=!0,o=!0),n?(e[e.length-1]+=l,n=!1):e.push(l),r+=l.length;return e},TextProperty.prototype.completeTextData=function(t){t.__complete=!0;var e=this.elem.globalData.fontManager,r=this.data,i=[],s,a,n,o=0,l,h=r.m.g,u=0,f=0,m=0,d=[],p=0,c=0,v,y,g=e.getFontByName(t.f),b,x=0,S=getFontProperties(g);t.fWeight=S.weight,t.fStyle=S.style,t.finalSize=t.s,t.finalText=this.buildFinalText(t.t),a=t.finalText.length,t.finalLineHeight=t.lh;var C=t.tr/1e3*t.finalSize,_;if(t.sz)for(var T=!0,L=t.sz[0],G=t.sz[1],R,j;T;){j=this.buildFinalText(t.t),R=0,p=0,a=j.length,C=t.tr/1e3*t.finalSize;var $=-1;for(s=0;s<a;s+=1)_=j[s].charCodeAt(0),n=!1,j[s]===\" \"?$=s:(_===13||_===3)&&(p=0,n=!0,R+=t.finalLineHeight||t.finalSize*1.2),e.chars?(b=e.getCharData(j[s],g.fStyle,g.fFamily),x=n?0:b.w*t.finalSize/100):x=e.measureText(j[s],t.f,t.finalSize),p+x>L&&j[s]!==\" \"?($===-1?a+=1:s=$,R+=t.finalLineHeight||t.finalSize*1.2,j.splice(s,$===s?1:0,\"\\r\"),$=-1,p=0):(p+=x,p+=C);R+=g.ascent*t.finalSize/100,this.canResize&&t.finalSize>this.minimumFontSize&&G<R?(t.finalSize-=1,t.finalLineHeight=t.finalSize*t.lh/t.s):(t.finalText=j,a=t.finalText.length,T=!1);}p=-C,x=0;var F=0,W;for(s=0;s<a;s+=1)if(n=!1,W=t.finalText[s],_=W.charCodeAt(0),_===13||_===3?(F=0,d.push(p),c=p>c?p:c,p=-2*C,l=\"\",n=!0,m+=1):l=W,e.chars?(b=e.getCharData(W,g.fStyle,e.getFontByName(t.f).fFamily),x=n?0:b.w*t.finalSize/100):x=e.measureText(l,t.f,t.finalSize),W===\" \"?F+=x+C:(p+=x+C+F,F=0),i.push({l:x,an:x,add:u,n,anIndexes:[],val:l,line:m,animatorJustifyOffset:0}),h==2){if(u+=x,l===\"\"||l===\" \"||s===a-1){for((l===\"\"||l===\" \")&&(u-=x);f<=s;)i[f].an=u,i[f].ind=o,i[f].extra=x,f+=1;o+=1,u=0;}}else if(h==3){if(u+=x,l===\"\"||s===a-1){for(l===\"\"&&(u-=x);f<=s;)i[f].an=u,i[f].ind=o,i[f].extra=x,f+=1;u=0,o+=1;}}else i[o].ind=o,i[o].extra=0,o+=1;if(t.l=i,c=p>c?p:c,d.push(p),t.sz)t.boxWidth=t.sz[0],t.justifyOffset=0;else switch(t.boxWidth=c,t.j){case 1:t.justifyOffset=-t.boxWidth;break;case 2:t.justifyOffset=-t.boxWidth/2;break;default:t.justifyOffset=0;}t.lineWidths=d;var A=r.a,M,P;y=A.length;var E,O,I=[];for(v=0;v<y;v+=1){for(M=A[v],M.a.sc&&(t.strokeColorAnim=!0),M.a.sw&&(t.strokeWidthAnim=!0),(M.a.fc||M.a.fh||M.a.fs||M.a.fb)&&(t.fillColorAnim=!0),O=0,E=M.s.b,s=0;s<a;s+=1)P=i[s],P.anIndexes[v]=O,(E==1&&P.val!==\"\"||E==2&&P.val!==\"\"&&P.val!==\" \"||E==3&&(P.n||P.val==\" \"||s==a-1)||E==4&&(P.n||s==a-1))&&(M.s.rn===1&&I.push(O),O+=1);r.a[v].s.totalChars=O;var Z=-1,K;if(M.s.rn===1)for(s=0;s<a;s+=1)P=i[s],Z!=P.anIndexes[v]&&(Z=P.anIndexes[v],K=I.splice(Math.floor(Math.random()*I.length),1)[0]),P.anIndexes[v]=K;}t.yOffset=t.finalLineHeight||t.finalSize*1.2,t.ls=t.ls||0,t.ascent=g.ascent*t.finalSize/100;},TextProperty.prototype.updateDocumentData=function(t,e){e=e===void 0?this.keysIndex:e;var r=this.copyData({},this.data.d.k[e].s);r=this.copyData(r,t),this.data.d.k[e].s=r,this.recalculate(e),this.setCurrentData(r),this.elem.addDynamicProperty(this);},TextProperty.prototype.recalculate=function(t){var e=this.data.d.k[t].s;e.__complete=!1,this.keysIndex=0,this._isFirstFrame=!0,this.getValue(e);},TextProperty.prototype.canResizeFont=function(t){this.canResize=t,this.recalculate(this.keysIndex),this.elem.addDynamicProperty(this);},TextProperty.prototype.setMinimumFontSize=function(t){this.minimumFontSize=Math.floor(t)||1,this.recalculate(this.keysIndex),this.elem.addDynamicProperty(this);};var TextSelectorProp=function(){var t=Math.max,e=Math.min,r=Math.floor;function i(a,n){this._currentTextLength=-1,this.k=!1,this.data=n,this.elem=a,this.comp=a.comp,this.finalS=0,this.finalE=0,this.initDynamicPropertyContainer(a),this.s=PropertyFactory.getProp(a,n.s||{k:0},0,0,this),\"e\"in n?this.e=PropertyFactory.getProp(a,n.e,0,0,this):this.e={v:100},this.o=PropertyFactory.getProp(a,n.o||{k:0},0,0,this),this.xe=PropertyFactory.getProp(a,n.xe||{k:0},0,0,this),this.ne=PropertyFactory.getProp(a,n.ne||{k:0},0,0,this),this.sm=PropertyFactory.getProp(a,n.sm||{k:100},0,0,this),this.a=PropertyFactory.getProp(a,n.a,0,.01,this),this.dynamicProperties.length||this.getValue();}i.prototype={getMult:function(a){this._currentTextLength!==this.elem.textProperty.currentData.l.length&&this.getValue();var n=0,o=0,l=1,h=1;this.ne.v>0?n=this.ne.v/100:o=-this.ne.v/100,this.xe.v>0?l=1-this.xe.v/100:h=1+this.xe.v/100;var u=BezierFactory.getBezierEasing(n,o,l,h).get,f=0,m=this.finalS,d=this.finalE,p=this.data.sh;if(p===2)d===m?f=a>=d?1:0:f=t(0,e(.5/(d-m)+(a-m)/(d-m),1)),f=u(f);else if(p===3)d===m?f=a>=d?0:1:f=1-t(0,e(.5/(d-m)+(a-m)/(d-m),1)),f=u(f);else if(p===4)d===m?f=0:(f=t(0,e(.5/(d-m)+(a-m)/(d-m),1)),f<.5?f*=2:f=1-2*(f-.5)),f=u(f);else if(p===5){if(d===m)f=0;else {var c=d-m;a=e(t(0,a+.5-m),d-m);var v=-c/2+a,y=c/2;f=Math.sqrt(1-v*v/(y*y));}f=u(f);}else p===6?(d===m?f=0:(a=e(t(0,a+.5-m),d-m),f=(1+Math.cos(Math.PI+Math.PI*2*a/(d-m)))/2),f=u(f)):(a>=r(m)&&(a-m<0?f=t(0,e(e(d,1)-(m-a),1)):f=t(0,e(d-a,1))),f=u(f));if(this.sm.v!==100){var g=this.sm.v*.01;g===0&&(g=1e-8);var b=.5-g*.5;f<b?f=0:(f=(f-b)/g,f>1&&(f=1));}return f*this.a.v},getValue:function(a){this.iterateDynamicProperties(),this._mdf=a||this._mdf,this._currentTextLength=this.elem.textProperty.currentData.l.length||0,a&&this.data.r===2&&(this.e.v=this._currentTextLength);var n=this.data.r===2?1:100/this.data.totalChars,o=this.o.v/n,l=this.s.v/n+o,h=this.e.v/n+o;if(l>h){var u=l;l=h,h=u;}this.finalS=l,this.finalE=h;}},extendPrototype([DynamicPropertyContainer],i);function s(a,n,o){return new i(a,n)}return {getTextSelectorProp:s}}();function TextAnimatorDataProperty(t,e,r){var i={propType:!1},s=PropertyFactory.getProp,a=e.a;this.a={r:a.r?s(t,a.r,0,degToRads,r):i,rx:a.rx?s(t,a.rx,0,degToRads,r):i,ry:a.ry?s(t,a.ry,0,degToRads,r):i,sk:a.sk?s(t,a.sk,0,degToRads,r):i,sa:a.sa?s(t,a.sa,0,degToRads,r):i,s:a.s?s(t,a.s,1,.01,r):i,a:a.a?s(t,a.a,1,0,r):i,o:a.o?s(t,a.o,0,.01,r):i,p:a.p?s(t,a.p,1,0,r):i,sw:a.sw?s(t,a.sw,0,0,r):i,sc:a.sc?s(t,a.sc,1,0,r):i,fc:a.fc?s(t,a.fc,1,0,r):i,fh:a.fh?s(t,a.fh,0,0,r):i,fs:a.fs?s(t,a.fs,0,.01,r):i,fb:a.fb?s(t,a.fb,0,.01,r):i,t:a.t?s(t,a.t,0,0,r):i},this.s=TextSelectorProp.getTextSelectorProp(t,e.s,r),this.s.t=e.s.t;}function TextAnimatorProperty(t,e,r){this._isFirstFrame=!0,this._hasMaskedPath=!1,this._frameId=-1,this._textData=t,this._renderType=e,this._elem=r,this._animatorsData=createSizedArray(this._textData.a.length),this._pathData={},this._moreOptions={alignment:{}},this.renderedLetters=[],this.lettersChangedFlag=!1,this.initDynamicPropertyContainer(r);}TextAnimatorProperty.prototype.searchProperties=function(){var t,e=this._textData.a.length,r,i=PropertyFactory.getProp;for(t=0;t<e;t+=1)r=this._textData.a[t],this._animatorsData[t]=new TextAnimatorDataProperty(this._elem,r,this);this._textData.p&&\"m\"in this._textData.p?(this._pathData={a:i(this._elem,this._textData.p.a,0,0,this),f:i(this._elem,this._textData.p.f,0,0,this),l:i(this._elem,this._textData.p.l,0,0,this),r:i(this._elem,this._textData.p.r,0,0,this),p:i(this._elem,this._textData.p.p,0,0,this),m:this._elem.maskManager.getMaskProperty(this._textData.p.m)},this._hasMaskedPath=!0):this._hasMaskedPath=!1,this._moreOptions.alignment=i(this._elem,this._textData.m.a,1,0,this);},TextAnimatorProperty.prototype.getMeasures=function(t,e){if(this.lettersChangedFlag=e,!(!this._mdf&&!this._isFirstFrame&&!e&&(!this._hasMaskedPath||!this._pathData.m._mdf))){this._isFirstFrame=!1;var r=this._moreOptions.alignment.v,i=this._animatorsData,s=this._textData,a=this.mHelper,n=this._renderType,o=this.renderedLetters.length,l,h,u,f,m=t.l,d,p,c,v,y,g,b,x,S,C,_,T,L,G,R;if(this._hasMaskedPath){if(R=this._pathData.m,!this._pathData.n||this._pathData._mdf){var j=R.v;this._pathData.r.v&&(j=j.reverse()),d={tLength:0,segments:[]},f=j._length-1;var $;for(T=0,u=0;u<f;u+=1)$=bez.buildBezierData(j.v[u],j.v[u+1],[j.o[u][0]-j.v[u][0],j.o[u][1]-j.v[u][1]],[j.i[u+1][0]-j.v[u+1][0],j.i[u+1][1]-j.v[u+1][1]]),d.tLength+=$.segmentLength,d.segments.push($),T+=$.segmentLength;u=f,R.v.c&&($=bez.buildBezierData(j.v[u],j.v[0],[j.o[u][0]-j.v[u][0],j.o[u][1]-j.v[u][1]],[j.i[0][0]-j.v[0][0],j.i[0][1]-j.v[0][1]]),d.tLength+=$.segmentLength,d.segments.push($),T+=$.segmentLength),this._pathData.pi=d;}if(d=this._pathData.pi,p=this._pathData.f.v,b=0,g=1,v=0,y=!0,C=d.segments,p<0&&R.v.c)for(d.tLength<Math.abs(p)&&(p=-Math.abs(p)%d.tLength),b=C.length-1,S=C[b].points,g=S.length-1;p<0;)p+=S[g].partialLength,g-=1,g<0&&(b-=1,S=C[b].points,g=S.length-1);S=C[b].points,x=S[g-1],c=S[g],_=c.partialLength;}f=m.length,l=0,h=0;var F=t.finalSize*1.2*.714,W=!0,A,M,P,E,O;E=i.length;var I,Z=-1,K,q,H,Q=p,rt=b,st=g,ut=-1,mt,ot,ht,at,tt,Mt,Lt,It,Dt=\"\",St=this.defaultPropsArray,Et;if(t.j===2||t.j===1){var pt=0,J=0,Y=t.j===2?-.5:-1,nt=0,ct=!0;for(u=0;u<f;u+=1)if(m[u].n){for(pt&&(pt+=J);nt<u;)m[nt].animatorJustifyOffset=pt,nt+=1;pt=0,ct=!0;}else {for(P=0;P<E;P+=1)A=i[P].a,A.t.propType&&(ct&&t.j===2&&(J+=A.t.v*Y),M=i[P].s,I=M.getMult(m[u].anIndexes[P],s.a[P].s.totalChars),I.length?pt+=A.t.v*I[0]*Y:pt+=A.t.v*I*Y);ct=!1;}for(pt&&(pt+=J);nt<u;)m[nt].animatorJustifyOffset=pt,nt+=1;}for(u=0;u<f;u+=1){if(a.reset(),mt=1,m[u].n)l=0,h+=t.yOffset,h+=W?1:0,p=Q,W=!1,this._hasMaskedPath&&(b=rt,g=st,S=C[b].points,x=S[g-1],c=S[g],_=c.partialLength,v=0),Dt=\"\",It=\"\",Mt=\"\",Et=\"\",St=this.defaultPropsArray;else {if(this._hasMaskedPath){if(ut!==m[u].line){switch(t.j){case 1:p+=T-t.lineWidths[m[u].line];break;case 2:p+=(T-t.lineWidths[m[u].line])/2;break}ut=m[u].line;}Z!==m[u].ind&&(m[Z]&&(p+=m[Z].extra),p+=m[u].an/2,Z=m[u].ind),p+=r[0]*m[u].an*.005;var Ct=0;for(P=0;P<E;P+=1)A=i[P].a,A.p.propType&&(M=i[P].s,I=M.getMult(m[u].anIndexes[P],s.a[P].s.totalChars),I.length?Ct+=A.p.v[0]*I[0]:Ct+=A.p.v[0]*I),A.a.propType&&(M=i[P].s,I=M.getMult(m[u].anIndexes[P],s.a[P].s.totalChars),I.length?Ct+=A.a.v[0]*I[0]:Ct+=A.a.v[0]*I);for(y=!0,this._pathData.a.v&&(p=m[0].an*.5+(T-this._pathData.f.v-m[0].an*.5-m[m.length-1].an*.5)*Z/(f-1),p+=this._pathData.f.v);y;)v+_>=p+Ct||!S?(L=(p+Ct-v)/c.partialLength,q=x.point[0]+(c.point[0]-x.point[0])*L,H=x.point[1]+(c.point[1]-x.point[1])*L,a.translate(-r[0]*m[u].an*.005,-(r[1]*F)*.01),y=!1):S&&(v+=c.partialLength,g+=1,g>=S.length&&(g=0,b+=1,C[b]?S=C[b].points:R.v.c?(g=0,b=0,S=C[b].points):(v-=c.partialLength,S=null)),S&&(x=c,c=S[g],_=c.partialLength));K=m[u].an/2-m[u].add,a.translate(-K,0,0);}else K=m[u].an/2-m[u].add,a.translate(-K,0,0),a.translate(-r[0]*m[u].an*.005,-r[1]*F*.01,0);for(P=0;P<E;P+=1)A=i[P].a,A.t.propType&&(M=i[P].s,I=M.getMult(m[u].anIndexes[P],s.a[P].s.totalChars),(l!==0||t.j!==0)&&(this._hasMaskedPath?I.length?p+=A.t.v*I[0]:p+=A.t.v*I:I.length?l+=A.t.v*I[0]:l+=A.t.v*I));for(t.strokeWidthAnim&&(ht=t.sw||0),t.strokeColorAnim&&(t.sc?ot=[t.sc[0],t.sc[1],t.sc[2]]:ot=[0,0,0]),t.fillColorAnim&&t.fc&&(at=[t.fc[0],t.fc[1],t.fc[2]]),P=0;P<E;P+=1)A=i[P].a,A.a.propType&&(M=i[P].s,I=M.getMult(m[u].anIndexes[P],s.a[P].s.totalChars),I.length?a.translate(-A.a.v[0]*I[0],-A.a.v[1]*I[1],A.a.v[2]*I[2]):a.translate(-A.a.v[0]*I,-A.a.v[1]*I,A.a.v[2]*I));for(P=0;P<E;P+=1)A=i[P].a,A.s.propType&&(M=i[P].s,I=M.getMult(m[u].anIndexes[P],s.a[P].s.totalChars),I.length?a.scale(1+(A.s.v[0]-1)*I[0],1+(A.s.v[1]-1)*I[1],1):a.scale(1+(A.s.v[0]-1)*I,1+(A.s.v[1]-1)*I,1));for(P=0;P<E;P+=1){if(A=i[P].a,M=i[P].s,I=M.getMult(m[u].anIndexes[P],s.a[P].s.totalChars),A.sk.propType&&(I.length?a.skewFromAxis(-A.sk.v*I[0],A.sa.v*I[1]):a.skewFromAxis(-A.sk.v*I,A.sa.v*I)),A.r.propType&&(I.length?a.rotateZ(-A.r.v*I[2]):a.rotateZ(-A.r.v*I)),A.ry.propType&&(I.length?a.rotateY(A.ry.v*I[1]):a.rotateY(A.ry.v*I)),A.rx.propType&&(I.length?a.rotateX(A.rx.v*I[0]):a.rotateX(A.rx.v*I)),A.o.propType&&(I.length?mt+=(A.o.v*I[0]-mt)*I[0]:mt+=(A.o.v*I-mt)*I),t.strokeWidthAnim&&A.sw.propType&&(I.length?ht+=A.sw.v*I[0]:ht+=A.sw.v*I),t.strokeColorAnim&&A.sc.propType)for(tt=0;tt<3;tt+=1)I.length?ot[tt]+=(A.sc.v[tt]-ot[tt])*I[0]:ot[tt]+=(A.sc.v[tt]-ot[tt])*I;if(t.fillColorAnim&&t.fc){if(A.fc.propType)for(tt=0;tt<3;tt+=1)I.length?at[tt]+=(A.fc.v[tt]-at[tt])*I[0]:at[tt]+=(A.fc.v[tt]-at[tt])*I;A.fh.propType&&(I.length?at=addHueToRGB(at,A.fh.v*I[0]):at=addHueToRGB(at,A.fh.v*I)),A.fs.propType&&(I.length?at=addSaturationToRGB(at,A.fs.v*I[0]):at=addSaturationToRGB(at,A.fs.v*I)),A.fb.propType&&(I.length?at=addBrightnessToRGB(at,A.fb.v*I[0]):at=addBrightnessToRGB(at,A.fb.v*I));}}for(P=0;P<E;P+=1)A=i[P].a,A.p.propType&&(M=i[P].s,I=M.getMult(m[u].anIndexes[P],s.a[P].s.totalChars),this._hasMaskedPath?I.length?a.translate(0,A.p.v[1]*I[0],-A.p.v[2]*I[1]):a.translate(0,A.p.v[1]*I,-A.p.v[2]*I):I.length?a.translate(A.p.v[0]*I[0],A.p.v[1]*I[1],-A.p.v[2]*I[2]):a.translate(A.p.v[0]*I,A.p.v[1]*I,-A.p.v[2]*I));if(t.strokeWidthAnim&&(Mt=ht<0?0:ht),t.strokeColorAnim&&(Lt=\"rgb(\"+Math.round(ot[0]*255)+\",\"+Math.round(ot[1]*255)+\",\"+Math.round(ot[2]*255)+\")\"),t.fillColorAnim&&t.fc&&(It=\"rgb(\"+Math.round(at[0]*255)+\",\"+Math.round(at[1]*255)+\",\"+Math.round(at[2]*255)+\")\"),this._hasMaskedPath){if(a.translate(0,-t.ls),a.translate(0,r[1]*F*.01+h,0),this._pathData.p.v){G=(c.point[1]-x.point[1])/(c.point[0]-x.point[0]);var Yt=Math.atan(G)*180/Math.PI;c.point[0]<x.point[0]&&(Yt+=180),a.rotate(-Yt*Math.PI/180);}a.translate(q,H,0),p-=r[0]*m[u].an*.005,m[u+1]&&Z!==m[u+1].ind&&(p+=m[u].an/2,p+=t.tr*.001*t.finalSize);}else {switch(a.translate(l,h,0),t.ps&&a.translate(t.ps[0],t.ps[1]+t.ascent,0),t.j){case 1:a.translate(m[u].animatorJustifyOffset+t.justifyOffset+(t.boxWidth-t.lineWidths[m[u].line]),0,0);break;case 2:a.translate(m[u].animatorJustifyOffset+t.justifyOffset+(t.boxWidth-t.lineWidths[m[u].line])/2,0,0);break}a.translate(0,-t.ls),a.translate(K,0,0),a.translate(r[0]*m[u].an*.005,r[1]*F*.01,0),l+=m[u].l+t.tr*.001*t.finalSize;}n===\"html\"?Dt=a.toCSS():n===\"svg\"?Dt=a.to2dCSS():St=[a.props[0],a.props[1],a.props[2],a.props[3],a.props[4],a.props[5],a.props[6],a.props[7],a.props[8],a.props[9],a.props[10],a.props[11],a.props[12],a.props[13],a.props[14],a.props[15]],Et=mt;}o<=u?(O=new LetterProps(Et,Mt,Lt,It,Dt,St),this.renderedLetters.push(O),o+=1,this.lettersChangedFlag=!0):(O=this.renderedLetters[u],this.lettersChangedFlag=O.update(Et,Mt,Lt,It,Dt,St)||this.lettersChangedFlag);}}},TextAnimatorProperty.prototype.getValue=function(){this._elem.globalData.frameId!==this._frameId&&(this._frameId=this._elem.globalData.frameId,this.iterateDynamicProperties());},TextAnimatorProperty.prototype.mHelper=new Matrix,TextAnimatorProperty.prototype.defaultPropsArray=[],extendPrototype([DynamicPropertyContainer],TextAnimatorProperty);function ITextElement(){}ITextElement.prototype.initElement=function(t,e,r){this.lettersChangedFlag=!0,this.initFrame(),this.initBaseData(t,e,r),this.textProperty=new TextProperty(this,t.t,this.dynamicProperties),this.textAnimator=new TextAnimatorProperty(t.t,this.renderType,this),this.initTransform(t,e,r),this.initHierarchy(),this.initRenderable(),this.initRendererElement(),this.createContainerElements(),this.createRenderableComponents(),this.createContent(),this.hide(),this.textAnimator.searchProperties(this.dynamicProperties);},ITextElement.prototype.prepareFrame=function(t){this._mdf=!1,this.prepareRenderableFrame(t),this.prepareProperties(t,this.isInRange);},ITextElement.prototype.createPathShape=function(t,e){var r,i=e.length,s,a=\"\";for(r=0;r<i;r+=1)e[r].ty===\"sh\"&&(s=e[r].ks.k,a+=buildShapeString(s,s.i.length,!0,t));return a},ITextElement.prototype.updateDocumentData=function(t,e){this.textProperty.updateDocumentData(t,e);},ITextElement.prototype.canResizeFont=function(t){this.textProperty.canResizeFont(t);},ITextElement.prototype.setMinimumFontSize=function(t){this.textProperty.setMinimumFontSize(t);},ITextElement.prototype.applyTextPropertiesToMatrix=function(t,e,r,i,s){switch(t.ps&&e.translate(t.ps[0],t.ps[1]+t.ascent,0),e.translate(0,-t.ls,0),t.j){case 1:e.translate(t.justifyOffset+(t.boxWidth-t.lineWidths[r]),0,0);break;case 2:e.translate(t.justifyOffset+(t.boxWidth-t.lineWidths[r])/2,0,0);break}e.translate(i,s,0);},ITextElement.prototype.buildColor=function(t){return \"rgb(\"+Math.round(t[0]*255)+\",\"+Math.round(t[1]*255)+\",\"+Math.round(t[2]*255)+\")\"},ITextElement.prototype.emptyProp=new LetterProps,ITextElement.prototype.destroy=function(){},ITextElement.prototype.validateText=function(){(this.textProperty._mdf||this.textProperty._isFirstFrame)&&(this.buildNewText(),this.textProperty._isFirstFrame=!1,this.textProperty._mdf=!1);};var emptyShapeData={shapes:[]};function SVGTextLottieElement(t,e,r){this.textSpans=[],this.renderType=\"svg\",this.initElement(t,e,r);}extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement],SVGTextLottieElement),SVGTextLottieElement.prototype.createContent=function(){this.data.singleShape&&!this.globalData.fontManager.chars&&(this.textContainer=createNS(\"text\"));},SVGTextLottieElement.prototype.buildTextContents=function(t){for(var e=0,r=t.length,i=[],s=\"\";e<r;)t[e]===String.fromCharCode(13)||t[e]===String.fromCharCode(3)?(i.push(s),s=\"\"):s+=t[e],e+=1;return i.push(s),i},SVGTextLottieElement.prototype.buildShapeData=function(t,e){if(t.shapes&&t.shapes.length){var r=t.shapes[0];if(r.it){var i=r.it[r.it.length-1];i.s&&(i.s.k[0]=e,i.s.k[1]=e);}}return t},SVGTextLottieElement.prototype.buildNewText=function(){this.addDynamicProperty(this);var t,e,r=this.textProperty.currentData;this.renderedLetters=createSizedArray(r?r.l.length:0),r.fc?this.layerElement.setAttribute(\"fill\",this.buildColor(r.fc)):this.layerElement.setAttribute(\"fill\",\"rgba(0,0,0,0)\"),r.sc&&(this.layerElement.setAttribute(\"stroke\",this.buildColor(r.sc)),this.layerElement.setAttribute(\"stroke-width\",r.sw)),this.layerElement.setAttribute(\"font-size\",r.finalSize);var i=this.globalData.fontManager.getFontByName(r.f);if(i.fClass)this.layerElement.setAttribute(\"class\",i.fClass);else {this.layerElement.setAttribute(\"font-family\",i.fFamily);var s=r.fWeight,a=r.fStyle;this.layerElement.setAttribute(\"font-style\",a),this.layerElement.setAttribute(\"font-weight\",s);}this.layerElement.setAttribute(\"aria-label\",r.t);var n=r.l||[],o=!!this.globalData.fontManager.chars;e=n.length;var l,h=this.mHelper,u=\"\",f=this.data.singleShape,m=0,d=0,p=!0,c=r.tr*.001*r.finalSize;if(f&&!o&&!r.sz){var v=this.textContainer,y=\"start\";switch(r.j){case 1:y=\"end\";break;case 2:y=\"middle\";break;default:y=\"start\";break}v.setAttribute(\"text-anchor\",y),v.setAttribute(\"letter-spacing\",c);var g=this.buildTextContents(r.finalText);for(e=g.length,d=r.ps?r.ps[1]+r.ascent:0,t=0;t<e;t+=1)l=this.textSpans[t].span||createNS(\"tspan\"),l.textContent=g[t],l.setAttribute(\"x\",0),l.setAttribute(\"y\",d),l.style.display=\"inherit\",v.appendChild(l),this.textSpans[t]||(this.textSpans[t]={span:null,glyph:null}),this.textSpans[t].span=l,d+=r.finalLineHeight;this.layerElement.appendChild(v);}else {var b=this.textSpans.length,x;for(t=0;t<e;t+=1){if(this.textSpans[t]||(this.textSpans[t]={span:null,childSpan:null,glyph:null}),!o||!f||t===0){if(l=b>t?this.textSpans[t].span:createNS(o?\"g\":\"text\"),b<=t){if(l.setAttribute(\"stroke-linecap\",\"butt\"),l.setAttribute(\"stroke-linejoin\",\"round\"),l.setAttribute(\"stroke-miterlimit\",\"4\"),this.textSpans[t].span=l,o){var S=createNS(\"g\");l.appendChild(S),this.textSpans[t].childSpan=S;}this.textSpans[t].span=l,this.layerElement.appendChild(l);}l.style.display=\"inherit\";}if(h.reset(),f&&(n[t].n&&(m=-c,d+=r.yOffset,d+=p?1:0,p=!1),this.applyTextPropertiesToMatrix(r,h,n[t].line,m,d),m+=n[t].l||0,m+=c),o){x=this.globalData.fontManager.getCharData(r.finalText[t],i.fStyle,this.globalData.fontManager.getFontByName(r.f).fFamily);var C;if(x.t===1)C=new SVGCompElement(x.data,this.globalData,this);else {var _=emptyShapeData;x.data&&x.data.shapes&&(_=this.buildShapeData(x.data,r.finalSize)),C=new SVGShapeElement(_,this.globalData,this);}if(this.textSpans[t].glyph){var T=this.textSpans[t].glyph;this.textSpans[t].childSpan.removeChild(T.layerElement),T.destroy();}this.textSpans[t].glyph=C,C._debug=!0,C.prepareFrame(0),C.renderFrame(),this.textSpans[t].childSpan.appendChild(C.layerElement),x.t===1&&this.textSpans[t].childSpan.setAttribute(\"transform\",\"scale(\"+r.finalSize/100+\",\"+r.finalSize/100+\")\");}else f&&l.setAttribute(\"transform\",\"translate(\"+h.props[12]+\",\"+h.props[13]+\")\"),l.textContent=n[t].val,l.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\",\"xml:space\",\"preserve\");}f&&l&&l.setAttribute(\"d\",u);}for(;t<this.textSpans.length;)this.textSpans[t].span.style.display=\"none\",t+=1;this._sizeChanged=!0;},SVGTextLottieElement.prototype.sourceRectAtTime=function(){if(this.prepareFrame(this.comp.renderedFrame-this.data.st),this.renderInnerContent(),this._sizeChanged){this._sizeChanged=!1;var t=this.layerElement.getBBox();this.bbox={top:t.y,left:t.x,width:t.width,height:t.height};}return this.bbox},SVGTextLottieElement.prototype.getValue=function(){var t,e=this.textSpans.length,r;for(this.renderedFrame=this.comp.renderedFrame,t=0;t<e;t+=1)r=this.textSpans[t].glyph,r&&(r.prepareFrame(this.comp.renderedFrame-this.data.st),r._mdf&&(this._mdf=!0));},SVGTextLottieElement.prototype.renderInnerContent=function(){if(this.validateText(),(!this.data.singleShape||this._mdf)&&(this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag),this.lettersChangedFlag||this.textAnimator.lettersChangedFlag)){this._sizeChanged=!0;var t,e,r=this.textAnimator.renderedLetters,i=this.textProperty.currentData.l;e=i.length;var s,a,n;for(t=0;t<e;t+=1)i[t].n||(s=r[t],a=this.textSpans[t].span,n=this.textSpans[t].glyph,n&&n.renderFrame(),s._mdf.m&&a.setAttribute(\"transform\",s.m),s._mdf.o&&a.setAttribute(\"opacity\",s.o),s._mdf.sw&&a.setAttribute(\"stroke-width\",s.sw),s._mdf.sc&&a.setAttribute(\"stroke\",s.sc),s._mdf.fc&&a.setAttribute(\"fill\",s.fc));}};function ISolidElement(t,e,r){this.initElement(t,e,r);}extendPrototype([IImageElement],ISolidElement),ISolidElement.prototype.createContent=function(){var t=createNS(\"rect\");t.setAttribute(\"width\",this.data.sw),t.setAttribute(\"height\",this.data.sh),t.setAttribute(\"fill\",this.data.sc),this.layerElement.appendChild(t);};function NullElement(t,e,r){this.initFrame(),this.initBaseData(t,e,r),this.initFrame(),this.initTransform(t,e,r),this.initHierarchy();}NullElement.prototype.prepareFrame=function(t){this.prepareProperties(t,!0);},NullElement.prototype.renderFrame=function(){},NullElement.prototype.getBaseElement=function(){return null},NullElement.prototype.destroy=function(){},NullElement.prototype.sourceRectAtTime=function(){},NullElement.prototype.hide=function(){},extendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement],NullElement);function SVGRendererBase(){}extendPrototype([BaseRenderer],SVGRendererBase),SVGRendererBase.prototype.createNull=function(t){return new NullElement(t,this.globalData,this)},SVGRendererBase.prototype.createShape=function(t){return new SVGShapeElement(t,this.globalData,this)},SVGRendererBase.prototype.createText=function(t){return new SVGTextLottieElement(t,this.globalData,this)},SVGRendererBase.prototype.createImage=function(t){return new IImageElement(t,this.globalData,this)},SVGRendererBase.prototype.createSolid=function(t){return new ISolidElement(t,this.globalData,this)},SVGRendererBase.prototype.configAnimation=function(t){this.svgElement.setAttribute(\"xmlns\",\"http://www.w3.org/2000/svg\"),this.svgElement.setAttribute(\"xmlns:xlink\",\"http://www.w3.org/1999/xlink\"),this.renderConfig.viewBoxSize?this.svgElement.setAttribute(\"viewBox\",this.renderConfig.viewBoxSize):this.svgElement.setAttribute(\"viewBox\",\"0 0 \"+t.w+\" \"+t.h),this.renderConfig.viewBoxOnly||(this.svgElement.setAttribute(\"width\",t.w),this.svgElement.setAttribute(\"height\",t.h),this.svgElement.style.width=\"100%\",this.svgElement.style.height=\"100%\",this.svgElement.style.transform=\"translate3d(0,0,0)\",this.svgElement.style.contentVisibility=this.renderConfig.contentVisibility),this.renderConfig.width&&this.svgElement.setAttribute(\"width\",this.renderConfig.width),this.renderConfig.height&&this.svgElement.setAttribute(\"height\",this.renderConfig.height),this.renderConfig.className&&this.svgElement.setAttribute(\"class\",this.renderConfig.className),this.renderConfig.id&&this.svgElement.setAttribute(\"id\",this.renderConfig.id),this.renderConfig.focusable!==void 0&&this.svgElement.setAttribute(\"focusable\",this.renderConfig.focusable),this.svgElement.setAttribute(\"preserveAspectRatio\",this.renderConfig.preserveAspectRatio),this.animationItem.wrapper.appendChild(this.svgElement);var e=this.globalData.defs;this.setupGlobalData(t,e),this.globalData.progressiveLoad=this.renderConfig.progressiveLoad,this.data=t;var r=createNS(\"clipPath\"),i=createNS(\"rect\");i.setAttribute(\"width\",t.w),i.setAttribute(\"height\",t.h),i.setAttribute(\"x\",0),i.setAttribute(\"y\",0);var s=createElementID();r.setAttribute(\"id\",s),r.appendChild(i),this.layerElement.setAttribute(\"clip-path\",\"url(\"+getLocationHref()+\"#\"+s+\")\"),e.appendChild(r),this.layers=t.layers,this.elements=createSizedArray(t.layers.length);},SVGRendererBase.prototype.destroy=function(){this.animationItem.wrapper&&(this.animationItem.wrapper.innerText=\"\"),this.layerElement=null,this.globalData.defs=null;var t,e=this.layers?this.layers.length:0;for(t=0;t<e;t+=1)this.elements[t]&&this.elements[t].destroy&&this.elements[t].destroy();this.elements.length=0,this.destroyed=!0,this.animationItem=null;},SVGRendererBase.prototype.updateContainerSize=function(){},SVGRendererBase.prototype.findIndexByInd=function(t){var e=0,r=this.layers.length;for(e=0;e<r;e+=1)if(this.layers[e].ind===t)return e;return -1},SVGRendererBase.prototype.buildItem=function(t){var e=this.elements;if(!(e[t]||this.layers[t].ty===99)){e[t]=!0;var r=this.createItem(this.layers[t]);if(e[t]=r,getExpressionsPlugin()&&(this.layers[t].ty===0&&this.globalData.projectInterface.registerComposition(r),r.initExpressions()),this.appendElementInPos(r,t),this.layers[t].tt){var i=\"tp\"in this.layers[t]?this.findIndexByInd(this.layers[t].tp):t-1;if(i===-1)return;if(!this.elements[i]||this.elements[i]===!0)this.buildItem(i),this.addPendingElement(r);else {var s=e[i],a=s.getMatte(this.layers[t].tt);r.setMatte(a);}}}},SVGRendererBase.prototype.checkPendingElements=function(){for(;this.pendingElements.length;){var t=this.pendingElements.pop();if(t.checkParenting(),t.data.tt)for(var e=0,r=this.elements.length;e<r;){if(this.elements[e]===t){var i=\"tp\"in t.data?this.findIndexByInd(t.data.tp):e-1,s=this.elements[i],a=s.getMatte(this.layers[e].tt);t.setMatte(a);break}e+=1;}}},SVGRendererBase.prototype.renderFrame=function(t){if(!(this.renderedFrame===t||this.destroyed)){t===null?t=this.renderedFrame:this.renderedFrame=t,this.globalData.frameNum=t,this.globalData.frameId+=1,this.globalData.projectInterface.currentFrame=t,this.globalData._mdf=!1;var e,r=this.layers.length;for(this.completeLayers||this.checkLayers(t),e=r-1;e>=0;e-=1)(this.completeLayers||this.elements[e])&&this.elements[e].prepareFrame(t-this.layers[e].st);if(this.globalData._mdf)for(e=0;e<r;e+=1)(this.completeLayers||this.elements[e])&&this.elements[e].renderFrame();}},SVGRendererBase.prototype.appendElementInPos=function(t,e){var r=t.getBaseElement();if(r){for(var i=0,s;i<e;)this.elements[i]&&this.elements[i]!==!0&&this.elements[i].getBaseElement()&&(s=this.elements[i].getBaseElement()),i+=1;s?this.layerElement.insertBefore(r,s):this.layerElement.appendChild(r);}},SVGRendererBase.prototype.hide=function(){this.layerElement.style.display=\"none\";},SVGRendererBase.prototype.show=function(){this.layerElement.style.display=\"block\";};function ICompElement(){}extendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement,RenderableDOMElement],ICompElement),ICompElement.prototype.initElement=function(t,e,r){this.initFrame(),this.initBaseData(t,e,r),this.initTransform(t,e,r),this.initRenderable(),this.initHierarchy(),this.initRendererElement(),this.createContainerElements(),this.createRenderableComponents(),(this.data.xt||!e.progressiveLoad)&&this.buildAllItems(),this.hide();},ICompElement.prototype.prepareFrame=function(t){if(this._mdf=!1,this.prepareRenderableFrame(t),this.prepareProperties(t,this.isInRange),!(!this.isInRange&&!this.data.xt)){if(this.tm._placeholder)this.renderedFrame=t/this.data.sr;else {var e=this.tm.v;e===this.data.op&&(e=this.data.op-1),this.renderedFrame=e;}var r,i=this.elements.length;for(this.completeLayers||this.checkLayers(this.renderedFrame),r=i-1;r>=0;r-=1)(this.completeLayers||this.elements[r])&&(this.elements[r].prepareFrame(this.renderedFrame-this.layers[r].st),this.elements[r]._mdf&&(this._mdf=!0));}},ICompElement.prototype.renderInnerContent=function(){var t,e=this.layers.length;for(t=0;t<e;t+=1)(this.completeLayers||this.elements[t])&&this.elements[t].renderFrame();},ICompElement.prototype.setElements=function(t){this.elements=t;},ICompElement.prototype.getElements=function(){return this.elements},ICompElement.prototype.destroyElements=function(){var t,e=this.layers.length;for(t=0;t<e;t+=1)this.elements[t]&&this.elements[t].destroy();},ICompElement.prototype.destroy=function(){this.destroyElements(),this.destroyBaseElement();};function SVGCompElement(t,e,r){this.layers=t.layers,this.supports3d=!0,this.completeLayers=!1,this.pendingElements=[],this.elements=this.layers?createSizedArray(this.layers.length):[],this.initElement(t,e,r),this.tm=t.tm?PropertyFactory.getProp(this,t.tm,0,e.frameRate,this):{_placeholder:!0};}extendPrototype([SVGRendererBase,ICompElement,SVGBaseElement],SVGCompElement),SVGCompElement.prototype.createComp=function(t){return new SVGCompElement(t,this.globalData,this)};function SVGRenderer(t,e){this.animationItem=t,this.layers=null,this.renderedFrame=-1,this.svgElement=createNS(\"svg\");var r=\"\";if(e&&e.title){var i=createNS(\"title\"),s=createElementID();i.setAttribute(\"id\",s),i.textContent=e.title,this.svgElement.appendChild(i),r+=s;}if(e&&e.description){var a=createNS(\"desc\"),n=createElementID();a.setAttribute(\"id\",n),a.textContent=e.description,this.svgElement.appendChild(a),r+=\" \"+n;}r&&this.svgElement.setAttribute(\"aria-labelledby\",r);var o=createNS(\"defs\");this.svgElement.appendChild(o);var l=createNS(\"g\");this.svgElement.appendChild(l),this.layerElement=l,this.renderConfig={preserveAspectRatio:e&&e.preserveAspectRatio||\"xMidYMid meet\",imagePreserveAspectRatio:e&&e.imagePreserveAspectRatio||\"xMidYMid slice\",contentVisibility:e&&e.contentVisibility||\"visible\",progressiveLoad:e&&e.progressiveLoad||!1,hideOnTransparent:!(e&&e.hideOnTransparent===!1),viewBoxOnly:e&&e.viewBoxOnly||!1,viewBoxSize:e&&e.viewBoxSize||!1,className:e&&e.className||\"\",id:e&&e.id||\"\",focusable:e&&e.focusable,filterSize:{width:e&&e.filterSize&&e.filterSize.width||\"100%\",height:e&&e.filterSize&&e.filterSize.height||\"100%\",x:e&&e.filterSize&&e.filterSize.x||\"0%\",y:e&&e.filterSize&&e.filterSize.y||\"0%\"},width:e&&e.width,height:e&&e.height,runExpressions:!e||e.runExpressions===void 0||e.runExpressions},this.globalData={_mdf:!1,frameNum:-1,defs:o,renderConfig:this.renderConfig},this.elements=[],this.pendingElements=[],this.destroyed=!1,this.rendererType=\"svg\";}extendPrototype([SVGRendererBase],SVGRenderer),SVGRenderer.prototype.createComp=function(t){return new SVGCompElement(t,this.globalData,this)};function ShapeTransformManager(){this.sequences={},this.sequenceList=[],this.transform_key_count=0;}ShapeTransformManager.prototype={addTransformSequence:function(t){var e,r=t.length,i=\"_\";for(e=0;e<r;e+=1)i+=t[e].transform.key+\"_\";var s=this.sequences[i];return s||(s={transforms:[].concat(t),finalTransform:new Matrix,_mdf:!1},this.sequences[i]=s,this.sequenceList.push(s)),s},processSequence:function(t,e){for(var r=0,i=t.transforms.length,s=e;r<i&&!e;){if(t.transforms[r].transform.mProps._mdf){s=!0;break}r+=1;}if(s)for(t.finalTransform.reset(),r=i-1;r>=0;r-=1)t.finalTransform.multiply(t.transforms[r].transform.mProps.v);t._mdf=s;},processSequences:function(t){var e,r=this.sequenceList.length;for(e=0;e<r;e+=1)this.processSequence(this.sequenceList[e],t);},getNewKey:function(){return this.transform_key_count+=1,\"_\"+this.transform_key_count}};var lumaLoader=function(){var t=\"__lottie_element_luma_buffer\",e=null,r=null,i=null;function s(){var o=createNS(\"svg\"),l=createNS(\"filter\"),h=createNS(\"feColorMatrix\");return l.setAttribute(\"id\",t),h.setAttribute(\"type\",\"matrix\"),h.setAttribute(\"color-interpolation-filters\",\"sRGB\"),h.setAttribute(\"values\",\"0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0\"),l.appendChild(h),o.appendChild(l),o.setAttribute(\"id\",t+\"_svg\"),featureSupport.svgLumaHidden&&(o.style.display=\"none\"),o}function a(){e||(i=s(),document.body.appendChild(i),e=createTag(\"canvas\"),r=e.getContext(\"2d\"),r.filter=\"url(#\"+t+\")\",r.fillStyle=\"rgba(0,0,0,0)\",r.fillRect(0,0,1,1));}function n(o){return e||a(),e.width=o.width,e.height=o.height,r.filter=\"url(#\"+t+\")\",e}return {load:a,get:n}};function createCanvas(t,e){if(featureSupport.offscreenCanvas)return new OffscreenCanvas(t,e);var r=createTag(\"canvas\");return r.width=t,r.height=e,r}var assetLoader=function(){return {loadLumaCanvas:lumaLoader.load,getLumaCanvas:lumaLoader.get,createCanvas}}(),registeredEffects={};function CVEffects(t){var e,r=t.data.ef?t.data.ef.length:0;this.filters=[];var i;for(e=0;e<r;e+=1){i=null;var s=t.data.ef[e].ty;if(registeredEffects[s]){var a=registeredEffects[s].effect;i=new a(t.effectsManager.effectElements[e],t);}i&&this.filters.push(i);}this.filters.length&&t.addRenderableComponent(this);}CVEffects.prototype.renderFrame=function(t){var e,r=this.filters.length;for(e=0;e<r;e+=1)this.filters[e].renderFrame(t);},CVEffects.prototype.getEffects=function(t){var e,r=this.filters.length,i=[];for(e=0;e<r;e+=1)this.filters[e].type===t&&i.push(this.filters[e]);return i};function registerEffect(t,e){registeredEffects[t]={effect:e};}function CVMaskElement(t,e){this.data=t,this.element=e,this.masksProperties=this.data.masksProperties||[],this.viewData=createSizedArray(this.masksProperties.length);var r,i=this.masksProperties.length,s=!1;for(r=0;r<i;r+=1)this.masksProperties[r].mode!==\"n\"&&(s=!0),this.viewData[r]=ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[r],3);this.hasMasks=s,s&&this.element.addRenderableComponent(this);}CVMaskElement.prototype.renderFrame=function(){if(this.hasMasks){var t=this.element.finalTransform.mat,e=this.element.canvasContext,r,i=this.masksProperties.length,s,a,n;for(e.beginPath(),r=0;r<i;r+=1)if(this.masksProperties[r].mode!==\"n\"){this.masksProperties[r].inv&&(e.moveTo(0,0),e.lineTo(this.element.globalData.compSize.w,0),e.lineTo(this.element.globalData.compSize.w,this.element.globalData.compSize.h),e.lineTo(0,this.element.globalData.compSize.h),e.lineTo(0,0)),n=this.viewData[r].v,s=t.applyToPointArray(n.v[0][0],n.v[0][1],0),e.moveTo(s[0],s[1]);var o,l=n._length;for(o=1;o<l;o+=1)a=t.applyToTriplePoints(n.o[o-1],n.i[o],n.v[o]),e.bezierCurveTo(a[0],a[1],a[2],a[3],a[4],a[5]);a=t.applyToTriplePoints(n.o[o-1],n.i[0],n.v[0]),e.bezierCurveTo(a[0],a[1],a[2],a[3],a[4],a[5]);}this.element.globalData.renderer.save(!0),e.clip();}},CVMaskElement.prototype.getMaskProperty=MaskElement.prototype.getMaskProperty,CVMaskElement.prototype.destroy=function(){this.element=null;};function CVBaseElement(){}var operationsMap={1:\"source-in\",2:\"source-out\",3:\"source-in\",4:\"source-out\"};CVBaseElement.prototype={createElements:function(){},initRendererElement:function(){},createContainerElements:function(){if(this.data.tt>=1){this.buffers=[];var t=this.globalData.canvasContext,e=assetLoader.createCanvas(t.canvas.width,t.canvas.height);this.buffers.push(e);var r=assetLoader.createCanvas(t.canvas.width,t.canvas.height);this.buffers.push(r),this.data.tt>=3&&!document._isProxy&&assetLoader.loadLumaCanvas();}this.canvasContext=this.globalData.canvasContext,this.transformCanvas=this.globalData.transformCanvas,this.renderableEffectsManager=new CVEffects(this),this.searchEffectTransforms();},createContent:function(){},setBlendMode:function(){var t=this.globalData;if(t.blendMode!==this.data.bm){t.blendMode=this.data.bm;var e=getBlendMode(this.data.bm);t.canvasContext.globalCompositeOperation=e;}},createRenderableComponents:function(){this.maskManager=new CVMaskElement(this.data,this),this.transformEffects=this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);},hideElement:function(){!this.hidden&&(!this.isInRange||this.isTransparent)&&(this.hidden=!0);},showElement:function(){this.isInRange&&!this.isTransparent&&(this.hidden=!1,this._isFirstFrame=!0,this.maskManager._isFirstFrame=!0);},clearCanvas:function(t){t.clearRect(this.transformCanvas.tx,this.transformCanvas.ty,this.transformCanvas.w*this.transformCanvas.sx,this.transformCanvas.h*this.transformCanvas.sy);},prepareLayer:function(){if(this.data.tt>=1){var t=this.buffers[0],e=t.getContext(\"2d\");this.clearCanvas(e),e.drawImage(this.canvasContext.canvas,0,0),this.currentTransform=this.canvasContext.getTransform(),this.canvasContext.setTransform(1,0,0,1,0,0),this.clearCanvas(this.canvasContext),this.canvasContext.setTransform(this.currentTransform);}},exitLayer:function(){if(this.data.tt>=1){var t=this.buffers[1],e=t.getContext(\"2d\");this.clearCanvas(e),e.drawImage(this.canvasContext.canvas,0,0),this.canvasContext.setTransform(1,0,0,1,0,0),this.clearCanvas(this.canvasContext),this.canvasContext.setTransform(this.currentTransform);var r=this.comp.getElementById(\"tp\"in this.data?this.data.tp:this.data.ind-1);if(r.renderFrame(!0),this.canvasContext.setTransform(1,0,0,1,0,0),this.data.tt>=3&&!document._isProxy){var i=assetLoader.getLumaCanvas(this.canvasContext.canvas),s=i.getContext(\"2d\");s.drawImage(this.canvasContext.canvas,0,0),this.clearCanvas(this.canvasContext),this.canvasContext.drawImage(i,0,0);}this.canvasContext.globalCompositeOperation=operationsMap[this.data.tt],this.canvasContext.drawImage(t,0,0),this.canvasContext.globalCompositeOperation=\"destination-over\",this.canvasContext.drawImage(this.buffers[0],0,0),this.canvasContext.setTransform(this.currentTransform),this.canvasContext.globalCompositeOperation=\"source-over\";}},renderFrame:function(t){if(!(this.hidden||this.data.hd)&&!(this.data.td===1&&!t)){this.renderTransform(),this.renderRenderable(),this.renderLocalTransform(),this.setBlendMode();var e=this.data.ty===0;this.prepareLayer(),this.globalData.renderer.save(e),this.globalData.renderer.ctxTransform(this.finalTransform.localMat.props),this.globalData.renderer.ctxOpacity(this.finalTransform.localOpacity),this.renderInnerContent(),this.globalData.renderer.restore(e),this.exitLayer(),this.maskManager.hasMasks&&this.globalData.renderer.restore(!0),this._isFirstFrame&&(this._isFirstFrame=!1);}},destroy:function(){this.canvasContext=null,this.data=null,this.globalData=null,this.maskManager.destroy();},mHelper:new Matrix},CVBaseElement.prototype.hide=CVBaseElement.prototype.hideElement,CVBaseElement.prototype.show=CVBaseElement.prototype.showElement;function CVShapeData(t,e,r,i){this.styledShapes=[],this.tr=[0,0,0,0,0,0];var s=4;e.ty===\"rc\"?s=5:e.ty===\"el\"?s=6:e.ty===\"sr\"&&(s=7),this.sh=ShapePropertyFactory.getShapeProp(t,e,s,t);var a,n=r.length,o;for(a=0;a<n;a+=1)r[a].closed||(o={transforms:i.addTransformSequence(r[a].transforms),trNodes:[]},this.styledShapes.push(o),r[a].elements.push(o));}CVShapeData.prototype.setAsAnimated=SVGShapeData.prototype.setAsAnimated;function CVShapeElement(t,e,r){this.shapes=[],this.shapesData=t.shapes,this.stylesList=[],this.itemsData=[],this.prevViewData=[],this.shapeModifiers=[],this.processedElements=[],this.transformsManager=new ShapeTransformManager,this.initElement(t,e,r);}extendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement],CVShapeElement),CVShapeElement.prototype.initElement=RenderableDOMElement.prototype.initElement,CVShapeElement.prototype.transformHelper={opacity:1,_opMdf:!1},CVShapeElement.prototype.dashResetter=[],CVShapeElement.prototype.createContent=function(){this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,!0,[]);},CVShapeElement.prototype.createStyleElement=function(t,e){var r={data:t,type:t.ty,preTransforms:this.transformsManager.addTransformSequence(e),transforms:[],elements:[],closed:t.hd===!0},i={};if(t.ty===\"fl\"||t.ty===\"st\"?(i.c=PropertyFactory.getProp(this,t.c,1,255,this),i.c.k||(r.co=\"rgb(\"+bmFloor(i.c.v[0])+\",\"+bmFloor(i.c.v[1])+\",\"+bmFloor(i.c.v[2])+\")\")):(t.ty===\"gf\"||t.ty===\"gs\")&&(i.s=PropertyFactory.getProp(this,t.s,1,null,this),i.e=PropertyFactory.getProp(this,t.e,1,null,this),i.h=PropertyFactory.getProp(this,t.h||{k:0},0,.01,this),i.a=PropertyFactory.getProp(this,t.a||{k:0},0,degToRads,this),i.g=new GradientProperty(this,t.g,this)),i.o=PropertyFactory.getProp(this,t.o,0,.01,this),t.ty===\"st\"||t.ty===\"gs\"){if(r.lc=lineCapEnum[t.lc||2],r.lj=lineJoinEnum[t.lj||2],t.lj==1&&(r.ml=t.ml),i.w=PropertyFactory.getProp(this,t.w,0,null,this),i.w.k||(r.wi=i.w.v),t.d){var s=new DashProperty(this,t.d,\"canvas\",this);i.d=s,i.d.k||(r.da=i.d.dashArray,r.do=i.d.dashoffset[0]);}}else r.r=t.r===2?\"evenodd\":\"nonzero\";return this.stylesList.push(r),i.style=r,i},CVShapeElement.prototype.createGroupElement=function(){var t={it:[],prevViewData:[]};return t},CVShapeElement.prototype.createTransformElement=function(t){var e={transform:{opacity:1,_opMdf:!1,key:this.transformsManager.getNewKey(),op:PropertyFactory.getProp(this,t.o,0,.01,this),mProps:TransformPropertyFactory.getTransformProperty(this,t,this)}};return e},CVShapeElement.prototype.createShapeElement=function(t){var e=new CVShapeData(this,t,this.stylesList,this.transformsManager);return this.shapes.push(e),this.addShapeToModifiers(e),e},CVShapeElement.prototype.reloadShapes=function(){this._isFirstFrame=!0;var t,e=this.itemsData.length;for(t=0;t<e;t+=1)this.prevViewData[t]=this.itemsData[t];for(this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,!0,[]),e=this.dynamicProperties.length,t=0;t<e;t+=1)this.dynamicProperties[t].getValue();this.renderModifiers(),this.transformsManager.processSequences(this._isFirstFrame);},CVShapeElement.prototype.addTransformToStyleList=function(t){var e,r=this.stylesList.length;for(e=0;e<r;e+=1)this.stylesList[e].closed||this.stylesList[e].transforms.push(t);},CVShapeElement.prototype.removeTransformFromStyleList=function(){var t,e=this.stylesList.length;for(t=0;t<e;t+=1)this.stylesList[t].closed||this.stylesList[t].transforms.pop();},CVShapeElement.prototype.closeStyles=function(t){var e,r=t.length;for(e=0;e<r;e+=1)t[e].closed=!0;},CVShapeElement.prototype.searchShapes=function(t,e,r,i,s){var a,n=t.length-1,o,l,h=[],u=[],f,m,d,p=[].concat(s);for(a=n;a>=0;a-=1){if(f=this.searchProcessedElement(t[a]),f?e[a]=r[f-1]:t[a]._shouldRender=i,t[a].ty===\"fl\"||t[a].ty===\"st\"||t[a].ty===\"gf\"||t[a].ty===\"gs\")f?e[a].style.closed=!1:e[a]=this.createStyleElement(t[a],p),h.push(e[a].style);else if(t[a].ty===\"gr\"){if(!f)e[a]=this.createGroupElement(t[a]);else for(l=e[a].it.length,o=0;o<l;o+=1)e[a].prevViewData[o]=e[a].it[o];this.searchShapes(t[a].it,e[a].it,e[a].prevViewData,i,p);}else t[a].ty===\"tr\"?(f||(d=this.createTransformElement(t[a]),e[a]=d),p.push(e[a]),this.addTransformToStyleList(e[a])):t[a].ty===\"sh\"||t[a].ty===\"rc\"||t[a].ty===\"el\"||t[a].ty===\"sr\"?f||(e[a]=this.createShapeElement(t[a])):t[a].ty===\"tm\"||t[a].ty===\"rd\"||t[a].ty===\"pb\"||t[a].ty===\"zz\"||t[a].ty===\"op\"?(f?(m=e[a],m.closed=!1):(m=ShapeModifiers.getModifier(t[a].ty),m.init(this,t[a]),e[a]=m,this.shapeModifiers.push(m)),u.push(m)):t[a].ty===\"rp\"&&(f?(m=e[a],m.closed=!0):(m=ShapeModifiers.getModifier(t[a].ty),e[a]=m,m.init(this,t,a,e),this.shapeModifiers.push(m),i=!1),u.push(m));this.addProcessedElement(t[a],a+1);}for(this.removeTransformFromStyleList(),this.closeStyles(h),n=u.length,a=0;a<n;a+=1)u[a].closed=!0;},CVShapeElement.prototype.renderInnerContent=function(){this.transformHelper.opacity=1,this.transformHelper._opMdf=!1,this.renderModifiers(),this.transformsManager.processSequences(this._isFirstFrame),this.renderShape(this.transformHelper,this.shapesData,this.itemsData,!0);},CVShapeElement.prototype.renderShapeTransform=function(t,e){(t._opMdf||e.op._mdf||this._isFirstFrame)&&(e.opacity=t.opacity,e.opacity*=e.op.v,e._opMdf=!0);},CVShapeElement.prototype.drawLayer=function(){var t,e=this.stylesList.length,r,i,s,a,n,o,l=this.globalData.renderer,h=this.globalData.canvasContext,u,f;for(t=0;t<e;t+=1)if(f=this.stylesList[t],u=f.type,!((u===\"st\"||u===\"gs\")&&f.wi===0||!f.data._shouldRender||f.coOp===0||this.globalData.currentGlobalAlpha===0)){for(l.save(),n=f.elements,u===\"st\"||u===\"gs\"?(l.ctxStrokeStyle(u===\"st\"?f.co:f.grd),l.ctxLineWidth(f.wi),l.ctxLineCap(f.lc),l.ctxLineJoin(f.lj),l.ctxMiterLimit(f.ml||0)):l.ctxFillStyle(u===\"fl\"?f.co:f.grd),l.ctxOpacity(f.coOp),u!==\"st\"&&u!==\"gs\"&&h.beginPath(),l.ctxTransform(f.preTransforms.finalTransform.props),i=n.length,r=0;r<i;r+=1){for((u===\"st\"||u===\"gs\")&&(h.beginPath(),f.da&&(h.setLineDash(f.da),h.lineDashOffset=f.do)),o=n[r].trNodes,a=o.length,s=0;s<a;s+=1)o[s].t===\"m\"?h.moveTo(o[s].p[0],o[s].p[1]):o[s].t===\"c\"?h.bezierCurveTo(o[s].pts[0],o[s].pts[1],o[s].pts[2],o[s].pts[3],o[s].pts[4],o[s].pts[5]):h.closePath();(u===\"st\"||u===\"gs\")&&(l.ctxStroke(),f.da&&h.setLineDash(this.dashResetter));}u!==\"st\"&&u!==\"gs\"&&this.globalData.renderer.ctxFill(f.r),l.restore();}},CVShapeElement.prototype.renderShape=function(t,e,r,i){var s,a=e.length-1,n;for(n=t,s=a;s>=0;s-=1)e[s].ty===\"tr\"?(n=r[s].transform,this.renderShapeTransform(t,n)):e[s].ty===\"sh\"||e[s].ty===\"el\"||e[s].ty===\"rc\"||e[s].ty===\"sr\"?this.renderPath(e[s],r[s]):e[s].ty===\"fl\"?this.renderFill(e[s],r[s],n):e[s].ty===\"st\"?this.renderStroke(e[s],r[s],n):e[s].ty===\"gf\"||e[s].ty===\"gs\"?this.renderGradientFill(e[s],r[s],n):e[s].ty===\"gr\"?this.renderShape(n,e[s].it,r[s].it):e[s].ty;i&&this.drawLayer();},CVShapeElement.prototype.renderStyledShape=function(t,e){if(this._isFirstFrame||e._mdf||t.transforms._mdf){var r=t.trNodes,i=e.paths,s,a,n,o=i._length;r.length=0;var l=t.transforms.finalTransform;for(n=0;n<o;n+=1){var h=i.shapes[n];if(h&&h.v){for(a=h._length,s=1;s<a;s+=1)s===1&&r.push({t:\"m\",p:l.applyToPointArray(h.v[0][0],h.v[0][1],0)}),r.push({t:\"c\",pts:l.applyToTriplePoints(h.o[s-1],h.i[s],h.v[s])});a===1&&r.push({t:\"m\",p:l.applyToPointArray(h.v[0][0],h.v[0][1],0)}),h.c&&a&&(r.push({t:\"c\",pts:l.applyToTriplePoints(h.o[s-1],h.i[0],h.v[0])}),r.push({t:\"z\"}));}}t.trNodes=r;}},CVShapeElement.prototype.renderPath=function(t,e){if(t.hd!==!0&&t._shouldRender){var r,i=e.styledShapes.length;for(r=0;r<i;r+=1)this.renderStyledShape(e.styledShapes[r],e.sh);}},CVShapeElement.prototype.renderFill=function(t,e,r){var i=e.style;(e.c._mdf||this._isFirstFrame)&&(i.co=\"rgb(\"+bmFloor(e.c.v[0])+\",\"+bmFloor(e.c.v[1])+\",\"+bmFloor(e.c.v[2])+\")\"),(e.o._mdf||r._opMdf||this._isFirstFrame)&&(i.coOp=e.o.v*r.opacity);},CVShapeElement.prototype.renderGradientFill=function(t,e,r){var i=e.style,s;if(!i.grd||e.g._mdf||e.s._mdf||e.e._mdf||t.t!==1&&(e.h._mdf||e.a._mdf)){var a=this.globalData.canvasContext,n=e.s.v,o=e.e.v;if(t.t===1)s=a.createLinearGradient(n[0],n[1],o[0],o[1]);else {var l=Math.sqrt(Math.pow(n[0]-o[0],2)+Math.pow(n[1]-o[1],2)),h=Math.atan2(o[1]-n[1],o[0]-n[0]),u=e.h.v;u>=1?u=.99:u<=-1&&(u=-.99);var f=l*u,m=Math.cos(h+e.a.v)*f+n[0],d=Math.sin(h+e.a.v)*f+n[1];s=a.createRadialGradient(m,d,0,n[0],n[1],l);}var p,c=t.g.p,v=e.g.c,y=1;for(p=0;p<c;p+=1)e.g._hasOpacity&&e.g._collapsable&&(y=e.g.o[p*2+1]),s.addColorStop(v[p*4]/100,\"rgba(\"+v[p*4+1]+\",\"+v[p*4+2]+\",\"+v[p*4+3]+\",\"+y+\")\");i.grd=s;}i.coOp=e.o.v*r.opacity;},CVShapeElement.prototype.renderStroke=function(t,e,r){var i=e.style,s=e.d;s&&(s._mdf||this._isFirstFrame)&&(i.da=s.dashArray,i.do=s.dashoffset[0]),(e.c._mdf||this._isFirstFrame)&&(i.co=\"rgb(\"+bmFloor(e.c.v[0])+\",\"+bmFloor(e.c.v[1])+\",\"+bmFloor(e.c.v[2])+\")\"),(e.o._mdf||r._opMdf||this._isFirstFrame)&&(i.coOp=e.o.v*r.opacity),(e.w._mdf||this._isFirstFrame)&&(i.wi=e.w.v);},CVShapeElement.prototype.destroy=function(){this.shapesData=null,this.globalData=null,this.canvasContext=null,this.stylesList.length=0,this.itemsData.length=0;};function CVTextElement(t,e,r){this.textSpans=[],this.yOffset=0,this.fillColorAnim=!1,this.strokeColorAnim=!1,this.strokeWidthAnim=!1,this.stroke=!1,this.fill=!1,this.justifyOffset=0,this.currentRender=null,this.renderType=\"canvas\",this.values={fill:\"rgba(0,0,0,0)\",stroke:\"rgba(0,0,0,0)\",sWidth:0,fValue:\"\"},this.initElement(t,e,r);}extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement],CVTextElement),CVTextElement.prototype.tHelper=createTag(\"canvas\").getContext(\"2d\"),CVTextElement.prototype.buildNewText=function(){var t=this.textProperty.currentData;this.renderedLetters=createSizedArray(t.l?t.l.length:0);var e=!1;t.fc?(e=!0,this.values.fill=this.buildColor(t.fc)):this.values.fill=\"rgba(0,0,0,0)\",this.fill=e;var r=!1;t.sc&&(r=!0,this.values.stroke=this.buildColor(t.sc),this.values.sWidth=t.sw);var i=this.globalData.fontManager.getFontByName(t.f),s,a,n=t.l,o=this.mHelper;this.stroke=r,this.values.fValue=t.finalSize+\"px \"+this.globalData.fontManager.getFontByName(t.f).fFamily,a=t.finalText.length;var l,h,u,f,m,d,p,c,v,y,g=this.data.singleShape,b=t.tr*.001*t.finalSize,x=0,S=0,C=!0,_=0;for(s=0;s<a;s+=1){l=this.globalData.fontManager.getCharData(t.finalText[s],i.fStyle,this.globalData.fontManager.getFontByName(t.f).fFamily),h=l&&l.data||{},o.reset(),g&&n[s].n&&(x=-b,S+=t.yOffset,S+=C?1:0,C=!1),m=h.shapes?h.shapes[0].it:[],p=m.length,o.scale(t.finalSize/100,t.finalSize/100),g&&this.applyTextPropertiesToMatrix(t,o,n[s].line,x,S),v=createSizedArray(p-1);var T=0;for(d=0;d<p;d+=1)if(m[d].ty===\"sh\"){for(f=m[d].ks.k.i.length,c=m[d].ks.k,y=[],u=1;u<f;u+=1)u===1&&y.push(o.applyToX(c.v[0][0],c.v[0][1],0),o.applyToY(c.v[0][0],c.v[0][1],0)),y.push(o.applyToX(c.o[u-1][0],c.o[u-1][1],0),o.applyToY(c.o[u-1][0],c.o[u-1][1],0),o.applyToX(c.i[u][0],c.i[u][1],0),o.applyToY(c.i[u][0],c.i[u][1],0),o.applyToX(c.v[u][0],c.v[u][1],0),o.applyToY(c.v[u][0],c.v[u][1],0));y.push(o.applyToX(c.o[u-1][0],c.o[u-1][1],0),o.applyToY(c.o[u-1][0],c.o[u-1][1],0),o.applyToX(c.i[0][0],c.i[0][1],0),o.applyToY(c.i[0][0],c.i[0][1],0),o.applyToX(c.v[0][0],c.v[0][1],0),o.applyToY(c.v[0][0],c.v[0][1],0)),v[T]=y,T+=1;}g&&(x+=n[s].l,x+=b),this.textSpans[_]?this.textSpans[_].elem=v:this.textSpans[_]={elem:v},_+=1;}},CVTextElement.prototype.renderInnerContent=function(){this.validateText();var t=this.canvasContext;t.font=this.values.fValue,this.globalData.renderer.ctxLineCap(\"butt\"),this.globalData.renderer.ctxLineJoin(\"miter\"),this.globalData.renderer.ctxMiterLimit(4),this.data.singleShape||this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag);var e,r,i,s,a,n,o=this.textAnimator.renderedLetters,l=this.textProperty.currentData.l;r=l.length;var h,u=null,f=null,m=null,d,p,c=this.globalData.renderer;for(e=0;e<r;e+=1)if(!l[e].n){if(h=o[e],h&&(c.save(),c.ctxTransform(h.p),c.ctxOpacity(h.o)),this.fill){for(h&&h.fc?u!==h.fc&&(c.ctxFillStyle(h.fc),u=h.fc):u!==this.values.fill&&(u=this.values.fill,c.ctxFillStyle(this.values.fill)),d=this.textSpans[e].elem,s=d.length,this.globalData.canvasContext.beginPath(),i=0;i<s;i+=1)for(p=d[i],n=p.length,this.globalData.canvasContext.moveTo(p[0],p[1]),a=2;a<n;a+=6)this.globalData.canvasContext.bezierCurveTo(p[a],p[a+1],p[a+2],p[a+3],p[a+4],p[a+5]);this.globalData.canvasContext.closePath(),c.ctxFill();}if(this.stroke){for(h&&h.sw?m!==h.sw&&(m=h.sw,c.ctxLineWidth(h.sw)):m!==this.values.sWidth&&(m=this.values.sWidth,c.ctxLineWidth(this.values.sWidth)),h&&h.sc?f!==h.sc&&(f=h.sc,c.ctxStrokeStyle(h.sc)):f!==this.values.stroke&&(f=this.values.stroke,c.ctxStrokeStyle(this.values.stroke)),d=this.textSpans[e].elem,s=d.length,this.globalData.canvasContext.beginPath(),i=0;i<s;i+=1)for(p=d[i],n=p.length,this.globalData.canvasContext.moveTo(p[0],p[1]),a=2;a<n;a+=6)this.globalData.canvasContext.bezierCurveTo(p[a],p[a+1],p[a+2],p[a+3],p[a+4],p[a+5]);this.globalData.canvasContext.closePath(),c.ctxStroke();}h&&this.globalData.renderer.restore();}};function CVImageElement(t,e,r){this.assetData=e.getAssetData(t.refId),this.img=e.imageLoader.getAsset(this.assetData),this.initElement(t,e,r);}extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement],CVImageElement),CVImageElement.prototype.initElement=SVGShapeElement.prototype.initElement,CVImageElement.prototype.prepareFrame=IImageElement.prototype.prepareFrame,CVImageElement.prototype.createContent=function(){if(this.img.width&&(this.assetData.w!==this.img.width||this.assetData.h!==this.img.height)){var t=createTag(\"canvas\");t.width=this.assetData.w,t.height=this.assetData.h;var e=t.getContext(\"2d\"),r=this.img.width,i=this.img.height,s=r/i,a=this.assetData.w/this.assetData.h,n,o,l=this.assetData.pr||this.globalData.renderConfig.imagePreserveAspectRatio;s>a&&l===\"xMidYMid slice\"||s<a&&l!==\"xMidYMid slice\"?(o=i,n=o*a):(n=r,o=n/a),e.drawImage(this.img,(r-n)/2,(i-o)/2,n,o,0,0,this.assetData.w,this.assetData.h),this.img=t;}},CVImageElement.prototype.renderInnerContent=function(){this.canvasContext.drawImage(this.img,0,0);},CVImageElement.prototype.destroy=function(){this.img=null;};function CVSolidElement(t,e,r){this.initElement(t,e,r);}extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement],CVSolidElement),CVSolidElement.prototype.initElement=SVGShapeElement.prototype.initElement,CVSolidElement.prototype.prepareFrame=IImageElement.prototype.prepareFrame,CVSolidElement.prototype.renderInnerContent=function(){this.globalData.renderer.ctxFillStyle(this.data.sc),this.globalData.renderer.ctxFillRect(0,0,this.data.sw,this.data.sh);};function CanvasRendererBase(){}extendPrototype([BaseRenderer],CanvasRendererBase),CanvasRendererBase.prototype.createShape=function(t){return new CVShapeElement(t,this.globalData,this)},CanvasRendererBase.prototype.createText=function(t){return new CVTextElement(t,this.globalData,this)},CanvasRendererBase.prototype.createImage=function(t){return new CVImageElement(t,this.globalData,this)},CanvasRendererBase.prototype.createSolid=function(t){return new CVSolidElement(t,this.globalData,this)},CanvasRendererBase.prototype.createNull=SVGRenderer.prototype.createNull,CanvasRendererBase.prototype.ctxTransform=function(t){t[0]===1&&t[1]===0&&t[4]===0&&t[5]===1&&t[12]===0&&t[13]===0||this.canvasContext.transform(t[0],t[1],t[4],t[5],t[12],t[13]);},CanvasRendererBase.prototype.ctxOpacity=function(t){this.canvasContext.globalAlpha*=t<0?0:t;},CanvasRendererBase.prototype.ctxFillStyle=function(t){this.canvasContext.fillStyle=t;},CanvasRendererBase.prototype.ctxStrokeStyle=function(t){this.canvasContext.strokeStyle=t;},CanvasRendererBase.prototype.ctxLineWidth=function(t){this.canvasContext.lineWidth=t;},CanvasRendererBase.prototype.ctxLineCap=function(t){this.canvasContext.lineCap=t;},CanvasRendererBase.prototype.ctxLineJoin=function(t){this.canvasContext.lineJoin=t;},CanvasRendererBase.prototype.ctxMiterLimit=function(t){this.canvasContext.miterLimit=t;},CanvasRendererBase.prototype.ctxFill=function(t){this.canvasContext.fill(t);},CanvasRendererBase.prototype.ctxFillRect=function(t,e,r,i){this.canvasContext.fillRect(t,e,r,i);},CanvasRendererBase.prototype.ctxStroke=function(){this.canvasContext.stroke();},CanvasRendererBase.prototype.reset=function(){if(!this.renderConfig.clearCanvas){this.canvasContext.restore();return}this.contextData.reset();},CanvasRendererBase.prototype.save=function(){this.canvasContext.save();},CanvasRendererBase.prototype.restore=function(t){if(!this.renderConfig.clearCanvas){this.canvasContext.restore();return}t&&(this.globalData.blendMode=\"source-over\"),this.contextData.restore(t);},CanvasRendererBase.prototype.configAnimation=function(t){if(this.animationItem.wrapper){this.animationItem.container=createTag(\"canvas\");var e=this.animationItem.container.style;e.width=\"100%\",e.height=\"100%\";var r=\"0px 0px 0px\";e.transformOrigin=r,e.mozTransformOrigin=r,e.webkitTransformOrigin=r,e[\"-webkit-transform\"]=r,e.contentVisibility=this.renderConfig.contentVisibility,this.animationItem.wrapper.appendChild(this.animationItem.container),this.canvasContext=this.animationItem.container.getContext(\"2d\"),this.renderConfig.className&&this.animationItem.container.setAttribute(\"class\",this.renderConfig.className),this.renderConfig.id&&this.animationItem.container.setAttribute(\"id\",this.renderConfig.id);}else this.canvasContext=this.renderConfig.context;this.contextData.setContext(this.canvasContext),this.data=t,this.layers=t.layers,this.transformCanvas={w:t.w,h:t.h,sx:0,sy:0,tx:0,ty:0},this.setupGlobalData(t,document.body),this.globalData.canvasContext=this.canvasContext,this.globalData.renderer=this,this.globalData.isDashed=!1,this.globalData.progressiveLoad=this.renderConfig.progressiveLoad,this.globalData.transformCanvas=this.transformCanvas,this.elements=createSizedArray(t.layers.length),this.updateContainerSize();},CanvasRendererBase.prototype.updateContainerSize=function(t,e){this.reset();var r,i;t?(r=t,i=e,this.canvasContext.canvas.width=r,this.canvasContext.canvas.height=i):(this.animationItem.wrapper&&this.animationItem.container?(r=this.animationItem.wrapper.offsetWidth,i=this.animationItem.wrapper.offsetHeight):(r=this.canvasContext.canvas.width,i=this.canvasContext.canvas.height),this.canvasContext.canvas.width=r*this.renderConfig.dpr,this.canvasContext.canvas.height=i*this.renderConfig.dpr);var s,a;if(this.renderConfig.preserveAspectRatio.indexOf(\"meet\")!==-1||this.renderConfig.preserveAspectRatio.indexOf(\"slice\")!==-1){var n=this.renderConfig.preserveAspectRatio.split(\" \"),o=n[1]||\"meet\",l=n[0]||\"xMidYMid\",h=l.substr(0,4),u=l.substr(4);s=r/i,a=this.transformCanvas.w/this.transformCanvas.h,a>s&&o===\"meet\"||a<s&&o===\"slice\"?(this.transformCanvas.sx=r/(this.transformCanvas.w/this.renderConfig.dpr),this.transformCanvas.sy=r/(this.transformCanvas.w/this.renderConfig.dpr)):(this.transformCanvas.sx=i/(this.transformCanvas.h/this.renderConfig.dpr),this.transformCanvas.sy=i/(this.transformCanvas.h/this.renderConfig.dpr)),h===\"xMid\"&&(a<s&&o===\"meet\"||a>s&&o===\"slice\")?this.transformCanvas.tx=(r-this.transformCanvas.w*(i/this.transformCanvas.h))/2*this.renderConfig.dpr:h===\"xMax\"&&(a<s&&o===\"meet\"||a>s&&o===\"slice\")?this.transformCanvas.tx=(r-this.transformCanvas.w*(i/this.transformCanvas.h))*this.renderConfig.dpr:this.transformCanvas.tx=0,u===\"YMid\"&&(a>s&&o===\"meet\"||a<s&&o===\"slice\")?this.transformCanvas.ty=(i-this.transformCanvas.h*(r/this.transformCanvas.w))/2*this.renderConfig.dpr:u===\"YMax\"&&(a>s&&o===\"meet\"||a<s&&o===\"slice\")?this.transformCanvas.ty=(i-this.transformCanvas.h*(r/this.transformCanvas.w))*this.renderConfig.dpr:this.transformCanvas.ty=0;}else this.renderConfig.preserveAspectRatio===\"none\"?(this.transformCanvas.sx=r/(this.transformCanvas.w/this.renderConfig.dpr),this.transformCanvas.sy=i/(this.transformCanvas.h/this.renderConfig.dpr),this.transformCanvas.tx=0,this.transformCanvas.ty=0):(this.transformCanvas.sx=this.renderConfig.dpr,this.transformCanvas.sy=this.renderConfig.dpr,this.transformCanvas.tx=0,this.transformCanvas.ty=0);this.transformCanvas.props=[this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1],this.ctxTransform(this.transformCanvas.props),this.canvasContext.beginPath(),this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h),this.canvasContext.closePath(),this.canvasContext.clip(),this.renderFrame(this.renderedFrame,!0);},CanvasRendererBase.prototype.destroy=function(){this.renderConfig.clearCanvas&&this.animationItem.wrapper&&(this.animationItem.wrapper.innerText=\"\");var t,e=this.layers?this.layers.length:0;for(t=e-1;t>=0;t-=1)this.elements[t]&&this.elements[t].destroy&&this.elements[t].destroy();this.elements.length=0,this.globalData.canvasContext=null,this.animationItem.container=null,this.destroyed=!0;},CanvasRendererBase.prototype.renderFrame=function(t,e){if(!(this.renderedFrame===t&&this.renderConfig.clearCanvas===!0&&!e||this.destroyed||t===-1)){this.renderedFrame=t,this.globalData.frameNum=t-this.animationItem._isFirstFrame,this.globalData.frameId+=1,this.globalData._mdf=!this.renderConfig.clearCanvas||e,this.globalData.projectInterface.currentFrame=t;var r,i=this.layers.length;for(this.completeLayers||this.checkLayers(t),r=i-1;r>=0;r-=1)(this.completeLayers||this.elements[r])&&this.elements[r].prepareFrame(t-this.layers[r].st);if(this.globalData._mdf){for(this.renderConfig.clearCanvas===!0?this.canvasContext.clearRect(0,0,this.transformCanvas.w,this.transformCanvas.h):this.save(),r=i-1;r>=0;r-=1)(this.completeLayers||this.elements[r])&&this.elements[r].renderFrame();this.renderConfig.clearCanvas!==!0&&this.restore();}}},CanvasRendererBase.prototype.buildItem=function(t){var e=this.elements;if(!(e[t]||this.layers[t].ty===99)){var r=this.createItem(this.layers[t],this,this.globalData);e[t]=r,r.initExpressions();}},CanvasRendererBase.prototype.checkPendingElements=function(){for(;this.pendingElements.length;){var t=this.pendingElements.pop();t.checkParenting();}},CanvasRendererBase.prototype.hide=function(){this.animationItem.container.style.display=\"none\";},CanvasRendererBase.prototype.show=function(){this.animationItem.container.style.display=\"block\";};function CanvasContext(){this.opacity=-1,this.transform=createTypedArray(\"float32\",16),this.fillStyle=\"\",this.strokeStyle=\"\",this.lineWidth=\"\",this.lineCap=\"\",this.lineJoin=\"\",this.miterLimit=\"\",this.id=Math.random();}function CVContextData(){this.stack=[],this.cArrPos=0,this.cTr=new Matrix;var t,e=15;for(t=0;t<e;t+=1){var r=new CanvasContext;this.stack[t]=r;}this._length=e,this.nativeContext=null,this.transformMat=new Matrix,this.currentOpacity=1,this.currentFillStyle=\"\",this.appliedFillStyle=\"\",this.currentStrokeStyle=\"\",this.appliedStrokeStyle=\"\",this.currentLineWidth=\"\",this.appliedLineWidth=\"\",this.currentLineCap=\"\",this.appliedLineCap=\"\",this.currentLineJoin=\"\",this.appliedLineJoin=\"\",this.appliedMiterLimit=\"\",this.currentMiterLimit=\"\";}CVContextData.prototype.duplicate=function(){var t=this._length*2,e=0;for(e=this._length;e<t;e+=1)this.stack[e]=new CanvasContext;this._length=t;},CVContextData.prototype.reset=function(){this.cArrPos=0,this.cTr.reset(),this.stack[this.cArrPos].opacity=1;},CVContextData.prototype.restore=function(t){this.cArrPos-=1;var e=this.stack[this.cArrPos],r=e.transform,i,s=this.cTr.props;for(i=0;i<16;i+=1)s[i]=r[i];if(t){this.nativeContext.restore();var a=this.stack[this.cArrPos+1];this.appliedFillStyle=a.fillStyle,this.appliedStrokeStyle=a.strokeStyle,this.appliedLineWidth=a.lineWidth,this.appliedLineCap=a.lineCap,this.appliedLineJoin=a.lineJoin,this.appliedMiterLimit=a.miterLimit;}this.nativeContext.setTransform(r[0],r[1],r[4],r[5],r[12],r[13]),(t||e.opacity!==-1&&this.currentOpacity!==e.opacity)&&(this.nativeContext.globalAlpha=e.opacity,this.currentOpacity=e.opacity),this.currentFillStyle=e.fillStyle,this.currentStrokeStyle=e.strokeStyle,this.currentLineWidth=e.lineWidth,this.currentLineCap=e.lineCap,this.currentLineJoin=e.lineJoin,this.currentMiterLimit=e.miterLimit;},CVContextData.prototype.save=function(t){t&&this.nativeContext.save();var e=this.cTr.props;this._length<=this.cArrPos&&this.duplicate();var r=this.stack[this.cArrPos],i;for(i=0;i<16;i+=1)r.transform[i]=e[i];this.cArrPos+=1;var s=this.stack[this.cArrPos];s.opacity=r.opacity,s.fillStyle=r.fillStyle,s.strokeStyle=r.strokeStyle,s.lineWidth=r.lineWidth,s.lineCap=r.lineCap,s.lineJoin=r.lineJoin,s.miterLimit=r.miterLimit;},CVContextData.prototype.setOpacity=function(t){this.stack[this.cArrPos].opacity=t;},CVContextData.prototype.setContext=function(t){this.nativeContext=t;},CVContextData.prototype.fillStyle=function(t){this.stack[this.cArrPos].fillStyle!==t&&(this.currentFillStyle=t,this.stack[this.cArrPos].fillStyle=t);},CVContextData.prototype.strokeStyle=function(t){this.stack[this.cArrPos].strokeStyle!==t&&(this.currentStrokeStyle=t,this.stack[this.cArrPos].strokeStyle=t);},CVContextData.prototype.lineWidth=function(t){this.stack[this.cArrPos].lineWidth!==t&&(this.currentLineWidth=t,this.stack[this.cArrPos].lineWidth=t);},CVContextData.prototype.lineCap=function(t){this.stack[this.cArrPos].lineCap!==t&&(this.currentLineCap=t,this.stack[this.cArrPos].lineCap=t);},CVContextData.prototype.lineJoin=function(t){this.stack[this.cArrPos].lineJoin!==t&&(this.currentLineJoin=t,this.stack[this.cArrPos].lineJoin=t);},CVContextData.prototype.miterLimit=function(t){this.stack[this.cArrPos].miterLimit!==t&&(this.currentMiterLimit=t,this.stack[this.cArrPos].miterLimit=t);},CVContextData.prototype.transform=function(t){this.transformMat.cloneFromProps(t);var e=this.cTr;this.transformMat.multiply(e),e.cloneFromProps(this.transformMat.props);var r=e.props;this.nativeContext.setTransform(r[0],r[1],r[4],r[5],r[12],r[13]);},CVContextData.prototype.opacity=function(t){var e=this.stack[this.cArrPos].opacity;e*=t<0?0:t,this.stack[this.cArrPos].opacity!==e&&(this.currentOpacity!==t&&(this.nativeContext.globalAlpha=t,this.currentOpacity=t),this.stack[this.cArrPos].opacity=e);},CVContextData.prototype.fill=function(t){this.appliedFillStyle!==this.currentFillStyle&&(this.appliedFillStyle=this.currentFillStyle,this.nativeContext.fillStyle=this.appliedFillStyle),this.nativeContext.fill(t);},CVContextData.prototype.fillRect=function(t,e,r,i){this.appliedFillStyle!==this.currentFillStyle&&(this.appliedFillStyle=this.currentFillStyle,this.nativeContext.fillStyle=this.appliedFillStyle),this.nativeContext.fillRect(t,e,r,i);},CVContextData.prototype.stroke=function(){this.appliedStrokeStyle!==this.currentStrokeStyle&&(this.appliedStrokeStyle=this.currentStrokeStyle,this.nativeContext.strokeStyle=this.appliedStrokeStyle),this.appliedLineWidth!==this.currentLineWidth&&(this.appliedLineWidth=this.currentLineWidth,this.nativeContext.lineWidth=this.appliedLineWidth),this.appliedLineCap!==this.currentLineCap&&(this.appliedLineCap=this.currentLineCap,this.nativeContext.lineCap=this.appliedLineCap),this.appliedLineJoin!==this.currentLineJoin&&(this.appliedLineJoin=this.currentLineJoin,this.nativeContext.lineJoin=this.appliedLineJoin),this.appliedMiterLimit!==this.currentMiterLimit&&(this.appliedMiterLimit=this.currentMiterLimit,this.nativeContext.miterLimit=this.appliedMiterLimit),this.nativeContext.stroke();};function CVCompElement(t,e,r){this.completeLayers=!1,this.layers=t.layers,this.pendingElements=[],this.elements=createSizedArray(this.layers.length),this.initElement(t,e,r),this.tm=t.tm?PropertyFactory.getProp(this,t.tm,0,e.frameRate,this):{_placeholder:!0};}extendPrototype([CanvasRendererBase,ICompElement,CVBaseElement],CVCompElement),CVCompElement.prototype.renderInnerContent=function(){var t=this.canvasContext;t.beginPath(),t.moveTo(0,0),t.lineTo(this.data.w,0),t.lineTo(this.data.w,this.data.h),t.lineTo(0,this.data.h),t.lineTo(0,0),t.clip();var e,r=this.layers.length;for(e=r-1;e>=0;e-=1)(this.completeLayers||this.elements[e])&&this.elements[e].renderFrame();},CVCompElement.prototype.destroy=function(){var t,e=this.layers.length;for(t=e-1;t>=0;t-=1)this.elements[t]&&this.elements[t].destroy();this.layers=null,this.elements=null;},CVCompElement.prototype.createComp=function(t){return new CVCompElement(t,this.globalData,this)};function CanvasRenderer(t,e){this.animationItem=t,this.renderConfig={clearCanvas:e&&e.clearCanvas!==void 0?e.clearCanvas:!0,context:e&&e.context||null,progressiveLoad:e&&e.progressiveLoad||!1,preserveAspectRatio:e&&e.preserveAspectRatio||\"xMidYMid meet\",imagePreserveAspectRatio:e&&e.imagePreserveAspectRatio||\"xMidYMid slice\",contentVisibility:e&&e.contentVisibility||\"visible\",className:e&&e.className||\"\",id:e&&e.id||\"\",runExpressions:!e||e.runExpressions===void 0||e.runExpressions},this.renderConfig.dpr=e&&e.dpr||1,this.animationItem.wrapper&&(this.renderConfig.dpr=e&&e.dpr||window.devicePixelRatio||1),this.renderedFrame=-1,this.globalData={frameNum:-1,_mdf:!1,renderConfig:this.renderConfig,currentGlobalAlpha:-1},this.contextData=new CVContextData,this.elements=[],this.pendingElements=[],this.transformMat=new Matrix,this.completeLayers=!1,this.rendererType=\"canvas\",this.renderConfig.clearCanvas&&(this.ctxTransform=this.contextData.transform.bind(this.contextData),this.ctxOpacity=this.contextData.opacity.bind(this.contextData),this.ctxFillStyle=this.contextData.fillStyle.bind(this.contextData),this.ctxStrokeStyle=this.contextData.strokeStyle.bind(this.contextData),this.ctxLineWidth=this.contextData.lineWidth.bind(this.contextData),this.ctxLineCap=this.contextData.lineCap.bind(this.contextData),this.ctxLineJoin=this.contextData.lineJoin.bind(this.contextData),this.ctxMiterLimit=this.contextData.miterLimit.bind(this.contextData),this.ctxFill=this.contextData.fill.bind(this.contextData),this.ctxFillRect=this.contextData.fillRect.bind(this.contextData),this.ctxStroke=this.contextData.stroke.bind(this.contextData),this.save=this.contextData.save.bind(this.contextData));}extendPrototype([CanvasRendererBase],CanvasRenderer),CanvasRenderer.prototype.createComp=function(t){return new CVCompElement(t,this.globalData,this)};function HBaseElement(){}HBaseElement.prototype={checkBlendMode:function(){},initRendererElement:function(){this.baseElement=createTag(this.data.tg||\"div\"),this.data.hasMask?(this.svgElement=createNS(\"svg\"),this.layerElement=createNS(\"g\"),this.maskedElement=this.layerElement,this.svgElement.appendChild(this.layerElement),this.baseElement.appendChild(this.svgElement)):this.layerElement=this.baseElement,styleDiv(this.baseElement);},createContainerElements:function(){this.renderableEffectsManager=new CVEffects(this),this.transformedElement=this.baseElement,this.maskedElement=this.layerElement,this.data.ln&&this.layerElement.setAttribute(\"id\",this.data.ln),this.data.cl&&this.layerElement.setAttribute(\"class\",this.data.cl),this.data.bm!==0&&this.setBlendMode();},renderElement:function(){var t=this.transformedElement?this.transformedElement.style:{};if(this.finalTransform._matMdf){var e=this.finalTransform.mat.toCSS();t.transform=e,t.webkitTransform=e;}this.finalTransform._opMdf&&(t.opacity=this.finalTransform.mProp.o.v);},renderFrame:function(){this.data.hd||this.hidden||(this.renderTransform(),this.renderRenderable(),this.renderElement(),this.renderInnerContent(),this._isFirstFrame&&(this._isFirstFrame=!1));},destroy:function(){this.layerElement=null,this.transformedElement=null,this.matteElement&&(this.matteElement=null),this.maskManager&&(this.maskManager.destroy(),this.maskManager=null);},createRenderableComponents:function(){this.maskManager=new MaskElement(this.data,this,this.globalData);},addEffects:function(){},setMatte:function(){}},HBaseElement.prototype.getBaseElement=SVGBaseElement.prototype.getBaseElement,HBaseElement.prototype.destroyBaseElement=HBaseElement.prototype.destroy,HBaseElement.prototype.buildElementParenting=BaseRenderer.prototype.buildElementParenting;function HSolidElement(t,e,r){this.initElement(t,e,r);}extendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement],HSolidElement),HSolidElement.prototype.createContent=function(){var t;this.data.hasMask?(t=createNS(\"rect\"),t.setAttribute(\"width\",this.data.sw),t.setAttribute(\"height\",this.data.sh),t.setAttribute(\"fill\",this.data.sc),this.svgElement.setAttribute(\"width\",this.data.sw),this.svgElement.setAttribute(\"height\",this.data.sh)):(t=createTag(\"div\"),t.style.width=this.data.sw+\"px\",t.style.height=this.data.sh+\"px\",t.style.backgroundColor=this.data.sc),this.layerElement.appendChild(t);};function HShapeElement(t,e,r){this.shapes=[],this.shapesData=t.shapes,this.stylesList=[],this.shapeModifiers=[],this.itemsData=[],this.processedElements=[],this.animatedContents=[],this.shapesContainer=createNS(\"g\"),this.initElement(t,e,r),this.prevViewData=[],this.currentBBox={x:999999,y:-999999,h:0,w:0};}extendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement],HShapeElement),HShapeElement.prototype._renderShapeFrame=HShapeElement.prototype.renderInnerContent,HShapeElement.prototype.createContent=function(){var t;if(this.baseElement.style.fontSize=0,this.data.hasMask)this.layerElement.appendChild(this.shapesContainer),t=this.svgElement;else {t=createNS(\"svg\");var e=this.comp.data?this.comp.data:this.globalData.compSize;t.setAttribute(\"width\",e.w),t.setAttribute(\"height\",e.h),t.appendChild(this.shapesContainer),this.layerElement.appendChild(t);}this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0,[],!0),this.filterUniqueShapes(),this.shapeCont=t;},HShapeElement.prototype.getTransformedPoint=function(t,e){var r,i=t.length;for(r=0;r<i;r+=1)e=t[r].mProps.v.applyToPointArray(e[0],e[1],0);return e},HShapeElement.prototype.calculateShapeBoundingBox=function(t,e){var r=t.sh.v,i=t.transformers,s,a=r._length,n,o,l,h;if(!(a<=1)){for(s=0;s<a-1;s+=1)n=this.getTransformedPoint(i,r.v[s]),o=this.getTransformedPoint(i,r.o[s]),l=this.getTransformedPoint(i,r.i[s+1]),h=this.getTransformedPoint(i,r.v[s+1]),this.checkBounds(n,o,l,h,e);r.c&&(n=this.getTransformedPoint(i,r.v[s]),o=this.getTransformedPoint(i,r.o[s]),l=this.getTransformedPoint(i,r.i[0]),h=this.getTransformedPoint(i,r.v[0]),this.checkBounds(n,o,l,h,e));}},HShapeElement.prototype.checkBounds=function(t,e,r,i,s){this.getBoundsOfCurve(t,e,r,i);var a=this.shapeBoundingBox;s.x=bmMin(a.left,s.x),s.xMax=bmMax(a.right,s.xMax),s.y=bmMin(a.top,s.y),s.yMax=bmMax(a.bottom,s.yMax);},HShapeElement.prototype.shapeBoundingBox={left:0,right:0,top:0,bottom:0},HShapeElement.prototype.tempBoundingBox={x:0,xMax:0,y:0,yMax:0,width:0,height:0},HShapeElement.prototype.getBoundsOfCurve=function(t,e,r,i){for(var s=[[t[0],i[0]],[t[1],i[1]]],a,n,o,l,h,u,f,m=0;m<2;++m)n=6*t[m]-12*e[m]+6*r[m],a=-3*t[m]+9*e[m]-9*r[m]+3*i[m],o=3*e[m]-3*t[m],n|=0,a|=0,o|=0,a===0&&n===0||(a===0?(l=-o/n,l>0&&l<1&&s[m].push(this.calculateF(l,t,e,r,i,m))):(h=n*n-4*o*a,h>=0&&(u=(-n+bmSqrt(h))/(2*a),u>0&&u<1&&s[m].push(this.calculateF(u,t,e,r,i,m)),f=(-n-bmSqrt(h))/(2*a),f>0&&f<1&&s[m].push(this.calculateF(f,t,e,r,i,m)))));this.shapeBoundingBox.left=bmMin.apply(null,s[0]),this.shapeBoundingBox.top=bmMin.apply(null,s[1]),this.shapeBoundingBox.right=bmMax.apply(null,s[0]),this.shapeBoundingBox.bottom=bmMax.apply(null,s[1]);},HShapeElement.prototype.calculateF=function(t,e,r,i,s,a){return bmPow(1-t,3)*e[a]+3*bmPow(1-t,2)*t*r[a]+3*(1-t)*bmPow(t,2)*i[a]+bmPow(t,3)*s[a]},HShapeElement.prototype.calculateBoundingBox=function(t,e){var r,i=t.length;for(r=0;r<i;r+=1)t[r]&&t[r].sh?this.calculateShapeBoundingBox(t[r],e):t[r]&&t[r].it?this.calculateBoundingBox(t[r].it,e):t[r]&&t[r].style&&t[r].w&&this.expandStrokeBoundingBox(t[r].w,e);},HShapeElement.prototype.expandStrokeBoundingBox=function(t,e){var r=0;if(t.keyframes){for(var i=0;i<t.keyframes.length;i+=1){var s=t.keyframes[i].s;s>r&&(r=s);}r*=t.mult;}else r=t.v*t.mult;e.x-=r,e.xMax+=r,e.y-=r,e.yMax+=r;},HShapeElement.prototype.currentBoxContains=function(t){return this.currentBBox.x<=t.x&&this.currentBBox.y<=t.y&&this.currentBBox.width+this.currentBBox.x>=t.x+t.width&&this.currentBBox.height+this.currentBBox.y>=t.y+t.height},HShapeElement.prototype.renderInnerContent=function(){if(this._renderShapeFrame(),!this.hidden&&(this._isFirstFrame||this._mdf)){var t=this.tempBoundingBox,e=999999;if(t.x=e,t.xMax=-e,t.y=e,t.yMax=-e,this.calculateBoundingBox(this.itemsData,t),t.width=t.xMax<t.x?0:t.xMax-t.x,t.height=t.yMax<t.y?0:t.yMax-t.y,this.currentBoxContains(t))return;var r=!1;if(this.currentBBox.w!==t.width&&(this.currentBBox.w=t.width,this.shapeCont.setAttribute(\"width\",t.width),r=!0),this.currentBBox.h!==t.height&&(this.currentBBox.h=t.height,this.shapeCont.setAttribute(\"height\",t.height),r=!0),r||this.currentBBox.x!==t.x||this.currentBBox.y!==t.y){this.currentBBox.w=t.width,this.currentBBox.h=t.height,this.currentBBox.x=t.x,this.currentBBox.y=t.y,this.shapeCont.setAttribute(\"viewBox\",this.currentBBox.x+\" \"+this.currentBBox.y+\" \"+this.currentBBox.w+\" \"+this.currentBBox.h);var i=this.shapeCont.style,s=\"translate(\"+this.currentBBox.x+\"px,\"+this.currentBBox.y+\"px)\";i.transform=s,i.webkitTransform=s;}}};function HTextElement(t,e,r){this.textSpans=[],this.textPaths=[],this.currentBBox={x:999999,y:-999999,h:0,w:0},this.renderType=\"svg\",this.isMasked=!1,this.initElement(t,e,r);}extendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement],HTextElement),HTextElement.prototype.createContent=function(){if(this.isMasked=this.checkMasks(),this.isMasked){this.renderType=\"svg\",this.compW=this.comp.data.w,this.compH=this.comp.data.h,this.svgElement.setAttribute(\"width\",this.compW),this.svgElement.setAttribute(\"height\",this.compH);var t=createNS(\"g\");this.maskedElement.appendChild(t),this.innerElem=t;}else this.renderType=\"html\",this.innerElem=this.layerElement;this.checkParenting();},HTextElement.prototype.buildNewText=function(){var t=this.textProperty.currentData;this.renderedLetters=createSizedArray(t.l?t.l.length:0);var e=this.innerElem.style,r=t.fc?this.buildColor(t.fc):\"rgba(0,0,0,0)\";e.fill=r,e.color=r,t.sc&&(e.stroke=this.buildColor(t.sc),e.strokeWidth=t.sw+\"px\");var i=this.globalData.fontManager.getFontByName(t.f);if(!this.globalData.fontManager.chars)if(e.fontSize=t.finalSize+\"px\",e.lineHeight=t.finalSize+\"px\",i.fClass)this.innerElem.className=i.fClass;else {e.fontFamily=i.fFamily;var s=t.fWeight,a=t.fStyle;e.fontStyle=a,e.fontWeight=s;}var n,o,l=t.l;o=l.length;var h,u,f,m=this.mHelper,d,p=\"\",c=0;for(n=0;n<o;n+=1){if(this.globalData.fontManager.chars?(this.textPaths[c]?h=this.textPaths[c]:(h=createNS(\"path\"),h.setAttribute(\"stroke-linecap\",lineCapEnum[1]),h.setAttribute(\"stroke-linejoin\",lineJoinEnum[2]),h.setAttribute(\"stroke-miterlimit\",\"4\")),this.isMasked||(this.textSpans[c]?(u=this.textSpans[c],f=u.children[0]):(u=createTag(\"div\"),u.style.lineHeight=0,f=createNS(\"svg\"),f.appendChild(h),styleDiv(u)))):this.isMasked?h=this.textPaths[c]?this.textPaths[c]:createNS(\"text\"):this.textSpans[c]?(u=this.textSpans[c],h=this.textPaths[c]):(u=createTag(\"span\"),styleDiv(u),h=createTag(\"span\"),styleDiv(h),u.appendChild(h)),this.globalData.fontManager.chars){var v=this.globalData.fontManager.getCharData(t.finalText[n],i.fStyle,this.globalData.fontManager.getFontByName(t.f).fFamily),y;if(v?y=v.data:y=null,m.reset(),y&&y.shapes&&y.shapes.length&&(d=y.shapes[0].it,m.scale(t.finalSize/100,t.finalSize/100),p=this.createPathShape(m,d),h.setAttribute(\"d\",p)),this.isMasked)this.innerElem.appendChild(h);else {if(this.innerElem.appendChild(u),y&&y.shapes){document.body.appendChild(f);var g=f.getBBox();f.setAttribute(\"width\",g.width+2),f.setAttribute(\"height\",g.height+2),f.setAttribute(\"viewBox\",g.x-1+\" \"+(g.y-1)+\" \"+(g.width+2)+\" \"+(g.height+2));var b=f.style,x=\"translate(\"+(g.x-1)+\"px,\"+(g.y-1)+\"px)\";b.transform=x,b.webkitTransform=x,l[n].yOffset=g.y-1;}else f.setAttribute(\"width\",1),f.setAttribute(\"height\",1);u.appendChild(f);}}else if(h.textContent=l[n].val,h.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\",\"xml:space\",\"preserve\"),this.isMasked)this.innerElem.appendChild(h);else {this.innerElem.appendChild(u);var S=h.style,C=\"translate3d(0,\"+-t.finalSize/1.2+\"px,0)\";S.transform=C,S.webkitTransform=C;}this.isMasked?this.textSpans[c]=h:this.textSpans[c]=u,this.textSpans[c].style.display=\"block\",this.textPaths[c]=h,c+=1;}for(;c<this.textSpans.length;)this.textSpans[c].style.display=\"none\",c+=1;},HTextElement.prototype.renderInnerContent=function(){this.validateText();var t;if(this.data.singleShape){if(!this._isFirstFrame&&!this.lettersChangedFlag)return;if(this.isMasked&&this.finalTransform._matMdf){this.svgElement.setAttribute(\"viewBox\",-this.finalTransform.mProp.p.v[0]+\" \"+-this.finalTransform.mProp.p.v[1]+\" \"+this.compW+\" \"+this.compH),t=this.svgElement.style;var e=\"translate(\"+-this.finalTransform.mProp.p.v[0]+\"px,\"+-this.finalTransform.mProp.p.v[1]+\"px)\";t.transform=e,t.webkitTransform=e;}}if(this.textAnimator.getMeasures(this.textProperty.currentData,this.lettersChangedFlag),!(!this.lettersChangedFlag&&!this.textAnimator.lettersChangedFlag)){var r,i,s=0,a=this.textAnimator.renderedLetters,n=this.textProperty.currentData.l;i=n.length;var o,l,h;for(r=0;r<i;r+=1)n[r].n?s+=1:(l=this.textSpans[r],h=this.textPaths[r],o=a[s],s+=1,o._mdf.m&&(this.isMasked?l.setAttribute(\"transform\",o.m):(l.style.webkitTransform=o.m,l.style.transform=o.m)),l.style.opacity=o.o,o.sw&&o._mdf.sw&&h.setAttribute(\"stroke-width\",o.sw),o.sc&&o._mdf.sc&&h.setAttribute(\"stroke\",o.sc),o.fc&&o._mdf.fc&&(h.setAttribute(\"fill\",o.fc),h.style.color=o.fc));if(this.innerElem.getBBox&&!this.hidden&&(this._isFirstFrame||this._mdf)){var u=this.innerElem.getBBox();this.currentBBox.w!==u.width&&(this.currentBBox.w=u.width,this.svgElement.setAttribute(\"width\",u.width)),this.currentBBox.h!==u.height&&(this.currentBBox.h=u.height,this.svgElement.setAttribute(\"height\",u.height));var f=1;if(this.currentBBox.w!==u.width+f*2||this.currentBBox.h!==u.height+f*2||this.currentBBox.x!==u.x-f||this.currentBBox.y!==u.y-f){this.currentBBox.w=u.width+f*2,this.currentBBox.h=u.height+f*2,this.currentBBox.x=u.x-f,this.currentBBox.y=u.y-f,this.svgElement.setAttribute(\"viewBox\",this.currentBBox.x+\" \"+this.currentBBox.y+\" \"+this.currentBBox.w+\" \"+this.currentBBox.h),t=this.svgElement.style;var m=\"translate(\"+this.currentBBox.x+\"px,\"+this.currentBBox.y+\"px)\";t.transform=m,t.webkitTransform=m;}}}};function HCameraElement(t,e,r){this.initFrame(),this.initBaseData(t,e,r),this.initHierarchy();var i=PropertyFactory.getProp;if(this.pe=i(this,t.pe,0,0,this),t.ks.p.s?(this.px=i(this,t.ks.p.x,1,0,this),this.py=i(this,t.ks.p.y,1,0,this),this.pz=i(this,t.ks.p.z,1,0,this)):this.p=i(this,t.ks.p,1,0,this),t.ks.a&&(this.a=i(this,t.ks.a,1,0,this)),t.ks.or.k.length&&t.ks.or.k[0].to){var s,a=t.ks.or.k.length;for(s=0;s<a;s+=1)t.ks.or.k[s].to=null,t.ks.or.k[s].ti=null;}this.or=i(this,t.ks.or,1,degToRads,this),this.or.sh=!0,this.rx=i(this,t.ks.rx,0,degToRads,this),this.ry=i(this,t.ks.ry,0,degToRads,this),this.rz=i(this,t.ks.rz,0,degToRads,this),this.mat=new Matrix,this._prevMat=new Matrix,this._isFirstFrame=!0,this.finalTransform={mProp:this};}extendPrototype([BaseElement,FrameElement,HierarchyElement],HCameraElement),HCameraElement.prototype.setup=function(){var t,e=this.comp.threeDElements.length,r,i,s;for(t=0;t<e;t+=1)if(r=this.comp.threeDElements[t],r.type===\"3d\"){i=r.perspectiveElem.style,s=r.container.style;var a=this.pe.v+\"px\",n=\"0px 0px 0px\",o=\"matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)\";i.perspective=a,i.webkitPerspective=a,s.transformOrigin=n,s.mozTransformOrigin=n,s.webkitTransformOrigin=n,i.transform=o,i.webkitTransform=o;}},HCameraElement.prototype.createElements=function(){},HCameraElement.prototype.hide=function(){},HCameraElement.prototype.renderFrame=function(){var t=this._isFirstFrame,e,r;if(this.hierarchy)for(r=this.hierarchy.length,e=0;e<r;e+=1)t=this.hierarchy[e].finalTransform.mProp._mdf||t;if(t||this.pe._mdf||this.p&&this.p._mdf||this.px&&(this.px._mdf||this.py._mdf||this.pz._mdf)||this.rx._mdf||this.ry._mdf||this.rz._mdf||this.or._mdf||this.a&&this.a._mdf){if(this.mat.reset(),this.hierarchy)for(r=this.hierarchy.length-1,e=r;e>=0;e-=1){var i=this.hierarchy[e].finalTransform.mProp;this.mat.translate(-i.p.v[0],-i.p.v[1],i.p.v[2]),this.mat.rotateX(-i.or.v[0]).rotateY(-i.or.v[1]).rotateZ(i.or.v[2]),this.mat.rotateX(-i.rx.v).rotateY(-i.ry.v).rotateZ(i.rz.v),this.mat.scale(1/i.s.v[0],1/i.s.v[1],1/i.s.v[2]),this.mat.translate(i.a.v[0],i.a.v[1],i.a.v[2]);}if(this.p?this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]):this.mat.translate(-this.px.v,-this.py.v,this.pz.v),this.a){var s;this.p?s=[this.p.v[0]-this.a.v[0],this.p.v[1]-this.a.v[1],this.p.v[2]-this.a.v[2]]:s=[this.px.v-this.a.v[0],this.py.v-this.a.v[1],this.pz.v-this.a.v[2]];var a=Math.sqrt(Math.pow(s[0],2)+Math.pow(s[1],2)+Math.pow(s[2],2)),n=[s[0]/a,s[1]/a,s[2]/a],o=Math.sqrt(n[2]*n[2]+n[0]*n[0]),l=Math.atan2(n[1],o),h=Math.atan2(n[0],-n[2]);this.mat.rotateY(h).rotateX(-l);}this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v),this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]),this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0),this.mat.translate(0,0,this.pe.v);var u=!this._prevMat.equals(this.mat);if((u||this.pe._mdf)&&this.comp.threeDElements){r=this.comp.threeDElements.length;var f,m,d;for(e=0;e<r;e+=1)if(f=this.comp.threeDElements[e],f.type===\"3d\"){if(u){var p=this.mat.toCSS();d=f.container.style,d.transform=p,d.webkitTransform=p;}this.pe._mdf&&(m=f.perspectiveElem.style,m.perspective=this.pe.v+\"px\",m.webkitPerspective=this.pe.v+\"px\");}this.mat.clone(this._prevMat);}}this._isFirstFrame=!1;},HCameraElement.prototype.prepareFrame=function(t){this.prepareProperties(t,!0);},HCameraElement.prototype.destroy=function(){},HCameraElement.prototype.getBaseElement=function(){return null};function HImageElement(t,e,r){this.assetData=e.getAssetData(t.refId),this.initElement(t,e,r);}extendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement],HImageElement),HImageElement.prototype.createContent=function(){var t=this.globalData.getAssetsPath(this.assetData),e=new Image;this.data.hasMask?(this.imageElem=createNS(\"image\"),this.imageElem.setAttribute(\"width\",this.assetData.w+\"px\"),this.imageElem.setAttribute(\"height\",this.assetData.h+\"px\"),this.imageElem.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"href\",t),this.layerElement.appendChild(this.imageElem),this.baseElement.setAttribute(\"width\",this.assetData.w),this.baseElement.setAttribute(\"height\",this.assetData.h)):this.layerElement.appendChild(e),e.crossOrigin=\"anonymous\",e.src=t,this.data.ln&&this.baseElement.setAttribute(\"id\",this.data.ln);};function HybridRendererBase(t,e){this.animationItem=t,this.layers=null,this.renderedFrame=-1,this.renderConfig={className:e&&e.className||\"\",imagePreserveAspectRatio:e&&e.imagePreserveAspectRatio||\"xMidYMid slice\",hideOnTransparent:!(e&&e.hideOnTransparent===!1),filterSize:{width:e&&e.filterSize&&e.filterSize.width||\"400%\",height:e&&e.filterSize&&e.filterSize.height||\"400%\",x:e&&e.filterSize&&e.filterSize.x||\"-100%\",y:e&&e.filterSize&&e.filterSize.y||\"-100%\"}},this.globalData={_mdf:!1,frameNum:-1,renderConfig:this.renderConfig},this.pendingElements=[],this.elements=[],this.threeDElements=[],this.destroyed=!1,this.camera=null,this.supports3d=!0,this.rendererType=\"html\";}extendPrototype([BaseRenderer],HybridRendererBase),HybridRendererBase.prototype.buildItem=SVGRenderer.prototype.buildItem,HybridRendererBase.prototype.checkPendingElements=function(){for(;this.pendingElements.length;){var t=this.pendingElements.pop();t.checkParenting();}},HybridRendererBase.prototype.appendElementInPos=function(t,e){var r=t.getBaseElement();if(r){var i=this.layers[e];if(!i.ddd||!this.supports3d)if(this.threeDElements)this.addTo3dContainer(r,e);else {for(var s=0,a,n,o;s<e;)this.elements[s]&&this.elements[s]!==!0&&this.elements[s].getBaseElement&&(n=this.elements[s],o=this.layers[s].ddd?this.getThreeDContainerByPos(s):n.getBaseElement(),a=o||a),s+=1;a?(!i.ddd||!this.supports3d)&&this.layerElement.insertBefore(r,a):(!i.ddd||!this.supports3d)&&this.layerElement.appendChild(r);}else this.addTo3dContainer(r,e);}},HybridRendererBase.prototype.createShape=function(t){return this.supports3d?new HShapeElement(t,this.globalData,this):new SVGShapeElement(t,this.globalData,this)},HybridRendererBase.prototype.createText=function(t){return this.supports3d?new HTextElement(t,this.globalData,this):new SVGTextLottieElement(t,this.globalData,this)},HybridRendererBase.prototype.createCamera=function(t){return this.camera=new HCameraElement(t,this.globalData,this),this.camera},HybridRendererBase.prototype.createImage=function(t){return this.supports3d?new HImageElement(t,this.globalData,this):new IImageElement(t,this.globalData,this)},HybridRendererBase.prototype.createSolid=function(t){return this.supports3d?new HSolidElement(t,this.globalData,this):new ISolidElement(t,this.globalData,this)},HybridRendererBase.prototype.createNull=SVGRenderer.prototype.createNull,HybridRendererBase.prototype.getThreeDContainerByPos=function(t){for(var e=0,r=this.threeDElements.length;e<r;){if(this.threeDElements[e].startPos<=t&&this.threeDElements[e].endPos>=t)return this.threeDElements[e].perspectiveElem;e+=1;}return null},HybridRendererBase.prototype.createThreeDContainer=function(t,e){var r=createTag(\"div\"),i,s;styleDiv(r);var a=createTag(\"div\");if(styleDiv(a),e===\"3d\"){i=r.style,i.width=this.globalData.compSize.w+\"px\",i.height=this.globalData.compSize.h+\"px\";var n=\"50% 50%\";i.webkitTransformOrigin=n,i.mozTransformOrigin=n,i.transformOrigin=n,s=a.style;var o=\"matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)\";s.transform=o,s.webkitTransform=o;}r.appendChild(a);var l={container:a,perspectiveElem:r,startPos:t,endPos:t,type:e};return this.threeDElements.push(l),l},HybridRendererBase.prototype.build3dContainers=function(){var t,e=this.layers.length,r,i=\"\";for(t=0;t<e;t+=1)this.layers[t].ddd&&this.layers[t].ty!==3?(i!==\"3d\"&&(i=\"3d\",r=this.createThreeDContainer(t,\"3d\")),r.endPos=Math.max(r.endPos,t)):(i!==\"2d\"&&(i=\"2d\",r=this.createThreeDContainer(t,\"2d\")),r.endPos=Math.max(r.endPos,t));for(e=this.threeDElements.length,t=e-1;t>=0;t-=1)this.resizerElem.appendChild(this.threeDElements[t].perspectiveElem);},HybridRendererBase.prototype.addTo3dContainer=function(t,e){for(var r=0,i=this.threeDElements.length;r<i;){if(e<=this.threeDElements[r].endPos){for(var s=this.threeDElements[r].startPos,a;s<e;)this.elements[s]&&this.elements[s].getBaseElement&&(a=this.elements[s].getBaseElement()),s+=1;a?this.threeDElements[r].container.insertBefore(t,a):this.threeDElements[r].container.appendChild(t);break}r+=1;}},HybridRendererBase.prototype.configAnimation=function(t){var e=createTag(\"div\"),r=this.animationItem.wrapper,i=e.style;i.width=t.w+\"px\",i.height=t.h+\"px\",this.resizerElem=e,styleDiv(e),i.transformStyle=\"flat\",i.mozTransformStyle=\"flat\",i.webkitTransformStyle=\"flat\",this.renderConfig.className&&e.setAttribute(\"class\",this.renderConfig.className),r.appendChild(e),i.overflow=\"hidden\";var s=createNS(\"svg\");s.setAttribute(\"width\",\"1\"),s.setAttribute(\"height\",\"1\"),styleDiv(s),this.resizerElem.appendChild(s);var a=createNS(\"defs\");s.appendChild(a),this.data=t,this.setupGlobalData(t,s),this.globalData.defs=a,this.layers=t.layers,this.layerElement=this.resizerElem,this.build3dContainers(),this.updateContainerSize();},HybridRendererBase.prototype.destroy=function(){this.animationItem.wrapper&&(this.animationItem.wrapper.innerText=\"\"),this.animationItem.container=null,this.globalData.defs=null;var t,e=this.layers?this.layers.length:0;for(t=0;t<e;t+=1)this.elements[t]&&this.elements[t].destroy&&this.elements[t].destroy();this.elements.length=0,this.destroyed=!0,this.animationItem=null;},HybridRendererBase.prototype.updateContainerSize=function(){var t=this.animationItem.wrapper.offsetWidth,e=this.animationItem.wrapper.offsetHeight,r=t/e,i=this.globalData.compSize.w/this.globalData.compSize.h,s,a,n,o;i>r?(s=t/this.globalData.compSize.w,a=t/this.globalData.compSize.w,n=0,o=(e-this.globalData.compSize.h*(t/this.globalData.compSize.w))/2):(s=e/this.globalData.compSize.h,a=e/this.globalData.compSize.h,n=(t-this.globalData.compSize.w*(e/this.globalData.compSize.h))/2,o=0);var l=this.resizerElem.style;l.webkitTransform=\"matrix3d(\"+s+\",0,0,0,0,\"+a+\",0,0,0,0,1,0,\"+n+\",\"+o+\",0,1)\",l.transform=l.webkitTransform;},HybridRendererBase.prototype.renderFrame=SVGRenderer.prototype.renderFrame,HybridRendererBase.prototype.hide=function(){this.resizerElem.style.display=\"none\";},HybridRendererBase.prototype.show=function(){this.resizerElem.style.display=\"block\";},HybridRendererBase.prototype.initItems=function(){if(this.buildAllItems(),this.camera)this.camera.setup();else {var t=this.globalData.compSize.w,e=this.globalData.compSize.h,r,i=this.threeDElements.length;for(r=0;r<i;r+=1){var s=this.threeDElements[r].perspectiveElem.style;s.webkitPerspective=Math.sqrt(Math.pow(t,2)+Math.pow(e,2))+\"px\",s.perspective=s.webkitPerspective;}}},HybridRendererBase.prototype.searchExtraCompositions=function(t){var e,r=t.length,i=createTag(\"div\");for(e=0;e<r;e+=1)if(t[e].xt){var s=this.createComp(t[e],i,this.globalData.comp,null);s.initExpressions(),this.globalData.projectInterface.registerComposition(s);}};function HCompElement(t,e,r){this.layers=t.layers,this.supports3d=!t.hasMask,this.completeLayers=!1,this.pendingElements=[],this.elements=this.layers?createSizedArray(this.layers.length):[],this.initElement(t,e,r),this.tm=t.tm?PropertyFactory.getProp(this,t.tm,0,e.frameRate,this):{_placeholder:!0};}extendPrototype([HybridRendererBase,ICompElement,HBaseElement],HCompElement),HCompElement.prototype._createBaseContainerElements=HCompElement.prototype.createContainerElements,HCompElement.prototype.createContainerElements=function(){this._createBaseContainerElements(),this.data.hasMask?(this.svgElement.setAttribute(\"width\",this.data.w),this.svgElement.setAttribute(\"height\",this.data.h),this.transformedElement=this.baseElement):this.transformedElement=this.layerElement;},HCompElement.prototype.addTo3dContainer=function(t,e){for(var r=0,i;r<e;)this.elements[r]&&this.elements[r].getBaseElement&&(i=this.elements[r].getBaseElement()),r+=1;i?this.layerElement.insertBefore(t,i):this.layerElement.appendChild(t);},HCompElement.prototype.createComp=function(t){return this.supports3d?new HCompElement(t,this.globalData,this):new SVGCompElement(t,this.globalData,this)};function HybridRenderer(t,e){this.animationItem=t,this.layers=null,this.renderedFrame=-1,this.renderConfig={className:e&&e.className||\"\",imagePreserveAspectRatio:e&&e.imagePreserveAspectRatio||\"xMidYMid slice\",hideOnTransparent:!(e&&e.hideOnTransparent===!1),filterSize:{width:e&&e.filterSize&&e.filterSize.width||\"400%\",height:e&&e.filterSize&&e.filterSize.height||\"400%\",x:e&&e.filterSize&&e.filterSize.x||\"-100%\",y:e&&e.filterSize&&e.filterSize.y||\"-100%\"},runExpressions:!e||e.runExpressions===void 0||e.runExpressions},this.globalData={_mdf:!1,frameNum:-1,renderConfig:this.renderConfig},this.pendingElements=[],this.elements=[],this.threeDElements=[],this.destroyed=!1,this.camera=null,this.supports3d=!0,this.rendererType=\"html\";}extendPrototype([HybridRendererBase],HybridRenderer),HybridRenderer.prototype.createComp=function(t){return this.supports3d?new HCompElement(t,this.globalData,this):new SVGCompElement(t,this.globalData,this)};var CompExpressionInterface=function(){return function(t){function e(r){for(var i=0,s=t.layers.length;i<s;){if(t.layers[i].nm===r||t.layers[i].ind===r)return t.elements[i].layerInterface;i+=1;}return null}return Object.defineProperty(e,\"_name\",{value:t.data.nm}),e.layer=e,e.pixelAspect=1,e.height=t.data.h||t.globalData.compSize.h,e.width=t.data.w||t.globalData.compSize.w,e.pixelAspect=1,e.frameDuration=1/t.globalData.frameRate,e.displayStartTime=0,e.numLayers=t.layers.length,e}}();function _typeof$2(t){\"@babel/helpers - typeof\";return typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?_typeof$2=function(e){return typeof e}:_typeof$2=function(e){return e&&typeof Symbol==\"function\"&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},_typeof$2(t)}function seedRandom(t,e){var r=this,i=256,s=6,a=52,n=\"random\",o=e.pow(i,s),l=e.pow(2,a),h=l*2,u=i-1;function m(b,x,S){var C=[];x=x===!0?{entropy:!0}:x||{};var _=v(c(x.entropy?[b,g(t)]:b===null?y():b,3),C),T=new d(C),L=function(){for(var G=T.g(s),R=o,j=0;G<l;)G=(G+j)*i,R*=i,j=T.g(1);for(;G>=h;)G/=2,R/=2,j>>>=1;return (G+j)/R};return L.int32=function(){return T.g(4)|0},L.quick=function(){return T.g(4)/4294967296},L.double=L,v(g(T.S),t),(x.pass||S||function(G,R,j,$){return $&&($.S&&p($,T),G.state=function(){return p(T,{})}),j?(e[n]=G,R):G})(L,_,\"global\"in x?x.global:this==e,x.state)}e[\"seed\"+n]=m;function d(b){var x,S=b.length,C=this,_=0,T=C.i=C.j=0,L=C.S=[];for(S||(b=[S++]);_<i;)L[_]=_++;for(_=0;_<i;_++)L[_]=L[T=u&T+b[_%S]+(x=L[_])],L[T]=x;C.g=function(G){for(var R,j=0,$=C.i,F=C.j,W=C.S;G--;)R=W[$=u&$+1],j=j*i+W[u&(W[$]=W[F=u&F+R])+(W[F]=R)];return C.i=$,C.j=F,j};}function p(b,x){return x.i=b.i,x.j=b.j,x.S=b.S.slice(),x}function c(b,x){var S=[],C=_typeof$2(b),_;if(x&&C==\"object\")for(_ in b)try{S.push(c(b[_],x-1));}catch{}return S.length?S:C==\"string\"?b:b+\"\\0\"}function v(b,x){for(var S=b+\"\",C,_=0;_<S.length;)x[u&_]=u&(C^=x[u&_]*19)+S.charCodeAt(_++);return g(x)}function y(){try{var b=new Uint8Array(i);return (r.crypto||r.msCrypto).getRandomValues(b),g(b)}catch{var x=r.navigator,S=x&&x.plugins;return [+new Date,r,S,r.screen,g(t)]}}function g(b){return String.fromCharCode.apply(0,b)}v(e.random(),t);}function initialize$2(t){seedRandom([],t);}var propTypes={SHAPE:\"shape\"};function _typeof$1(t){\"@babel/helpers - typeof\";return typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?_typeof$1=function(e){return typeof e}:_typeof$1=function(e){return e&&typeof Symbol==\"function\"&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},_typeof$1(t)}var ExpressionManager=function(){var ob={},Math=BMMath,window=null,document=null,XMLHttpRequest=null,fetch=null,frames=null,_lottieGlobal={};initialize$2(BMMath);function resetFrame(){_lottieGlobal={};}function $bm_isInstanceOfArray(t){return t.constructor===Array||t.constructor===Float32Array}function isNumerable(t,e){return t===\"number\"||e instanceof Number||t===\"boolean\"||t===\"string\"}function $bm_neg(t){var e=_typeof$1(t);if(e===\"number\"||t instanceof Number||e===\"boolean\")return -t;if($bm_isInstanceOfArray(t)){var r,i=t.length,s=[];for(r=0;r<i;r+=1)s[r]=-t[r];return s}return t.propType?t.v:-t}var easeInBez=BezierFactory.getBezierEasing(.333,0,.833,.833,\"easeIn\").get,easeOutBez=BezierFactory.getBezierEasing(.167,.167,.667,1,\"easeOut\").get,easeInOutBez=BezierFactory.getBezierEasing(.33,0,.667,1,\"easeInOut\").get;function sum(t,e){var r=_typeof$1(t),i=_typeof$1(e);if(isNumerable(r,t)&&isNumerable(i,e)||r===\"string\"||i===\"string\")return t+e;if($bm_isInstanceOfArray(t)&&isNumerable(i,e))return t=t.slice(0),t[0]+=e,t;if(isNumerable(r,t)&&$bm_isInstanceOfArray(e))return e=e.slice(0),e[0]=t+e[0],e;if($bm_isInstanceOfArray(t)&&$bm_isInstanceOfArray(e)){for(var s=0,a=t.length,n=e.length,o=[];s<a||s<n;)(typeof t[s]==\"number\"||t[s]instanceof Number)&&(typeof e[s]==\"number\"||e[s]instanceof Number)?o[s]=t[s]+e[s]:o[s]=e[s]===void 0?t[s]:t[s]||e[s],s+=1;return o}return 0}var add=sum;function sub(t,e){var r=_typeof$1(t),i=_typeof$1(e);if(isNumerable(r,t)&&isNumerable(i,e))return r===\"string\"&&(t=parseInt(t,10)),i===\"string\"&&(e=parseInt(e,10)),t-e;if($bm_isInstanceOfArray(t)&&isNumerable(i,e))return t=t.slice(0),t[0]-=e,t;if(isNumerable(r,t)&&$bm_isInstanceOfArray(e))return e=e.slice(0),e[0]=t-e[0],e;if($bm_isInstanceOfArray(t)&&$bm_isInstanceOfArray(e)){for(var s=0,a=t.length,n=e.length,o=[];s<a||s<n;)(typeof t[s]==\"number\"||t[s]instanceof Number)&&(typeof e[s]==\"number\"||e[s]instanceof Number)?o[s]=t[s]-e[s]:o[s]=e[s]===void 0?t[s]:t[s]||e[s],s+=1;return o}return 0}function mul(t,e){var r=_typeof$1(t),i=_typeof$1(e),s;if(isNumerable(r,t)&&isNumerable(i,e))return t*e;var a,n;if($bm_isInstanceOfArray(t)&&isNumerable(i,e)){for(n=t.length,s=createTypedArray(\"float32\",n),a=0;a<n;a+=1)s[a]=t[a]*e;return s}if(isNumerable(r,t)&&$bm_isInstanceOfArray(e)){for(n=e.length,s=createTypedArray(\"float32\",n),a=0;a<n;a+=1)s[a]=t*e[a];return s}return 0}function div(t,e){var r=_typeof$1(t),i=_typeof$1(e),s;if(isNumerable(r,t)&&isNumerable(i,e))return t/e;var a,n;if($bm_isInstanceOfArray(t)&&isNumerable(i,e)){for(n=t.length,s=createTypedArray(\"float32\",n),a=0;a<n;a+=1)s[a]=t[a]/e;return s}if(isNumerable(r,t)&&$bm_isInstanceOfArray(e)){for(n=e.length,s=createTypedArray(\"float32\",n),a=0;a<n;a+=1)s[a]=t/e[a];return s}return 0}function mod(t,e){return typeof t==\"string\"&&(t=parseInt(t,10)),typeof e==\"string\"&&(e=parseInt(e,10)),t%e}var $bm_sum=sum,$bm_sub=sub,$bm_mul=mul,$bm_div=div,$bm_mod=mod;function clamp(t,e,r){if(e>r){var i=r;r=e,e=i;}return Math.min(Math.max(t,e),r)}function radiansToDegrees(t){return t/degToRads}var radians_to_degrees=radiansToDegrees;function degreesToRadians(t){return t*degToRads}var degrees_to_radians=radiansToDegrees,helperLengthArray=[0,0,0,0,0,0];function length(t,e){if(typeof t==\"number\"||t instanceof Number)return e=e||0,Math.abs(t-e);e||(e=helperLengthArray);var r,i=Math.min(t.length,e.length),s=0;for(r=0;r<i;r+=1)s+=Math.pow(e[r]-t[r],2);return Math.sqrt(s)}function normalize(t){return div(t,length(t))}function rgbToHsl(t){var e=t[0],r=t[1],i=t[2],s=Math.max(e,r,i),a=Math.min(e,r,i),n,o,l=(s+a)/2;if(s===a)n=0,o=0;else {var h=s-a;switch(o=l>.5?h/(2-s-a):h/(s+a),s){case e:n=(r-i)/h+(r<i?6:0);break;case r:n=(i-e)/h+2;break;case i:n=(e-r)/h+4;break}n/=6;}return [n,o,l,t[3]]}function hue2rgb(t,e,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?t+(e-t)*6*r:r<1/2?e:r<2/3?t+(e-t)*(2/3-r)*6:t}function hslToRgb(t){var e=t[0],r=t[1],i=t[2],s,a,n;if(r===0)s=i,n=i,a=i;else {var o=i<.5?i*(1+r):i+r-i*r,l=2*i-o;s=hue2rgb(l,o,e+1/3),a=hue2rgb(l,o,e),n=hue2rgb(l,o,e-1/3);}return [s,a,n,t[3]]}function linear(t,e,r,i,s){if((i===void 0||s===void 0)&&(i=e,s=r,e=0,r=1),r<e){var a=r;r=e,e=a;}if(t<=e)return i;if(t>=r)return s;var n=r===e?0:(t-e)/(r-e);if(!i.length)return i+(s-i)*n;var o,l=i.length,h=createTypedArray(\"float32\",l);for(o=0;o<l;o+=1)h[o]=i[o]+(s[o]-i[o])*n;return h}function random(t,e){if(e===void 0&&(t===void 0?(t=0,e=1):(e=t,t=void 0)),e.length){var r,i=e.length;t||(t=createTypedArray(\"float32\",i));var s=createTypedArray(\"float32\",i),a=BMMath.random();for(r=0;r<i;r+=1)s[r]=t[r]+a*(e[r]-t[r]);return s}t===void 0&&(t=0);var n=BMMath.random();return t+n*(e-t)}function createPath(t,e,r,i){var s,a=t.length,n=shapePool.newElement();n.setPathData(!!i,a);var o=[0,0],l,h;for(s=0;s<a;s+=1)l=e&&e[s]?e[s]:o,h=r&&r[s]?r[s]:o,n.setTripleAt(t[s][0],t[s][1],h[0]+t[s][0],h[1]+t[s][1],l[0]+t[s][0],l[1]+t[s][1],s,!0);return n}function initiateExpression(elem,data,property){function noOp(t){return t}if(!elem.globalData.renderConfig.runExpressions)return noOp;var val=data.x,needsVelocity=/velocity(?![\\w\\d])/.test(val),_needsRandom=val.indexOf(\"random\")!==-1,elemType=elem.data.ty,transform,$bm_transform,content,effect,thisProperty=property;thisProperty.valueAtTime=thisProperty.getValueAtTime,Object.defineProperty(thisProperty,\"value\",{get:function(){return thisProperty.v}}),elem.comp.frameDuration=1/elem.comp.globalData.frameRate,elem.comp.displayStartTime=0;var inPoint=elem.data.ip/elem.comp.globalData.frameRate,outPoint=elem.data.op/elem.comp.globalData.frameRate,width=elem.data.sw?elem.data.sw:0,height=elem.data.sh?elem.data.sh:0,name=elem.data.nm,loopIn,loop_in,loopOut,loop_out,smooth,toWorld,fromWorld,fromComp,toComp,fromCompToSurface,position,rotation,anchorPoint,scale,thisLayer,thisComp,mask,valueAtTime,velocityAtTime,scoped_bm_rt,expression_function=eval(\"[function _expression_function(){\"+val+\";scoped_bm_rt=$bm_rt}]\")[0],numKeys=property.kf?data.k.length:0,active=!this.data||this.data.hd!==!0,wiggle=function t(e,r){var i,s,a=this.pv.length?this.pv.length:1,n=createTypedArray(\"float32\",a);e=5;var o=Math.floor(time*e);for(i=0,s=0;i<o;){for(s=0;s<a;s+=1)n[s]+=-r+r*2*BMMath.random();i+=1;}var l=time*e,h=l-Math.floor(l),u=createTypedArray(\"float32\",a);if(a>1){for(s=0;s<a;s+=1)u[s]=this.pv[s]+n[s]+(-r+r*2*BMMath.random())*h;return u}return this.pv+n[0]+(-r+r*2*BMMath.random())*h}.bind(this);thisProperty.loopIn&&(loopIn=thisProperty.loopIn.bind(thisProperty),loop_in=loopIn),thisProperty.loopOut&&(loopOut=thisProperty.loopOut.bind(thisProperty),loop_out=loopOut),thisProperty.smooth&&(smooth=thisProperty.smooth.bind(thisProperty));function loopInDuration(t,e){return loopIn(t,e,!0)}function loopOutDuration(t,e){return loopOut(t,e,!0)}this.getValueAtTime&&(valueAtTime=this.getValueAtTime.bind(this)),this.getVelocityAtTime&&(velocityAtTime=this.getVelocityAtTime.bind(this));var comp=elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);function lookAt(t,e){var r=[e[0]-t[0],e[1]-t[1],e[2]-t[2]],i=Math.atan2(r[0],Math.sqrt(r[1]*r[1]+r[2]*r[2]))/degToRads,s=-Math.atan2(r[1],r[2])/degToRads;return [s,i,0]}function easeOut(t,e,r,i,s){return applyEase(easeOutBez,t,e,r,i,s)}function easeIn(t,e,r,i,s){return applyEase(easeInBez,t,e,r,i,s)}function ease(t,e,r,i,s){return applyEase(easeInOutBez,t,e,r,i,s)}function applyEase(t,e,r,i,s,a){s===void 0?(s=r,a=i):e=(e-r)/(i-r),e>1?e=1:e<0&&(e=0);var n=t(e);if($bm_isInstanceOfArray(s)){var o,l=s.length,h=createTypedArray(\"float32\",l);for(o=0;o<l;o+=1)h[o]=(a[o]-s[o])*n+s[o];return h}return (a-s)*n+s}function nearestKey(t){var e,r=data.k.length,i,s;if(!data.k.length||typeof data.k[0]==\"number\")i=0,s=0;else if(i=-1,t*=elem.comp.globalData.frameRate,t<data.k[0].t)i=1,s=data.k[0].t;else {for(e=0;e<r-1;e+=1)if(t===data.k[e].t){i=e+1,s=data.k[e].t;break}else if(t>data.k[e].t&&t<data.k[e+1].t){t-data.k[e].t>data.k[e+1].t-t?(i=e+2,s=data.k[e+1].t):(i=e+1,s=data.k[e].t);break}i===-1&&(i=e+1,s=data.k[e].t);}var a={};return a.index=i,a.time=s/elem.comp.globalData.frameRate,a}function key(t){var e,r,i;if(!data.k.length||typeof data.k[0]==\"number\")throw new Error(\"The property has no keyframe at index \"+t);t-=1,e={time:data.k[t].t/elem.comp.globalData.frameRate,value:[]};var s=Object.prototype.hasOwnProperty.call(data.k[t],\"s\")?data.k[t].s:data.k[t-1].e;for(i=s.length,r=0;r<i;r+=1)e[r]=s[r],e.value[r]=s[r];return e}function framesToTime(t,e){return e||(e=elem.comp.globalData.frameRate),t/e}function timeToFrames(t,e){return !t&&t!==0&&(t=time),e||(e=elem.comp.globalData.frameRate),t*e}function seedRandom(t){BMMath.seedrandom(randSeed+t);}function sourceRectAtTime(){return elem.sourceRectAtTime()}function substring(t,e){return typeof value==\"string\"?e===void 0?value.substring(t):value.substring(t,e):\"\"}function substr(t,e){return typeof value==\"string\"?e===void 0?value.substr(t):value.substr(t,e):\"\"}function posterizeTime(t){time=t===0?0:Math.floor(time*t)/t,value=valueAtTime(time);}var time,velocity,value,text,textIndex,textTotal,selectorValue,index=elem.data.ind,hasParent=!!(elem.hierarchy&&elem.hierarchy.length),parent,randSeed=Math.floor(Math.random()*1e6),globalData=elem.globalData;function executeExpression(t){return value=t,this.frameExpressionId===elem.globalData.frameId&&this.propType!==\"textSelector\"?value:(this.propType===\"textSelector\"&&(textIndex=this.textIndex,textTotal=this.textTotal,selectorValue=this.selectorValue),thisLayer||(text=elem.layerInterface.text,thisLayer=elem.layerInterface,thisComp=elem.comp.compInterface,toWorld=thisLayer.toWorld.bind(thisLayer),fromWorld=thisLayer.fromWorld.bind(thisLayer),fromComp=thisLayer.fromComp.bind(thisLayer),toComp=thisLayer.toComp.bind(thisLayer),mask=thisLayer.mask?thisLayer.mask.bind(thisLayer):null,fromCompToSurface=fromComp),transform||(transform=elem.layerInterface(\"ADBE Transform Group\"),$bm_transform=transform,transform&&(anchorPoint=transform.anchorPoint)),elemType===4&&!content&&(content=thisLayer(\"ADBE Root Vectors Group\")),effect||(effect=thisLayer(4)),hasParent=!!(elem.hierarchy&&elem.hierarchy.length),hasParent&&!parent&&(parent=elem.hierarchy[0].layerInterface),time=this.comp.renderedFrame/this.comp.globalData.frameRate,_needsRandom&&seedRandom(randSeed+time),needsVelocity&&(velocity=velocityAtTime(time)),expression_function(),this.frameExpressionId=elem.globalData.frameId,scoped_bm_rt=scoped_bm_rt.propType===propTypes.SHAPE?scoped_bm_rt.v:scoped_bm_rt,scoped_bm_rt)}return executeExpression.__preventDeadCodeRemoval=[$bm_transform,anchorPoint,time,velocity,inPoint,outPoint,width,height,name,loop_in,loop_out,smooth,toComp,fromCompToSurface,toWorld,fromWorld,mask,position,rotation,scale,thisComp,numKeys,active,wiggle,loopInDuration,loopOutDuration,comp,lookAt,easeOut,easeIn,ease,nearestKey,key,text,textIndex,textTotal,selectorValue,framesToTime,timeToFrames,sourceRectAtTime,substring,substr,posterizeTime,index,globalData],executeExpression}return ob.initiateExpression=initiateExpression,ob.__preventDeadCodeRemoval=[window,document,XMLHttpRequest,fetch,frames,$bm_neg,add,$bm_sum,$bm_sub,$bm_mul,$bm_div,$bm_mod,clamp,radians_to_degrees,degreesToRadians,degrees_to_radians,normalize,rgbToHsl,hslToRgb,linear,random,createPath,_lottieGlobal],ob.resetFrame=resetFrame,ob}(),Expressions=function(){var t={};t.initExpressions=e,t.resetFrame=ExpressionManager.resetFrame;function e(r){var i=0,s=[];function a(){i+=1;}function n(){i-=1,i===0&&l();}function o(h){s.indexOf(h)===-1&&s.push(h);}function l(){var h,u=s.length;for(h=0;h<u;h+=1)s[h].release();s.length=0;}r.renderer.compInterface=CompExpressionInterface(r.renderer),r.renderer.globalData.projectInterface.registerComposition(r.renderer),r.renderer.globalData.pushExpression=a,r.renderer.globalData.popExpression=n,r.renderer.globalData.registerExpressionProperty=o;}return t}(),MaskManagerInterface=function(){function t(r,i){this._mask=r,this._data=i;}Object.defineProperty(t.prototype,\"maskPath\",{get:function(){return this._mask.prop.k&&this._mask.prop.getValue(),this._mask.prop}}),Object.defineProperty(t.prototype,\"maskOpacity\",{get:function(){return this._mask.op.k&&this._mask.op.getValue(),this._mask.op.v*100}});var e=function(r){var i=createSizedArray(r.viewData.length),s,a=r.viewData.length;for(s=0;s<a;s+=1)i[s]=new t(r.viewData[s],r.masksProperties[s]);var n=function(o){for(s=0;s<a;){if(r.masksProperties[s].nm===o)return i[s];s+=1;}return null};return n};return e}(),ExpressionPropertyInterface=function(){var t={pv:0,v:0,mult:1},e={pv:[0,0,0],v:[0,0,0],mult:1};function r(n,o,l){Object.defineProperty(n,\"velocity\",{get:function(){return o.getVelocityAtTime(o.comp.currentFrame)}}),n.numKeys=o.keyframes?o.keyframes.length:0,n.key=function(h){if(!n.numKeys)return 0;var u=\"\";\"s\"in o.keyframes[h-1]?u=o.keyframes[h-1].s:\"e\"in o.keyframes[h-2]?u=o.keyframes[h-2].e:u=o.keyframes[h-2].s;var f=l===\"unidimensional\"?new Number(u):Object.assign({},u);return f.time=o.keyframes[h-1].t/o.elem.comp.globalData.frameRate,f.value=l===\"unidimensional\"?u[0]:u,f},n.valueAtTime=o.getValueAtTime,n.speedAtTime=o.getSpeedAtTime,n.velocityAtTime=o.getVelocityAtTime,n.propertyGroup=o.propertyGroup;}function i(n){(!n||!(\"pv\"in n))&&(n=t);var o=1/n.mult,l=n.pv*o,h=new Number(l);return h.value=l,r(h,n,\"unidimensional\"),function(){return n.k&&n.getValue(),l=n.v*o,h.value!==l&&(h=new Number(l),h.value=l,r(h,n,\"unidimensional\")),h}}function s(n){(!n||!(\"pv\"in n))&&(n=e);var o=1/n.mult,l=n.data&&n.data.l||n.pv.length,h=createTypedArray(\"float32\",l),u=createTypedArray(\"float32\",l);return h.value=u,r(h,n,\"multidimensional\"),function(){n.k&&n.getValue();for(var f=0;f<l;f+=1)u[f]=n.v[f]*o,h[f]=u[f];return h}}function a(){return t}return function(n){return n?n.propType===\"unidimensional\"?i(n):s(n):a}}(),TransformExpressionInterface=function(){return function(t){function e(n){switch(n){case\"scale\":case\"Scale\":case\"ADBE Scale\":case 6:return e.scale;case\"rotation\":case\"Rotation\":case\"ADBE Rotation\":case\"ADBE Rotate Z\":case 10:return e.rotation;case\"ADBE Rotate X\":return e.xRotation;case\"ADBE Rotate Y\":return e.yRotation;case\"position\":case\"Position\":case\"ADBE Position\":case 2:return e.position;case\"ADBE Position_0\":return e.xPosition;case\"ADBE Position_1\":return e.yPosition;case\"ADBE Position_2\":return e.zPosition;case\"anchorPoint\":case\"AnchorPoint\":case\"Anchor Point\":case\"ADBE AnchorPoint\":case 1:return e.anchorPoint;case\"opacity\":case\"Opacity\":case 11:return e.opacity;default:return null}}Object.defineProperty(e,\"rotation\",{get:ExpressionPropertyInterface(t.r||t.rz)}),Object.defineProperty(e,\"zRotation\",{get:ExpressionPropertyInterface(t.rz||t.r)}),Object.defineProperty(e,\"xRotation\",{get:ExpressionPropertyInterface(t.rx)}),Object.defineProperty(e,\"yRotation\",{get:ExpressionPropertyInterface(t.ry)}),Object.defineProperty(e,\"scale\",{get:ExpressionPropertyInterface(t.s)});var r,i,s,a;return t.p?a=ExpressionPropertyInterface(t.p):(r=ExpressionPropertyInterface(t.px),i=ExpressionPropertyInterface(t.py),t.pz&&(s=ExpressionPropertyInterface(t.pz))),Object.defineProperty(e,\"position\",{get:function(){return t.p?a():[r(),i(),s?s():0]}}),Object.defineProperty(e,\"xPosition\",{get:ExpressionPropertyInterface(t.px)}),Object.defineProperty(e,\"yPosition\",{get:ExpressionPropertyInterface(t.py)}),Object.defineProperty(e,\"zPosition\",{get:ExpressionPropertyInterface(t.pz)}),Object.defineProperty(e,\"anchorPoint\",{get:ExpressionPropertyInterface(t.a)}),Object.defineProperty(e,\"opacity\",{get:ExpressionPropertyInterface(t.o)}),Object.defineProperty(e,\"skew\",{get:ExpressionPropertyInterface(t.sk)}),Object.defineProperty(e,\"skewAxis\",{get:ExpressionPropertyInterface(t.sa)}),Object.defineProperty(e,\"orientation\",{get:ExpressionPropertyInterface(t.or)}),e}}(),LayerExpressionInterface=function(){function t(h){var u=new Matrix;if(h!==void 0){var f=this._elem.finalTransform.mProp.getValueAtTime(h);f.clone(u);}else {var m=this._elem.finalTransform.mProp;m.applyToMatrix(u);}return u}function e(h,u){var f=this.getMatrix(u);return f.props[12]=0,f.props[13]=0,f.props[14]=0,this.applyPoint(f,h)}function r(h,u){var f=this.getMatrix(u);return this.applyPoint(f,h)}function i(h,u){var f=this.getMatrix(u);return f.props[12]=0,f.props[13]=0,f.props[14]=0,this.invertPoint(f,h)}function s(h,u){var f=this.getMatrix(u);return this.invertPoint(f,h)}function a(h,u){if(this._elem.hierarchy&&this._elem.hierarchy.length){var f,m=this._elem.hierarchy.length;for(f=0;f<m;f+=1)this._elem.hierarchy[f].finalTransform.mProp.applyToMatrix(h);}return h.applyToPointArray(u[0],u[1],u[2]||0)}function n(h,u){if(this._elem.hierarchy&&this._elem.hierarchy.length){var f,m=this._elem.hierarchy.length;for(f=0;f<m;f+=1)this._elem.hierarchy[f].finalTransform.mProp.applyToMatrix(h);}return h.inversePoint(u)}function o(h){var u=new Matrix;if(u.reset(),this._elem.finalTransform.mProp.applyToMatrix(u),this._elem.hierarchy&&this._elem.hierarchy.length){var f,m=this._elem.hierarchy.length;for(f=0;f<m;f+=1)this._elem.hierarchy[f].finalTransform.mProp.applyToMatrix(u);return u.inversePoint(h)}return u.inversePoint(h)}function l(){return [1,1,1,1]}return function(h){var u;function f(c){d.mask=new MaskManagerInterface(c,h);}function m(c){d.effect=c;}function d(c){switch(c){case\"ADBE Root Vectors Group\":case\"Contents\":case 2:return d.shapeInterface;case 1:case 6:case\"Transform\":case\"transform\":case\"ADBE Transform Group\":return u;case 4:case\"ADBE Effect Parade\":case\"effects\":case\"Effects\":return d.effect;case\"ADBE Text Properties\":return d.textInterface;default:return null}}d.getMatrix=t,d.invertPoint=n,d.applyPoint=a,d.toWorld=r,d.toWorldVec=e,d.fromWorld=s,d.fromWorldVec=i,d.toComp=r,d.fromComp=o,d.sampleImage=l,d.sourceRectAtTime=h.sourceRectAtTime.bind(h),d._elem=h,u=TransformExpressionInterface(h.finalTransform.mProp);var p=getDescriptor(u,\"anchorPoint\");return Object.defineProperties(d,{hasParent:{get:function(){return h.hierarchy.length}},parent:{get:function(){return h.hierarchy[0].layerInterface}},rotation:getDescriptor(u,\"rotation\"),scale:getDescriptor(u,\"scale\"),position:getDescriptor(u,\"position\"),opacity:getDescriptor(u,\"opacity\"),anchorPoint:p,anchor_point:p,transform:{get:function(){return u}},active:{get:function(){return h.isInRange}}}),d.startTime=h.data.st,d.index=h.data.ind,d.source=h.data.refId,d.height=h.data.ty===0?h.data.h:100,d.width=h.data.ty===0?h.data.w:100,d.inPoint=h.data.ip/h.comp.globalData.frameRate,d.outPoint=h.data.op/h.comp.globalData.frameRate,d._name=h.data.nm,d.registerMaskInterface=f,d.registerEffectsInterface=m,d}}(),propertyGroupFactory=function(){return function(t,e){return function(r){return r=r===void 0?1:r,r<=0?t:e(r-1)}}}(),PropertyInterface=function(){return function(t,e){var r={_name:t};function i(s){return s=s===void 0?1:s,s<=0?r:e(s-1)}return i}}(),EffectsExpressionInterface=function(){var t={createEffectsInterface:e};function e(s,a){if(s.effectsManager){var n=[],o=s.data.ef,l,h=s.effectsManager.effectElements.length;for(l=0;l<h;l+=1)n.push(r(o[l],s.effectsManager.effectElements[l],a,s));var u=s.data.ef||[],f=function(m){for(l=0,h=u.length;l<h;){if(m===u[l].nm||m===u[l].mn||m===u[l].ix)return n[l];l+=1;}return null};return Object.defineProperty(f,\"numProperties\",{get:function(){return u.length}}),f}return null}function r(s,a,n,o){function l(d){for(var p=s.ef,c=0,v=p.length;c<v;){if(d===p[c].nm||d===p[c].mn||d===p[c].ix)return p[c].ty===5?u[c]:u[c]();c+=1;}throw new Error}var h=propertyGroupFactory(l,n),u=[],f,m=s.ef.length;for(f=0;f<m;f+=1)s.ef[f].ty===5?u.push(r(s.ef[f],a.effectElements[f],a.effectElements[f].propertyGroup,o)):u.push(i(a.effectElements[f],s.ef[f].ty,o,h));return s.mn===\"ADBE Color Control\"&&Object.defineProperty(l,\"color\",{get:function(){return u[0]()}}),Object.defineProperties(l,{numProperties:{get:function(){return s.np}},_name:{value:s.nm},propertyGroup:{value:h}}),l.enabled=s.en!==0,l.active=l.enabled,l}function i(s,a,n,o){var l=ExpressionPropertyInterface(s.p);function h(){return a===10?n.comp.compInterface(s.p.v):l()}return s.p.setGroupProperty&&s.p.setGroupProperty(PropertyInterface(\"\",o)),h}return t}(),ShapePathInterface=function(){return function(t,e,r){var i=e.sh;function s(n){return n===\"Shape\"||n===\"shape\"||n===\"Path\"||n===\"path\"||n===\"ADBE Vector Shape\"||n===2?s.path:null}var a=propertyGroupFactory(s,r);return i.setGroupProperty(PropertyInterface(\"Path\",a)),Object.defineProperties(s,{path:{get:function(){return i.k&&i.getValue(),i}},shape:{get:function(){return i.k&&i.getValue(),i}},_name:{value:t.nm},ix:{value:t.ix},propertyIndex:{value:t.ix},mn:{value:t.mn},propertyGroup:{value:r}}),s}}(),ShapeExpressionInterface=function(){function t(p,c,v){var y=[],g,b=p?p.length:0;for(g=0;g<b;g+=1)p[g].ty===\"gr\"?y.push(r(p[g],c[g],v)):p[g].ty===\"fl\"?y.push(i(p[g],c[g],v)):p[g].ty===\"st\"?y.push(n(p[g],c[g],v)):p[g].ty===\"tm\"?y.push(o(p[g],c[g],v)):p[g].ty===\"tr\"||(p[g].ty===\"el\"?y.push(h(p[g],c[g],v)):p[g].ty===\"sr\"?y.push(u(p[g],c[g],v)):p[g].ty===\"sh\"?y.push(ShapePathInterface(p[g],c[g],v)):p[g].ty===\"rc\"?y.push(f(p[g],c[g],v)):p[g].ty===\"rd\"?y.push(m(p[g],c[g],v)):p[g].ty===\"rp\"?y.push(d(p[g],c[g],v)):p[g].ty===\"gf\"?y.push(s(p[g],c[g],v)):y.push(a(p[g],c[g])));return y}function e(p,c,v){var y,g=function(x){for(var S=0,C=y.length;S<C;){if(y[S]._name===x||y[S].mn===x||y[S].propertyIndex===x||y[S].ix===x||y[S].ind===x)return y[S];S+=1;}return typeof x==\"number\"?y[x-1]:null};g.propertyGroup=propertyGroupFactory(g,v),y=t(p.it,c.it,g.propertyGroup),g.numProperties=y.length;var b=l(p.it[p.it.length-1],c.it[c.it.length-1],g.propertyGroup);return g.transform=b,g.propertyIndex=p.cix,g._name=p.nm,g}function r(p,c,v){var y=function(x){switch(x){case\"ADBE Vectors Group\":case\"Contents\":case 2:return y.content;default:return y.transform}};y.propertyGroup=propertyGroupFactory(y,v);var g=e(p,c,y.propertyGroup),b=l(p.it[p.it.length-1],c.it[c.it.length-1],y.propertyGroup);return y.content=g,y.transform=b,Object.defineProperty(y,\"_name\",{get:function(){return p.nm}}),y.numProperties=p.np,y.propertyIndex=p.ix,y.nm=p.nm,y.mn=p.mn,y}function i(p,c,v){function y(g){return g===\"Color\"||g===\"color\"?y.color:g===\"Opacity\"||g===\"opacity\"?y.opacity:null}return Object.defineProperties(y,{color:{get:ExpressionPropertyInterface(c.c)},opacity:{get:ExpressionPropertyInterface(c.o)},_name:{value:p.nm},mn:{value:p.mn}}),c.c.setGroupProperty(PropertyInterface(\"Color\",v)),c.o.setGroupProperty(PropertyInterface(\"Opacity\",v)),y}function s(p,c,v){function y(g){return g===\"Start Point\"||g===\"start point\"?y.startPoint:g===\"End Point\"||g===\"end point\"?y.endPoint:g===\"Opacity\"||g===\"opacity\"?y.opacity:null}return Object.defineProperties(y,{startPoint:{get:ExpressionPropertyInterface(c.s)},endPoint:{get:ExpressionPropertyInterface(c.e)},opacity:{get:ExpressionPropertyInterface(c.o)},type:{get:function(){return \"a\"}},_name:{value:p.nm},mn:{value:p.mn}}),c.s.setGroupProperty(PropertyInterface(\"Start Point\",v)),c.e.setGroupProperty(PropertyInterface(\"End Point\",v)),c.o.setGroupProperty(PropertyInterface(\"Opacity\",v)),y}function a(){function p(){return null}return p}function n(p,c,v){var y=propertyGroupFactory(_,v),g=propertyGroupFactory(C,y);function b(T){Object.defineProperty(C,p.d[T].nm,{get:ExpressionPropertyInterface(c.d.dataProps[T].p)});}var x,S=p.d?p.d.length:0,C={};for(x=0;x<S;x+=1)b(x),c.d.dataProps[x].p.setGroupProperty(g);function _(T){return T===\"Color\"||T===\"color\"?_.color:T===\"Opacity\"||T===\"opacity\"?_.opacity:T===\"Stroke Width\"||T===\"stroke width\"?_.strokeWidth:null}return Object.defineProperties(_,{color:{get:ExpressionPropertyInterface(c.c)},opacity:{get:ExpressionPropertyInterface(c.o)},strokeWidth:{get:ExpressionPropertyInterface(c.w)},dash:{get:function(){return C}},_name:{value:p.nm},mn:{value:p.mn}}),c.c.setGroupProperty(PropertyInterface(\"Color\",y)),c.o.setGroupProperty(PropertyInterface(\"Opacity\",y)),c.w.setGroupProperty(PropertyInterface(\"Stroke Width\",y)),_}function o(p,c,v){function y(b){return b===p.e.ix||b===\"End\"||b===\"end\"?y.end:b===p.s.ix?y.start:b===p.o.ix?y.offset:null}var g=propertyGroupFactory(y,v);return y.propertyIndex=p.ix,c.s.setGroupProperty(PropertyInterface(\"Start\",g)),c.e.setGroupProperty(PropertyInterface(\"End\",g)),c.o.setGroupProperty(PropertyInterface(\"Offset\",g)),y.propertyIndex=p.ix,y.propertyGroup=v,Object.defineProperties(y,{start:{get:ExpressionPropertyInterface(c.s)},end:{get:ExpressionPropertyInterface(c.e)},offset:{get:ExpressionPropertyInterface(c.o)},_name:{value:p.nm}}),y.mn=p.mn,y}function l(p,c,v){function y(b){return p.a.ix===b||b===\"Anchor Point\"?y.anchorPoint:p.o.ix===b||b===\"Opacity\"?y.opacity:p.p.ix===b||b===\"Position\"?y.position:p.r.ix===b||b===\"Rotation\"||b===\"ADBE Vector Rotation\"?y.rotation:p.s.ix===b||b===\"Scale\"?y.scale:p.sk&&p.sk.ix===b||b===\"Skew\"?y.skew:p.sa&&p.sa.ix===b||b===\"Skew Axis\"?y.skewAxis:null}var g=propertyGroupFactory(y,v);return c.transform.mProps.o.setGroupProperty(PropertyInterface(\"Opacity\",g)),c.transform.mProps.p.setGroupProperty(PropertyInterface(\"Position\",g)),c.transform.mProps.a.setGroupProperty(PropertyInterface(\"Anchor Point\",g)),c.transform.mProps.s.setGroupProperty(PropertyInterface(\"Scale\",g)),c.transform.mProps.r.setGroupProperty(PropertyInterface(\"Rotation\",g)),c.transform.mProps.sk&&(c.transform.mProps.sk.setGroupProperty(PropertyInterface(\"Skew\",g)),c.transform.mProps.sa.setGroupProperty(PropertyInterface(\"Skew Angle\",g))),c.transform.op.setGroupProperty(PropertyInterface(\"Opacity\",g)),Object.defineProperties(y,{opacity:{get:ExpressionPropertyInterface(c.transform.mProps.o)},position:{get:ExpressionPropertyInterface(c.transform.mProps.p)},anchorPoint:{get:ExpressionPropertyInterface(c.transform.mProps.a)},scale:{get:ExpressionPropertyInterface(c.transform.mProps.s)},rotation:{get:ExpressionPropertyInterface(c.transform.mProps.r)},skew:{get:ExpressionPropertyInterface(c.transform.mProps.sk)},skewAxis:{get:ExpressionPropertyInterface(c.transform.mProps.sa)},_name:{value:p.nm}}),y.ty=\"tr\",y.mn=p.mn,y.propertyGroup=v,y}function h(p,c,v){function y(x){return p.p.ix===x?y.position:p.s.ix===x?y.size:null}var g=propertyGroupFactory(y,v);y.propertyIndex=p.ix;var b=c.sh.ty===\"tm\"?c.sh.prop:c.sh;return b.s.setGroupProperty(PropertyInterface(\"Size\",g)),b.p.setGroupProperty(PropertyInterface(\"Position\",g)),Object.defineProperties(y,{size:{get:ExpressionPropertyInterface(b.s)},position:{get:ExpressionPropertyInterface(b.p)},_name:{value:p.nm}}),y.mn=p.mn,y}function u(p,c,v){function y(x){return p.p.ix===x?y.position:p.r.ix===x?y.rotation:p.pt.ix===x?y.points:p.or.ix===x||x===\"ADBE Vector Star Outer Radius\"?y.outerRadius:p.os.ix===x?y.outerRoundness:p.ir&&(p.ir.ix===x||x===\"ADBE Vector Star Inner Radius\")?y.innerRadius:p.is&&p.is.ix===x?y.innerRoundness:null}var g=propertyGroupFactory(y,v),b=c.sh.ty===\"tm\"?c.sh.prop:c.sh;return y.propertyIndex=p.ix,b.or.setGroupProperty(PropertyInterface(\"Outer Radius\",g)),b.os.setGroupProperty(PropertyInterface(\"Outer Roundness\",g)),b.pt.setGroupProperty(PropertyInterface(\"Points\",g)),b.p.setGroupProperty(PropertyInterface(\"Position\",g)),b.r.setGroupProperty(PropertyInterface(\"Rotation\",g)),p.ir&&(b.ir.setGroupProperty(PropertyInterface(\"Inner Radius\",g)),b.is.setGroupProperty(PropertyInterface(\"Inner Roundness\",g))),Object.defineProperties(y,{position:{get:ExpressionPropertyInterface(b.p)},rotation:{get:ExpressionPropertyInterface(b.r)},points:{get:ExpressionPropertyInterface(b.pt)},outerRadius:{get:ExpressionPropertyInterface(b.or)},outerRoundness:{get:ExpressionPropertyInterface(b.os)},innerRadius:{get:ExpressionPropertyInterface(b.ir)},innerRoundness:{get:ExpressionPropertyInterface(b.is)},_name:{value:p.nm}}),y.mn=p.mn,y}function f(p,c,v){function y(x){return p.p.ix===x?y.position:p.r.ix===x?y.roundness:p.s.ix===x||x===\"Size\"||x===\"ADBE Vector Rect Size\"?y.size:null}var g=propertyGroupFactory(y,v),b=c.sh.ty===\"tm\"?c.sh.prop:c.sh;return y.propertyIndex=p.ix,b.p.setGroupProperty(PropertyInterface(\"Position\",g)),b.s.setGroupProperty(PropertyInterface(\"Size\",g)),b.r.setGroupProperty(PropertyInterface(\"Rotation\",g)),Object.defineProperties(y,{position:{get:ExpressionPropertyInterface(b.p)},roundness:{get:ExpressionPropertyInterface(b.r)},size:{get:ExpressionPropertyInterface(b.s)},_name:{value:p.nm}}),y.mn=p.mn,y}function m(p,c,v){function y(x){return p.r.ix===x||x===\"Round Corners 1\"?y.radius:null}var g=propertyGroupFactory(y,v),b=c;return y.propertyIndex=p.ix,b.rd.setGroupProperty(PropertyInterface(\"Radius\",g)),Object.defineProperties(y,{radius:{get:ExpressionPropertyInterface(b.rd)},_name:{value:p.nm}}),y.mn=p.mn,y}function d(p,c,v){function y(x){return p.c.ix===x||x===\"Copies\"?y.copies:p.o.ix===x||x===\"Offset\"?y.offset:null}var g=propertyGroupFactory(y,v),b=c;return y.propertyIndex=p.ix,b.c.setGroupProperty(PropertyInterface(\"Copies\",g)),b.o.setGroupProperty(PropertyInterface(\"Offset\",g)),Object.defineProperties(y,{copies:{get:ExpressionPropertyInterface(b.c)},offset:{get:ExpressionPropertyInterface(b.o)},_name:{value:p.nm}}),y.mn=p.mn,y}return function(p,c,v){var y;function g(x){if(typeof x==\"number\")return x=x===void 0?1:x,x===0?v:y[x-1];for(var S=0,C=y.length;S<C;){if(y[S]._name===x)return y[S];S+=1;}return null}function b(){return v}return g.propertyGroup=propertyGroupFactory(g,b),y=t(p,c,g.propertyGroup),g.numProperties=y.length,g._name=\"Contents\",g}}(),TextExpressionInterface=function(){return function(t){var e;function r(i){switch(i){case\"ADBE Text Document\":return r.sourceText;default:return null}}return Object.defineProperty(r,\"sourceText\",{get:function(){t.textProperty.getValue();var i=t.textProperty.currentData.t;return (!e||i!==e.value)&&(e=new String(i),e.value=i||new String(i),Object.defineProperty(e,\"style\",{get:function(){return {fillColor:t.textProperty.currentData.fc}}})),e}}),r}}();function _typeof(t){\"@babel/helpers - typeof\";return typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?_typeof=function(e){return typeof e}:_typeof=function(e){return e&&typeof Symbol==\"function\"&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},_typeof(t)}var FootageInterface=function(){var t=function(r){var i=\"\",s=r.getFootageData();function a(){return i=\"\",s=r.getFootageData(),n}function n(o){if(s[o])return i=o,s=s[o],_typeof(s)===\"object\"?n:s;var l=o.indexOf(i);if(l!==-1){var h=parseInt(o.substr(l+i.length),10);return s=s[h],_typeof(s)===\"object\"?n:s}return \"\"}return a},e=function(r){function i(s){return s===\"Outline\"?i.outlineInterface():null}return i._name=\"Outline\",i.outlineInterface=t(r),i};return function(r){function i(s){return s===\"Data\"?i.dataInterface:null}return i._name=\"Data\",i.dataInterface=e(r),i}}(),interfaces={layer:LayerExpressionInterface,effects:EffectsExpressionInterface,comp:CompExpressionInterface,shape:ShapeExpressionInterface,text:TextExpressionInterface,footage:FootageInterface};function getInterface(t){return interfaces[t]||null}var expressionHelpers=function(){function t(n,o,l){o.x&&(l.k=!0,l.x=!0,l.initiateExpression=ExpressionManager.initiateExpression,l.effectsSequence.push(l.initiateExpression(n,o,l).bind(l)));}function e(n){return n*=this.elem.globalData.frameRate,n-=this.offsetTime,n!==this._cachingAtTime.lastFrame&&(this._cachingAtTime.lastIndex=this._cachingAtTime.lastFrame<n?this._cachingAtTime.lastIndex:0,this._cachingAtTime.value=this.interpolateValue(n,this._cachingAtTime),this._cachingAtTime.lastFrame=n),this._cachingAtTime.value}function r(n){var o=-.01,l=this.getValueAtTime(n),h=this.getValueAtTime(n+o),u=0;if(l.length){var f;for(f=0;f<l.length;f+=1)u+=Math.pow(h[f]-l[f],2);u=Math.sqrt(u)*100;}else u=0;return u}function i(n){if(this.vel!==void 0)return this.vel;var o=-.001,l=this.getValueAtTime(n),h=this.getValueAtTime(n+o),u;if(l.length){u=createTypedArray(\"float32\",l.length);var f;for(f=0;f<l.length;f+=1)u[f]=(h[f]-l[f])/o;}else u=(h-l)/o;return u}function s(){return this.pv}function a(n){this.propertyGroup=n;}return {searchExpressions:t,getSpeedAtTime:r,getVelocityAtTime:i,getValueAtTime:e,getStaticValueAtTime:s,setGroupProperty:a}}();function addPropertyDecorator(){function t(m,d,p){if(!this.k||!this.keyframes)return this.pv;m=m?m.toLowerCase():\"\";var c=this.comp.renderedFrame,v=this.keyframes,y=v[v.length-1].t;if(c<=y)return this.pv;var g,b;p?(d?g=Math.abs(y-this.elem.comp.globalData.frameRate*d):g=Math.max(0,y-this.elem.data.ip),b=y-g):((!d||d>v.length-1)&&(d=v.length-1),b=v[v.length-1-d].t,g=y-b);var x,S,C;if(m===\"pingpong\"){var _=Math.floor((c-b)/g);if(_%2!==0)return this.getValueAtTime((g-(c-b)%g+b)/this.comp.globalData.frameRate,0)}else if(m===\"offset\"){var T=this.getValueAtTime(b/this.comp.globalData.frameRate,0),L=this.getValueAtTime(y/this.comp.globalData.frameRate,0),G=this.getValueAtTime(((c-b)%g+b)/this.comp.globalData.frameRate,0),R=Math.floor((c-b)/g);if(this.pv.length){for(C=new Array(T.length),S=C.length,x=0;x<S;x+=1)C[x]=(L[x]-T[x])*R+G[x];return C}return (L-T)*R+G}else if(m===\"continue\"){var j=this.getValueAtTime(y/this.comp.globalData.frameRate,0),$=this.getValueAtTime((y-.001)/this.comp.globalData.frameRate,0);if(this.pv.length){for(C=new Array(j.length),S=C.length,x=0;x<S;x+=1)C[x]=j[x]+(j[x]-$[x])*((c-y)/this.comp.globalData.frameRate)/5e-4;return C}return j+(j-$)*((c-y)/.001)}return this.getValueAtTime(((c-b)%g+b)/this.comp.globalData.frameRate,0)}function e(m,d,p){if(!this.k)return this.pv;m=m?m.toLowerCase():\"\";var c=this.comp.renderedFrame,v=this.keyframes,y=v[0].t;if(c>=y)return this.pv;var g,b;p?(d?g=Math.abs(this.elem.comp.globalData.frameRate*d):g=Math.max(0,this.elem.data.op-y),b=y+g):((!d||d>v.length-1)&&(d=v.length-1),b=v[d].t,g=b-y);var x,S,C;if(m===\"pingpong\"){var _=Math.floor((y-c)/g);if(_%2===0)return this.getValueAtTime(((y-c)%g+y)/this.comp.globalData.frameRate,0)}else if(m===\"offset\"){var T=this.getValueAtTime(y/this.comp.globalData.frameRate,0),L=this.getValueAtTime(b/this.comp.globalData.frameRate,0),G=this.getValueAtTime((g-(y-c)%g+y)/this.comp.globalData.frameRate,0),R=Math.floor((y-c)/g)+1;if(this.pv.length){for(C=new Array(T.length),S=C.length,x=0;x<S;x+=1)C[x]=G[x]-(L[x]-T[x])*R;return C}return G-(L-T)*R}else if(m===\"continue\"){var j=this.getValueAtTime(y/this.comp.globalData.frameRate,0),$=this.getValueAtTime((y+.001)/this.comp.globalData.frameRate,0);if(this.pv.length){for(C=new Array(j.length),S=C.length,x=0;x<S;x+=1)C[x]=j[x]+(j[x]-$[x])*(y-c)/.001;return C}return j+(j-$)*(y-c)/.001}return this.getValueAtTime((g-((y-c)%g+y))/this.comp.globalData.frameRate,0)}function r(m,d){if(!this.k)return this.pv;if(m=(m||.4)*.5,d=Math.floor(d||5),d<=1)return this.pv;var p=this.comp.renderedFrame/this.comp.globalData.frameRate,c=p-m,v=p+m,y=d>1?(v-c)/(d-1):1,g=0,b=0,x;this.pv.length?x=createTypedArray(\"float32\",this.pv.length):x=0;for(var S;g<d;){if(S=this.getValueAtTime(c+g*y),this.pv.length)for(b=0;b<this.pv.length;b+=1)x[b]+=S[b];else x+=S;g+=1;}if(this.pv.length)for(b=0;b<this.pv.length;b+=1)x[b]/=d;else x/=d;return x}function i(m){this._transformCachingAtTime||(this._transformCachingAtTime={v:new Matrix});var d=this._transformCachingAtTime.v;if(d.cloneFromProps(this.pre.props),this.appliedTransformations<1){var p=this.a.getValueAtTime(m);d.translate(-p[0]*this.a.mult,-p[1]*this.a.mult,p[2]*this.a.mult);}if(this.appliedTransformations<2){var c=this.s.getValueAtTime(m);d.scale(c[0]*this.s.mult,c[1]*this.s.mult,c[2]*this.s.mult);}if(this.sk&&this.appliedTransformations<3){var v=this.sk.getValueAtTime(m),y=this.sa.getValueAtTime(m);d.skewFromAxis(-v*this.sk.mult,y*this.sa.mult);}if(this.r&&this.appliedTransformations<4){var g=this.r.getValueAtTime(m);d.rotate(-g*this.r.mult);}else if(!this.r&&this.appliedTransformations<4){var b=this.rz.getValueAtTime(m),x=this.ry.getValueAtTime(m),S=this.rx.getValueAtTime(m),C=this.or.getValueAtTime(m);d.rotateZ(-b*this.rz.mult).rotateY(x*this.ry.mult).rotateX(S*this.rx.mult).rotateZ(-C[2]*this.or.mult).rotateY(C[1]*this.or.mult).rotateX(C[0]*this.or.mult);}if(this.data.p&&this.data.p.s){var _=this.px.getValueAtTime(m),T=this.py.getValueAtTime(m);if(this.data.p.z){var L=this.pz.getValueAtTime(m);d.translate(_*this.px.mult,T*this.py.mult,-L*this.pz.mult);}else d.translate(_*this.px.mult,T*this.py.mult,0);}else {var G=this.p.getValueAtTime(m);d.translate(G[0]*this.p.mult,G[1]*this.p.mult,-G[2]*this.p.mult);}return d}function s(){return this.v.clone(new Matrix)}var a=TransformPropertyFactory.getTransformProperty;TransformPropertyFactory.getTransformProperty=function(m,d,p){var c=a(m,d,p);return c.dynamicProperties.length?c.getValueAtTime=i.bind(c):c.getValueAtTime=s.bind(c),c.setGroupProperty=expressionHelpers.setGroupProperty,c};var n=PropertyFactory.getProp;PropertyFactory.getProp=function(m,d,p,c,v){var y=n(m,d,p,c,v);y.kf?y.getValueAtTime=expressionHelpers.getValueAtTime.bind(y):y.getValueAtTime=expressionHelpers.getStaticValueAtTime.bind(y),y.setGroupProperty=expressionHelpers.setGroupProperty,y.loopOut=t,y.loopIn=e,y.smooth=r,y.getVelocityAtTime=expressionHelpers.getVelocityAtTime.bind(y),y.getSpeedAtTime=expressionHelpers.getSpeedAtTime.bind(y),y.numKeys=d.a===1?d.k.length:0,y.propertyIndex=d.ix;var g=0;return p!==0&&(g=createTypedArray(\"float32\",d.a===1?d.k[0].s.length:d.k.length)),y._cachingAtTime={lastFrame:initialDefaultFrame,lastIndex:0,value:g},expressionHelpers.searchExpressions(m,d,y),y.k&&v.addDynamicProperty(y),y};function o(m){return this._cachingAtTime||(this._cachingAtTime={shapeValue:shapePool.clone(this.pv),lastIndex:0,lastTime:initialDefaultFrame}),m*=this.elem.globalData.frameRate,m-=this.offsetTime,m!==this._cachingAtTime.lastTime&&(this._cachingAtTime.lastIndex=this._cachingAtTime.lastTime<m?this._caching.lastIndex:0,this._cachingAtTime.lastTime=m,this.interpolateShape(m,this._cachingAtTime.shapeValue,this._cachingAtTime)),this._cachingAtTime.shapeValue}var l=ShapePropertyFactory.getConstructorFunction(),h=ShapePropertyFactory.getKeyframedConstructorFunction();function u(){}u.prototype={vertices:function(m,d){this.k&&this.getValue();var p=this.v;d!==void 0&&(p=this.getValueAtTime(d,0));var c,v=p._length,y=p[m],g=p.v,b=createSizedArray(v);for(c=0;c<v;c+=1)m===\"i\"||m===\"o\"?b[c]=[y[c][0]-g[c][0],y[c][1]-g[c][1]]:b[c]=[y[c][0],y[c][1]];return b},points:function(m){return this.vertices(\"v\",m)},inTangents:function(m){return this.vertices(\"i\",m)},outTangents:function(m){return this.vertices(\"o\",m)},isClosed:function(){return this.v.c},pointOnPath:function(m,d){var p=this.v;d!==void 0&&(p=this.getValueAtTime(d,0)),this._segmentsLength||(this._segmentsLength=bez.getSegmentsLength(p));for(var c=this._segmentsLength,v=c.lengths,y=c.totalLength*m,g=0,b=v.length,x=0,S;g<b;){if(x+v[g].addedLength>y){var C=g,_=p.c&&g===b-1?0:g+1,T=(y-x)/v[g].addedLength;S=bez.getPointInSegment(p.v[C],p.v[_],p.o[C],p.i[_],T,v[g]);break}else x+=v[g].addedLength;g+=1;}return S||(S=p.c?[p.v[0][0],p.v[0][1]]:[p.v[p._length-1][0],p.v[p._length-1][1]]),S},vectorOnPath:function(m,d,p){m==1?m=this.v.c:m==0&&(m=.999);var c=this.pointOnPath(m,d),v=this.pointOnPath(m+.001,d),y=v[0]-c[0],g=v[1]-c[1],b=Math.sqrt(Math.pow(y,2)+Math.pow(g,2));if(b===0)return [0,0];var x=p===\"tangent\"?[y/b,g/b]:[-g/b,y/b];return x},tangentOnPath:function(m,d){return this.vectorOnPath(m,d,\"tangent\")},normalOnPath:function(m,d){return this.vectorOnPath(m,d,\"normal\")},setGroupProperty:expressionHelpers.setGroupProperty,getValueAtTime:expressionHelpers.getStaticValueAtTime},extendPrototype([u],l),extendPrototype([u],h),h.prototype.getValueAtTime=o,h.prototype.initiateExpression=ExpressionManager.initiateExpression;var f=ShapePropertyFactory.getShapeProp;ShapePropertyFactory.getShapeProp=function(m,d,p,c,v){var y=f(m,d,p,c,v);return y.propertyIndex=d.ix,y.lock=!1,p===3?expressionHelpers.searchExpressions(m,d.pt,y):p===4&&expressionHelpers.searchExpressions(m,d.ks,y),y.k&&m.addDynamicProperty(y),y};}function initialize$1(){addPropertyDecorator();}function addDecorator(){function t(){return this.data.d.x?(this.calculateExpression=ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this),this.addEffect(this.getExpressionValue.bind(this)),!0):null}TextProperty.prototype.getExpressionValue=function(e,r){var i=this.calculateExpression(r);if(e.t!==i){var s={};return this.copyData(s,e),s.t=i.toString(),s.__complete=!1,s}return e},TextProperty.prototype.searchProperty=function(){var e=this.searchKeyframes(),r=this.searchExpressions();return this.kf=e||r,this.kf},TextProperty.prototype.searchExpressions=t;}function initialize(){addDecorator();}function SVGComposableEffect(){}SVGComposableEffect.prototype={createMergeNode:function t(e,r){var i=createNS(\"feMerge\");i.setAttribute(\"result\",e);var s,a;for(a=0;a<r.length;a+=1)s=createNS(\"feMergeNode\"),s.setAttribute(\"in\",r[a]),i.appendChild(s),i.appendChild(s);return i}};var linearFilterValue=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0\";function SVGTintFilter(t,e,r,i,s){this.filterManager=e;var a=createNS(\"feColorMatrix\");a.setAttribute(\"type\",\"matrix\"),a.setAttribute(\"color-interpolation-filters\",\"linearRGB\"),a.setAttribute(\"values\",linearFilterValue+\" 1 0\"),this.linearFilter=a,a.setAttribute(\"result\",i+\"_tint_1\"),t.appendChild(a),a=createNS(\"feColorMatrix\"),a.setAttribute(\"type\",\"matrix\"),a.setAttribute(\"color-interpolation-filters\",\"sRGB\"),a.setAttribute(\"values\",\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0\"),a.setAttribute(\"result\",i+\"_tint_2\"),t.appendChild(a),this.matrixFilter=a;var n=this.createMergeNode(i,[s,i+\"_tint_1\",i+\"_tint_2\"]);t.appendChild(n);}extendPrototype([SVGComposableEffect],SVGTintFilter),SVGTintFilter.prototype.renderFrame=function(t){if(t||this.filterManager._mdf){var e=this.filterManager.effectElements[0].p.v,r=this.filterManager.effectElements[1].p.v,i=this.filterManager.effectElements[2].p.v/100;this.linearFilter.setAttribute(\"values\",linearFilterValue+\" \"+i+\" 0\"),this.matrixFilter.setAttribute(\"values\",r[0]-e[0]+\" 0 0 0 \"+e[0]+\" \"+(r[1]-e[1])+\" 0 0 0 \"+e[1]+\" \"+(r[2]-e[2])+\" 0 0 0 \"+e[2]+\" 0 0 0 1 0\");}};function SVGFillFilter(t,e,r,i){this.filterManager=e;var s=createNS(\"feColorMatrix\");s.setAttribute(\"type\",\"matrix\"),s.setAttribute(\"color-interpolation-filters\",\"sRGB\"),s.setAttribute(\"values\",\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0\"),s.setAttribute(\"result\",i),t.appendChild(s),this.matrixFilter=s;}SVGFillFilter.prototype.renderFrame=function(t){if(t||this.filterManager._mdf){var e=this.filterManager.effectElements[2].p.v,r=this.filterManager.effectElements[6].p.v;this.matrixFilter.setAttribute(\"values\",\"0 0 0 0 \"+e[0]+\" 0 0 0 0 \"+e[1]+\" 0 0 0 0 \"+e[2]+\" 0 0 0 \"+r+\" 0\");}};function SVGStrokeEffect(t,e,r){this.initialized=!1,this.filterManager=e,this.elem=r,this.paths=[];}SVGStrokeEffect.prototype.initialize=function(){var t=this.elem.layerElement.children||this.elem.layerElement.childNodes,e,r,i,s;for(this.filterManager.effectElements[1].p.v===1?(s=this.elem.maskManager.masksProperties.length,i=0):(i=this.filterManager.effectElements[0].p.v-1,s=i+1),r=createNS(\"g\"),r.setAttribute(\"fill\",\"none\"),r.setAttribute(\"stroke-linecap\",\"round\"),r.setAttribute(\"stroke-dashoffset\",1),i;i<s;i+=1)e=createNS(\"path\"),r.appendChild(e),this.paths.push({p:e,m:i});if(this.filterManager.effectElements[10].p.v===3){var a=createNS(\"mask\"),n=createElementID();a.setAttribute(\"id\",n),a.setAttribute(\"mask-type\",\"alpha\"),a.appendChild(r),this.elem.globalData.defs.appendChild(a);var o=createNS(\"g\");for(o.setAttribute(\"mask\",\"url(\"+getLocationHref()+\"#\"+n+\")\");t[0];)o.appendChild(t[0]);this.elem.layerElement.appendChild(o),this.masker=a,r.setAttribute(\"stroke\",\"#fff\");}else if(this.filterManager.effectElements[10].p.v===1||this.filterManager.effectElements[10].p.v===2){if(this.filterManager.effectElements[10].p.v===2)for(t=this.elem.layerElement.children||this.elem.layerElement.childNodes;t.length;)this.elem.layerElement.removeChild(t[0]);this.elem.layerElement.appendChild(r),this.elem.layerElement.removeAttribute(\"mask\"),r.setAttribute(\"stroke\",\"#fff\");}this.initialized=!0,this.pathMasker=r;},SVGStrokeEffect.prototype.renderFrame=function(t){this.initialized||this.initialize();var e,r=this.paths.length,i,s;for(e=0;e<r;e+=1)if(this.paths[e].m!==-1&&(i=this.elem.maskManager.viewData[this.paths[e].m],s=this.paths[e].p,(t||this.filterManager._mdf||i.prop._mdf)&&s.setAttribute(\"d\",i.lastPath),t||this.filterManager.effectElements[9].p._mdf||this.filterManager.effectElements[4].p._mdf||this.filterManager.effectElements[7].p._mdf||this.filterManager.effectElements[8].p._mdf||i.prop._mdf)){var a;if(this.filterManager.effectElements[7].p.v!==0||this.filterManager.effectElements[8].p.v!==100){var n=Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)*.01,o=Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)*.01,l=s.getTotalLength();a=\"0 0 0 \"+l*n+\" \";var h=l*(o-n),u=1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v*.01,f=Math.floor(h/u),m;for(m=0;m<f;m+=1)a+=\"1 \"+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v*.01+\" \";a+=\"0 \"+l*10+\" 0 0\";}else a=\"1 \"+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v*.01;s.setAttribute(\"stroke-dasharray\",a);}if((t||this.filterManager.effectElements[4].p._mdf)&&this.pathMasker.setAttribute(\"stroke-width\",this.filterManager.effectElements[4].p.v*2),(t||this.filterManager.effectElements[6].p._mdf)&&this.pathMasker.setAttribute(\"opacity\",this.filterManager.effectElements[6].p.v),(this.filterManager.effectElements[10].p.v===1||this.filterManager.effectElements[10].p.v===2)&&(t||this.filterManager.effectElements[3].p._mdf)){var d=this.filterManager.effectElements[3].p.v;this.pathMasker.setAttribute(\"stroke\",\"rgb(\"+bmFloor(d[0]*255)+\",\"+bmFloor(d[1]*255)+\",\"+bmFloor(d[2]*255)+\")\");}};function SVGTritoneFilter(t,e,r,i){this.filterManager=e;var s=createNS(\"feColorMatrix\");s.setAttribute(\"type\",\"matrix\"),s.setAttribute(\"color-interpolation-filters\",\"linearRGB\"),s.setAttribute(\"values\",\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"),t.appendChild(s);var a=createNS(\"feComponentTransfer\");a.setAttribute(\"color-interpolation-filters\",\"sRGB\"),a.setAttribute(\"result\",i),this.matrixFilter=a;var n=createNS(\"feFuncR\");n.setAttribute(\"type\",\"table\"),a.appendChild(n),this.feFuncR=n;var o=createNS(\"feFuncG\");o.setAttribute(\"type\",\"table\"),a.appendChild(o),this.feFuncG=o;var l=createNS(\"feFuncB\");l.setAttribute(\"type\",\"table\"),a.appendChild(l),this.feFuncB=l,t.appendChild(a);}SVGTritoneFilter.prototype.renderFrame=function(t){if(t||this.filterManager._mdf){var e=this.filterManager.effectElements[0].p.v,r=this.filterManager.effectElements[1].p.v,i=this.filterManager.effectElements[2].p.v,s=i[0]+\" \"+r[0]+\" \"+e[0],a=i[1]+\" \"+r[1]+\" \"+e[1],n=i[2]+\" \"+r[2]+\" \"+e[2];this.feFuncR.setAttribute(\"tableValues\",s),this.feFuncG.setAttribute(\"tableValues\",a),this.feFuncB.setAttribute(\"tableValues\",n);}};function SVGProLevelsFilter(t,e,r,i){this.filterManager=e;var s=this.filterManager.effectElements,a=createNS(\"feComponentTransfer\");(s[10].p.k||s[10].p.v!==0||s[11].p.k||s[11].p.v!==1||s[12].p.k||s[12].p.v!==1||s[13].p.k||s[13].p.v!==0||s[14].p.k||s[14].p.v!==1)&&(this.feFuncR=this.createFeFunc(\"feFuncR\",a)),(s[17].p.k||s[17].p.v!==0||s[18].p.k||s[18].p.v!==1||s[19].p.k||s[19].p.v!==1||s[20].p.k||s[20].p.v!==0||s[21].p.k||s[21].p.v!==1)&&(this.feFuncG=this.createFeFunc(\"feFuncG\",a)),(s[24].p.k||s[24].p.v!==0||s[25].p.k||s[25].p.v!==1||s[26].p.k||s[26].p.v!==1||s[27].p.k||s[27].p.v!==0||s[28].p.k||s[28].p.v!==1)&&(this.feFuncB=this.createFeFunc(\"feFuncB\",a)),(s[31].p.k||s[31].p.v!==0||s[32].p.k||s[32].p.v!==1||s[33].p.k||s[33].p.v!==1||s[34].p.k||s[34].p.v!==0||s[35].p.k||s[35].p.v!==1)&&(this.feFuncA=this.createFeFunc(\"feFuncA\",a)),(this.feFuncR||this.feFuncG||this.feFuncB||this.feFuncA)&&(a.setAttribute(\"color-interpolation-filters\",\"sRGB\"),t.appendChild(a)),(s[3].p.k||s[3].p.v!==0||s[4].p.k||s[4].p.v!==1||s[5].p.k||s[5].p.v!==1||s[6].p.k||s[6].p.v!==0||s[7].p.k||s[7].p.v!==1)&&(a=createNS(\"feComponentTransfer\"),a.setAttribute(\"color-interpolation-filters\",\"sRGB\"),a.setAttribute(\"result\",i),t.appendChild(a),this.feFuncRComposed=this.createFeFunc(\"feFuncR\",a),this.feFuncGComposed=this.createFeFunc(\"feFuncG\",a),this.feFuncBComposed=this.createFeFunc(\"feFuncB\",a));}SVGProLevelsFilter.prototype.createFeFunc=function(t,e){var r=createNS(t);return r.setAttribute(\"type\",\"table\"),e.appendChild(r),r},SVGProLevelsFilter.prototype.getTableValue=function(t,e,r,i,s){for(var a=0,n=256,o,l=Math.min(t,e),h=Math.max(t,e),u=Array.call(null,{length:n}),f,m=0,d=s-i,p=e-t;a<=256;)o=a/256,o<=l?f=p<0?s:i:o>=h?f=p<0?i:s:f=i+d*Math.pow((o-t)/p,1/r),u[m]=f,m+=1,a+=256/(n-1);return u.join(\" \")},SVGProLevelsFilter.prototype.renderFrame=function(t){if(t||this.filterManager._mdf){var e,r=this.filterManager.effectElements;this.feFuncRComposed&&(t||r[3].p._mdf||r[4].p._mdf||r[5].p._mdf||r[6].p._mdf||r[7].p._mdf)&&(e=this.getTableValue(r[3].p.v,r[4].p.v,r[5].p.v,r[6].p.v,r[7].p.v),this.feFuncRComposed.setAttribute(\"tableValues\",e),this.feFuncGComposed.setAttribute(\"tableValues\",e),this.feFuncBComposed.setAttribute(\"tableValues\",e)),this.feFuncR&&(t||r[10].p._mdf||r[11].p._mdf||r[12].p._mdf||r[13].p._mdf||r[14].p._mdf)&&(e=this.getTableValue(r[10].p.v,r[11].p.v,r[12].p.v,r[13].p.v,r[14].p.v),this.feFuncR.setAttribute(\"tableValues\",e)),this.feFuncG&&(t||r[17].p._mdf||r[18].p._mdf||r[19].p._mdf||r[20].p._mdf||r[21].p._mdf)&&(e=this.getTableValue(r[17].p.v,r[18].p.v,r[19].p.v,r[20].p.v,r[21].p.v),this.feFuncG.setAttribute(\"tableValues\",e)),this.feFuncB&&(t||r[24].p._mdf||r[25].p._mdf||r[26].p._mdf||r[27].p._mdf||r[28].p._mdf)&&(e=this.getTableValue(r[24].p.v,r[25].p.v,r[26].p.v,r[27].p.v,r[28].p.v),this.feFuncB.setAttribute(\"tableValues\",e)),this.feFuncA&&(t||r[31].p._mdf||r[32].p._mdf||r[33].p._mdf||r[34].p._mdf||r[35].p._mdf)&&(e=this.getTableValue(r[31].p.v,r[32].p.v,r[33].p.v,r[34].p.v,r[35].p.v),this.feFuncA.setAttribute(\"tableValues\",e));}};function SVGDropShadowEffect(t,e,r,i,s){var a=e.container.globalData.renderConfig.filterSize,n=e.data.fs||a;t.setAttribute(\"x\",n.x||a.x),t.setAttribute(\"y\",n.y||a.y),t.setAttribute(\"width\",n.width||a.width),t.setAttribute(\"height\",n.height||a.height),this.filterManager=e;var o=createNS(\"feGaussianBlur\");o.setAttribute(\"in\",\"SourceAlpha\"),o.setAttribute(\"result\",i+\"_drop_shadow_1\"),o.setAttribute(\"stdDeviation\",\"0\"),this.feGaussianBlur=o,t.appendChild(o);var l=createNS(\"feOffset\");l.setAttribute(\"dx\",\"25\"),l.setAttribute(\"dy\",\"0\"),l.setAttribute(\"in\",i+\"_drop_shadow_1\"),l.setAttribute(\"result\",i+\"_drop_shadow_2\"),this.feOffset=l,t.appendChild(l);var h=createNS(\"feFlood\");h.setAttribute(\"flood-color\",\"#00ff00\"),h.setAttribute(\"flood-opacity\",\"1\"),h.setAttribute(\"result\",i+\"_drop_shadow_3\"),this.feFlood=h,t.appendChild(h);var u=createNS(\"feComposite\");u.setAttribute(\"in\",i+\"_drop_shadow_3\"),u.setAttribute(\"in2\",i+\"_drop_shadow_2\"),u.setAttribute(\"operator\",\"in\"),u.setAttribute(\"result\",i+\"_drop_shadow_4\"),t.appendChild(u);var f=this.createMergeNode(i,[i+\"_drop_shadow_4\",s]);t.appendChild(f);}extendPrototype([SVGComposableEffect],SVGDropShadowEffect),SVGDropShadowEffect.prototype.renderFrame=function(t){if(t||this.filterManager._mdf){if((t||this.filterManager.effectElements[4].p._mdf)&&this.feGaussianBlur.setAttribute(\"stdDeviation\",this.filterManager.effectElements[4].p.v/4),t||this.filterManager.effectElements[0].p._mdf){var e=this.filterManager.effectElements[0].p.v;this.feFlood.setAttribute(\"flood-color\",rgbToHex(Math.round(e[0]*255),Math.round(e[1]*255),Math.round(e[2]*255)));}if((t||this.filterManager.effectElements[1].p._mdf)&&this.feFlood.setAttribute(\"flood-opacity\",this.filterManager.effectElements[1].p.v/255),t||this.filterManager.effectElements[2].p._mdf||this.filterManager.effectElements[3].p._mdf){var r=this.filterManager.effectElements[3].p.v,i=(this.filterManager.effectElements[2].p.v-90)*degToRads,s=r*Math.cos(i),a=r*Math.sin(i);this.feOffset.setAttribute(\"dx\",s),this.feOffset.setAttribute(\"dy\",a);}}};var _svgMatteSymbols=[];function SVGMatte3Effect(t,e,r){this.initialized=!1,this.filterManager=e,this.filterElem=t,this.elem=r,r.matteElement=createNS(\"g\"),r.matteElement.appendChild(r.layerElement),r.matteElement.appendChild(r.transformedElement),r.baseElement=r.matteElement;}SVGMatte3Effect.prototype.findSymbol=function(t){for(var e=0,r=_svgMatteSymbols.length;e<r;){if(_svgMatteSymbols[e]===t)return _svgMatteSymbols[e];e+=1;}return null},SVGMatte3Effect.prototype.replaceInParent=function(t,e){var r=t.layerElement.parentNode;if(r){for(var i=r.children,s=0,a=i.length;s<a&&i[s]!==t.layerElement;)s+=1;var n;s<=a-2&&(n=i[s+1]);var o=createNS(\"use\");o.setAttribute(\"href\",\"#\"+e),n?r.insertBefore(o,n):r.appendChild(o);}},SVGMatte3Effect.prototype.setElementAsMask=function(t,e){if(!this.findSymbol(e)){var r=createElementID(),i=createNS(\"mask\");i.setAttribute(\"id\",e.layerId),i.setAttribute(\"mask-type\",\"alpha\"),_svgMatteSymbols.push(e);var s=t.globalData.defs;s.appendChild(i);var a=createNS(\"symbol\");a.setAttribute(\"id\",r),this.replaceInParent(e,r),a.appendChild(e.layerElement),s.appendChild(a);var n=createNS(\"use\");n.setAttribute(\"href\",\"#\"+r),i.appendChild(n),e.data.hd=!1,e.show();}t.setMatte(e.layerId);},SVGMatte3Effect.prototype.initialize=function(){for(var t=this.filterManager.effectElements[0].p.v,e=this.elem.comp.elements,r=0,i=e.length;r<i;)e[r]&&e[r].data.ind===t&&this.setElementAsMask(this.elem,e[r]),r+=1;this.initialized=!0;},SVGMatte3Effect.prototype.renderFrame=function(){this.initialized||this.initialize();};function SVGGaussianBlurEffect(t,e,r,i){t.setAttribute(\"x\",\"-100%\"),t.setAttribute(\"y\",\"-100%\"),t.setAttribute(\"width\",\"300%\"),t.setAttribute(\"height\",\"300%\"),this.filterManager=e;var s=createNS(\"feGaussianBlur\");s.setAttribute(\"result\",i),t.appendChild(s),this.feGaussianBlur=s;}SVGGaussianBlurEffect.prototype.renderFrame=function(t){if(t||this.filterManager._mdf){var e=.3,r=this.filterManager.effectElements[0].p.v*e,i=this.filterManager.effectElements[1].p.v,s=i==3?0:r,a=i==2?0:r;this.feGaussianBlur.setAttribute(\"stdDeviation\",s+\" \"+a);var n=this.filterManager.effectElements[2].p.v==1?\"wrap\":\"duplicate\";this.feGaussianBlur.setAttribute(\"edgeMode\",n);}};function TransformEffect(){}TransformEffect.prototype.init=function(t){this.effectsManager=t,this.type=effectTypes.TRANSFORM_EFFECT,this.matrix=new Matrix,this.opacity=-1,this._mdf=!1,this._opMdf=!1;},TransformEffect.prototype.renderFrame=function(t){if(this._opMdf=!1,this._mdf=!1,t||this.effectsManager._mdf){var e=this.effectsManager.effectElements,r=e[0].p.v,i=e[1].p.v,s=e[2].p.v===1,a=e[3].p.v,n=s?a:e[4].p.v,o=e[5].p.v,l=e[6].p.v,h=e[7].p.v;this.matrix.reset(),this.matrix.translate(-r[0],-r[1],r[2]),this.matrix.scale(n*.01,a*.01,1),this.matrix.rotate(-h*degToRads),this.matrix.skewFromAxis(-o*degToRads,(l+90)*degToRads),this.matrix.translate(i[0],i[1],0),this._mdf=!0,this.opacity!==e[8].p.v&&(this.opacity=e[8].p.v,this._opMdf=!0);}};function SVGTransformEffect(t,e){this.init(e);}extendPrototype([TransformEffect],SVGTransformEffect);function CVTransformEffect(t){this.init(t);}return extendPrototype([TransformEffect],CVTransformEffect),registerRenderer(\"canvas\",CanvasRenderer),registerRenderer(\"html\",HybridRenderer),registerRenderer(\"svg\",SVGRenderer),ShapeModifiers.registerModifier(\"tm\",TrimModifier),ShapeModifiers.registerModifier(\"pb\",PuckerAndBloatModifier),ShapeModifiers.registerModifier(\"rp\",RepeaterModifier),ShapeModifiers.registerModifier(\"rd\",RoundCornersModifier),ShapeModifiers.registerModifier(\"zz\",ZigZagModifier),ShapeModifiers.registerModifier(\"op\",OffsetPathModifier),setExpressionsPlugin(Expressions),setExpressionInterfaces(getInterface),initialize$1(),initialize(),registerEffect$1(20,SVGTintFilter,!0),registerEffect$1(21,SVGFillFilter,!0),registerEffect$1(22,SVGStrokeEffect,!1),registerEffect$1(23,SVGTritoneFilter,!0),registerEffect$1(24,SVGProLevelsFilter,!0),registerEffect$1(25,SVGDropShadowEffect,!0),registerEffect$1(28,SVGMatte3Effect,!1),registerEffect$1(29,SVGGaussianBlurEffect,!0),registerEffect$1(35,SVGTransformEffect,!1),registerEffect(35,CVTransformEffect),lottie});}),Pt=Xt(Xo(),1);Pt.default.stringify;Pt.default.fromJSON;Pt.default.plugin;var wl=Pt.default.parse;Pt.default.list;Pt.default.document;Pt.default.comment;Pt.default.atRule;Pt.default.rule;Pt.default.decl;Pt.default.root;Pt.default.CssSyntaxError;Pt.default.Declaration;Pt.default.Container;Pt.default.Processor;Pt.default.Document;Pt.default.Comment;Pt.default.Warning;Pt.default.AtRule;Pt.default.Result;Pt.default.Input;Pt.default.Rule;Pt.default.Root;Pt.default.Node;var Zr=function(t,e,r){let i={type:String(t)};return r==null&&(typeof e==\"string\"||Array.isArray(e))?r=e:Object.assign(i,e),Array.isArray(r)?i.children=r:r!=null&&(i.value=String(r)),i},kl=\"root\",Pl=\"rule\",Cl=\"declaration\";function _l(t){let e=Zr(kl,[]);return wl(t).walkRules(r=>{let i=Zr(Pl,{selectors:[],selector:\"\"},[]);i.selectors=[...r.selectors],i.selector=r.selector,r.walkDecls(s=>{let a=Zr(Cl,{important:s.important,property:s.prop,value:s.value});i.children.push(a);}),e.children.push(i);}),e}var El={grad:.9,turn:360,rad:360/(2*Math.PI)},ie=function(t){return typeof t==\"string\"?t.length>0:typeof t==\"number\"},Tt=function(t,e,r){return e===void 0&&(e=0),r===void 0&&(r=Math.pow(10,e)),Math.round(r*t)/r+0},Ut=function(t,e,r){return e===void 0&&(e=0),r===void 0&&(r=1),t>r?r:t>e?t:e},ga=function(t){return (t=isFinite(t)?t%360:0)>0?t:t+360},Ss=function(t){return {r:Ut(t.r,0,255),g:Ut(t.g,0,255),b:Ut(t.b,0,255),a:Ut(t.a)}},Qr=function(t){return {r:Tt(t.r),g:Tt(t.g),b:Tt(t.b),a:Tt(t.a,3)}},Al=/^#([0-9a-f]{3,8})$/i,or=function(t){var e=t.toString(16);return e.length<2?\"0\"+e:e},va=function(t){var e=t.r,r=t.g,i=t.b,s=t.a,a=Math.max(e,r,i),n=a-Math.min(e,r,i),o=n?a===e?(r-i)/n:a===r?2+(i-e)/n:4+(e-r)/n:0;return {h:60*(o<0?o+6:o),s:a?n/a*100:0,v:a/255*100,a:s}},ba=function(t){var e=t.h,r=t.s,i=t.v,s=t.a;e=e/360*6,r/=100,i/=100;var a=Math.floor(e),n=i*(1-r),o=i*(1-(e-a)*r),l=i*(1-(1-e+a)*r),h=a%6;return {r:255*[i,o,n,n,l,i][h],g:255*[l,i,i,o,n,n][h],b:255*[n,n,l,i,i,o][h],a:s}},ws=function(t){return {h:ga(t.h),s:Ut(t.s,0,100),l:Ut(t.l,0,100),a:Ut(t.a)}},ks=function(t){return {h:Tt(t.h),s:Tt(t.s),l:Tt(t.l),a:Tt(t.a,3)}},Ps=function(t){return ba((r=(e=t).s,{h:e.h,s:(r*=((i=e.l)<50?i:100-i)/100)>0?2*r/(i+r)*100:0,v:i+r,a:e.a}));var e,r,i;},Re=function(t){return {h:(e=va(t)).h,s:(s=(200-(r=e.s))*(i=e.v)/100)>0&&s<200?r*i/100/(s<=100?s:200-s)*100:0,l:s/2,a:e.a};var e,r,i,s;},Tl=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,Ml=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s+([+-]?\\d*\\.?\\d+)%\\s+([+-]?\\d*\\.?\\d+)%\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,Dl=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,Fl=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,pi={string:[[function(t){var e=Al.exec(t);return e?(t=e[1]).length<=4?{r:parseInt(t[0]+t[0],16),g:parseInt(t[1]+t[1],16),b:parseInt(t[2]+t[2],16),a:t.length===4?Tt(parseInt(t[3]+t[3],16)/255,2):1}:t.length===6||t.length===8?{r:parseInt(t.substr(0,2),16),g:parseInt(t.substr(2,2),16),b:parseInt(t.substr(4,2),16),a:t.length===8?Tt(parseInt(t.substr(6,2),16)/255,2):1}:null:null},\"hex\"],[function(t){var e=Dl.exec(t)||Fl.exec(t);return e?e[2]!==e[4]||e[4]!==e[6]?null:Ss({r:Number(e[1])/(e[2]?100/255:1),g:Number(e[3])/(e[4]?100/255:1),b:Number(e[5])/(e[6]?100/255:1),a:e[7]===void 0?1:Number(e[7])/(e[8]?100:1)}):null},\"rgb\"],[function(t){var e=Tl.exec(t)||Ml.exec(t);if(!e)return null;var r,i,s=ws({h:(r=e[1],i=e[2],i===void 0&&(i=\"deg\"),Number(r)*(El[i]||1)),s:Number(e[3]),l:Number(e[4]),a:e[5]===void 0?1:Number(e[5])/(e[6]?100:1)});return Ps(s)},\"hsl\"]],object:[[function(t){var e=t.r,r=t.g,i=t.b,s=t.a,a=s===void 0?1:s;return ie(e)&&ie(r)&&ie(i)?Ss({r:Number(e),g:Number(r),b:Number(i),a:Number(a)}):null},\"rgb\"],[function(t){var e=t.h,r=t.s,i=t.l,s=t.a,a=s===void 0?1:s;if(!ie(e)||!ie(r)||!ie(i))return null;var n=ws({h:Number(e),s:Number(r),l:Number(i),a:Number(a)});return Ps(n)},\"hsl\"],[function(t){var e=t.h,r=t.s,i=t.v,s=t.a,a=s===void 0?1:s;if(!ie(e)||!ie(r)||!ie(i))return null;var n=function(o){return {h:ga(o.h),s:Ut(o.s,0,100),v:Ut(o.v,0,100),a:Ut(o.a)}}({h:Number(e),s:Number(r),v:Number(i),a:Number(a)});return ba(n)},\"hsv\"]]},Cs=function(t,e){for(var r=0;r<e.length;r++){var i=e[r][0](t);if(i)return [i,e[r][1]]}return [null,void 0]},Il=function(t){return typeof t==\"string\"?Cs(t.trim(),pi.string):typeof t==\"object\"&&t!==null?Cs(t,pi.object):[null,void 0]},ti=function(t,e){var r=Re(t);return {h:r.h,s:Ut(r.s+100*e,0,100),l:r.l,a:r.a}},ei=function(t){return (299*t.r+587*t.g+114*t.b)/1e3/255},_s=function(t,e){var r=Re(t);return {h:r.h,s:r.s,l:Ut(r.l+100*e,0,100),a:r.a}},fi=function(){function t(e){this.parsed=Il(e)[0],this.rgba=this.parsed||{r:0,g:0,b:0,a:1};}return t.prototype.isValid=function(){return this.parsed!==null},t.prototype.brightness=function(){return Tt(ei(this.rgba),2)},t.prototype.isDark=function(){return ei(this.rgba)<.5},t.prototype.isLight=function(){return ei(this.rgba)>=.5},t.prototype.toHex=function(){return e=Qr(this.rgba),r=e.r,i=e.g,s=e.b,n=(a=e.a)<1?or(Tt(255*a)):\"\",\"#\"+or(r)+or(i)+or(s)+n;var e,r,i,s,a,n;},t.prototype.toRgb=function(){return Qr(this.rgba)},t.prototype.toRgbString=function(){return e=Qr(this.rgba),r=e.r,i=e.g,s=e.b,(a=e.a)<1?\"rgba(\"+r+\", \"+i+\", \"+s+\", \"+a+\")\":\"rgb(\"+r+\", \"+i+\", \"+s+\")\";var e,r,i,s,a;},t.prototype.toHsl=function(){return ks(Re(this.rgba))},t.prototype.toHslString=function(){return e=ks(Re(this.rgba)),r=e.h,i=e.s,s=e.l,(a=e.a)<1?\"hsla(\"+r+\", \"+i+\"%, \"+s+\"%, \"+a+\")\":\"hsl(\"+r+\", \"+i+\"%, \"+s+\"%)\";var e,r,i,s,a;},t.prototype.toHsv=function(){return e=va(this.rgba),{h:Tt(e.h),s:Tt(e.s),v:Tt(e.v),a:Tt(e.a,3)};var e;},t.prototype.invert=function(){return zt({r:255-(e=this.rgba).r,g:255-e.g,b:255-e.b,a:e.a});var e;},t.prototype.saturate=function(e){return e===void 0&&(e=.1),zt(ti(this.rgba,e))},t.prototype.desaturate=function(e){return e===void 0&&(e=.1),zt(ti(this.rgba,-e))},t.prototype.grayscale=function(){return zt(ti(this.rgba,-1))},t.prototype.lighten=function(e){return e===void 0&&(e=.1),zt(_s(this.rgba,e))},t.prototype.darken=function(e){return e===void 0&&(e=.1),zt(_s(this.rgba,-e))},t.prototype.rotate=function(e){return e===void 0&&(e=15),this.hue(this.hue()+e)},t.prototype.alpha=function(e){return typeof e==\"number\"?zt({r:(r=this.rgba).r,g:r.g,b:r.b,a:e}):Tt(this.rgba.a,3);var r;},t.prototype.hue=function(e){var r=Re(this.rgba);return typeof e==\"number\"?zt({h:e,s:r.s,l:r.l,a:r.a}):Tt(r.h)},t.prototype.isEqual=function(e){return this.toHex()===zt(e).toHex()},t}(),zt=function(t){return t instanceof fi?t:new fi(t)},Es=[],xa=function(t){t.forEach(function(e){Es.indexOf(e)<0&&(e(fi,pi),Es.push(e));});};function Sa(t,e){var r={white:\"#ffffff\",bisque:\"#ffe4c4\",blue:\"#0000ff\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",azure:\"#f0ffff\",whitesmoke:\"#f5f5f5\",papayawhip:\"#ffefd5\",plum:\"#dda0dd\",blanchedalmond:\"#ffebcd\",black:\"#000000\",gold:\"#ffd700\",goldenrod:\"#daa520\",gainsboro:\"#dcdcdc\",cornsilk:\"#fff8dc\",cornflowerblue:\"#6495ed\",burlywood:\"#deb887\",aquamarine:\"#7fffd4\",beige:\"#f5f5dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkkhaki:\"#bdb76b\",darkgray:\"#a9a9a9\",darkgreen:\"#006400\",darkgrey:\"#a9a9a9\",peachpuff:\"#ffdab9\",darkmagenta:\"#8b008b\",darkred:\"#8b0000\",darkorchid:\"#9932cc\",darkorange:\"#ff8c00\",darkslateblue:\"#483d8b\",gray:\"#808080\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",wheat:\"#f5deb3\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",ghostwhite:\"#f8f8ff\",darkviolet:\"#9400d3\",magenta:\"#ff00ff\",green:\"#008000\",dodgerblue:\"#1e90ff\",grey:\"#808080\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",blueviolet:\"#8a2be2\",forestgreen:\"#228b22\",lawngreen:\"#7cfc00\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",fuchsia:\"#ff00ff\",brown:\"#a52a2a\",maroon:\"#800000\",mediumblue:\"#0000cd\",lightcoral:\"#f08080\",darkturquoise:\"#00ced1\",lightcyan:\"#e0ffff\",ivory:\"#fffff0\",lightyellow:\"#ffffe0\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",linen:\"#faf0e6\",mediumaquamarine:\"#66cdaa\",lemonchiffon:\"#fffacd\",lime:\"#00ff00\",khaki:\"#f0e68c\",mediumseagreen:\"#3cb371\",limegreen:\"#32cd32\",mediumspringgreen:\"#00fa9a\",lightskyblue:\"#87cefa\",lightblue:\"#add8e6\",midnightblue:\"#191970\",lightpink:\"#ffb6c1\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",mintcream:\"#f5fffa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",navajowhite:\"#ffdead\",navy:\"#000080\",mediumvioletred:\"#c71585\",powderblue:\"#b0e0e6\",palegoldenrod:\"#eee8aa\",oldlace:\"#fdf5e6\",paleturquoise:\"#afeeee\",mediumturquoise:\"#48d1cc\",mediumorchid:\"#ba55d3\",rebeccapurple:\"#663399\",lightsteelblue:\"#b0c4de\",mediumslateblue:\"#7b68ee\",thistle:\"#d8bfd8\",tan:\"#d2b48c\",orchid:\"#da70d6\",mediumpurple:\"#9370db\",purple:\"#800080\",pink:\"#ffc0cb\",skyblue:\"#87ceeb\",springgreen:\"#00ff7f\",palegreen:\"#98fb98\",red:\"#ff0000\",yellow:\"#ffff00\",slateblue:\"#6a5acd\",lavenderblush:\"#fff0f5\",peru:\"#cd853f\",palevioletred:\"#db7093\",violet:\"#ee82ee\",teal:\"#008080\",slategray:\"#708090\",slategrey:\"#708090\",aliceblue:\"#f0f8ff\",darkseagreen:\"#8fbc8f\",darkolivegreen:\"#556b2f\",greenyellow:\"#adff2f\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",tomato:\"#ff6347\",silver:\"#c0c0c0\",sienna:\"#a0522d\",lavender:\"#e6e6fa\",lightgreen:\"#90ee90\",orange:\"#ffa500\",orangered:\"#ff4500\",steelblue:\"#4682b4\",royalblue:\"#4169e1\",turquoise:\"#40e0d0\",yellowgreen:\"#9acd32\",salmon:\"#fa8072\",saddlebrown:\"#8b4513\",sandybrown:\"#f4a460\",rosybrown:\"#bc8f8f\",darksalmon:\"#e9967a\",lightgoldenrodyellow:\"#fafad2\",snow:\"#fffafa\",lightgrey:\"#d3d3d3\",lightgray:\"#d3d3d3\",dimgray:\"#696969\",dimgrey:\"#696969\",olivedrab:\"#6b8e23\",olive:\"#808000\"},i={};for(var s in r)i[r[s]]=s;var a={};t.prototype.toName=function(n){if(!(this.rgba.a||this.rgba.r||this.rgba.g||this.rgba.b))return \"transparent\";var o,l,h=i[this.toHex()];if(h)return h;if(n?.closest){var u=this.toRgb(),f=1/0,m=\"black\";if(!a.length)for(var d in r)a[d]=new t(r[d]).toRgb();for(var p in r){var c=(o=u,l=a[p],Math.pow(o.r-l.r,2)+Math.pow(o.g-l.g,2)+Math.pow(o.b-l.b,2));c<f&&(f=c,m=p);}return m}},e.string.push([function(n){var o=n.toLowerCase(),l=o===\"transparent\"?\"#0000\":r[o];return l?new t(l).toRgb():null},\"name\"]);}var hr={attribute:/\\[\\s*(?:(?<namespace>\\*|[-\\w\\P{ASCII}]*)\\|)?(?<name>[-\\w\\P{ASCII}]+)\\s*(?:(?<operator>\\W?=)\\s*(?<value>.+?)\\s*(\\s(?<caseSensitive>[iIsS]))?\\s*)?\\]/gu,id:/#(?<name>[-\\w\\P{ASCII}]+)/gu,class:/\\.(?<name>[-\\w\\P{ASCII}]+)/gu,comma:/\\s*,\\s*/g,combinator:/\\s*[\\s>+~]\\s*/g,\"pseudo-element\":/::(?<name>[-\\w\\P{ASCII}]+)(?:\\((?<argument>¶*)\\))?/gu,\"pseudo-class\":/:(?<name>[-\\w\\P{ASCII}]+)(?:\\((?<argument>¶*)\\))?/gu,universal:/(?:(?<namespace>\\*|[-\\w\\P{ASCII}]*)\\|)?\\*/gu,type:/(?:(?<namespace>\\*|[-\\w\\P{ASCII}]*)\\|)?(?<name>[-\\w\\P{ASCII}]+)/gu},Ol=new Set([\"combinator\",\"comma\"]),Vl=new Set([\"not\",\"is\",\"where\",\"has\",\"matches\",\"-moz-any\",\"-webkit-any\",\"nth-child\",\"nth-last-child\"]),As=/(?<index>[\\dn+-]+)\\s+of\\s+(?<subtree>.+)/,Ll={\"nth-child\":As,\"nth-last-child\":As},Rl=t=>{switch(t){case\"pseudo-element\":case\"pseudo-class\":return new RegExp(hr[t].source.replace(\"(?<argument>\\xB6*)\",\"(?<argument>.*)\"),\"gu\");default:return hr[t]}};function Bl(t,e){let r=0,i=\"\";for(;e<t.length;e++){let s=t[e];switch(s){case\"(\":++r;break;case\")\":--r;break}if(i+=s,r===0)return i}return i}function zl(t,e=hr){if(!t)return [];let r=[t];for(let[s,a]of Object.entries(e))for(let n=0;n<r.length;n++){let o=r[n];if(typeof o!=\"string\")continue;a.lastIndex=0;let l=a.exec(o);if(!l)continue;let h=l.index-1,u=[],f=l[0],m=o.slice(0,h+1);m&&u.push(m),u.push({...l.groups,type:s,content:f});let d=o.slice(h+f.length+1);d&&u.push(d),r.splice(n,1,...u);}let i=0;for(let s of r)switch(typeof s){case\"string\":throw new Error(`Unexpected sequence ${s} found at index ${i}`);case\"object\":i+=s.content.length,s.pos=[i-s.content.length,i],Ol.has(s.type)&&(s.content=s.content.trim()||\" \");break}return r}var Nl=/(['\"])([^\\\\\\n]+?)\\1/g,Gl=/\\\\./g;function jl(t,e=hr){if(t=t.trim(),t===\"\")return [];let r=[];t=t.replace(Gl,(a,n)=>(r.push({value:a,offset:n}),\"\\uE000\".repeat(a.length))),t=t.replace(Nl,(a,n,o,l)=>(r.push({value:a,offset:l}),`${n}${\"\\uE001\".repeat(o.length)}${n}`));{let a=0,n;for(;(n=t.indexOf(\"(\",a))>-1;){let o=Bl(t,n);r.push({value:o,offset:n}),t=`${t.substring(0,n)}(${\"\\xB6\".repeat(o.length-2)})${t.substring(n+o.length)}`,a=n+o.length;}}let i=zl(t,e),s=new Set;for(let a of r.reverse())for(let n of i){let{offset:o,value:l}=a;if(!(n.pos[0]<=o&&o+l.length<=n.pos[1]))continue;let{content:h}=n,u=o-n.pos[0];n.content=h.slice(0,u)+l+h.slice(u+l.length),n.content!==h&&s.add(n);}for(let a of s){let n=Rl(a.type);if(!n)throw new Error(`Unknown token type: ${a.type}`);n.lastIndex=0;let o=n.exec(a.content);if(!o)throw new Error(`Unable to parse content for ${a.type}: ${a.content}`);Object.assign(a,o.groups);}return i}function Ve(t,{list:e=!0}={}){if(e&&t.find(r=>r.type===\"comma\")){let r=[],i=[];for(let s=0;s<t.length;s++)if(t[s].type===\"comma\"){if(i.length===0)throw new Error(\"Incorrect comma at \"+s);r.push(Ve(i,{list:!1})),i.length=0;}else i.push(t[s]);if(i.length===0)throw new Error(\"Trailing comma\");return r.push(Ve(i,{list:!1})),{type:\"list\",list:r}}for(let r=t.length-1;r>=0;r--){let i=t[r];if(i.type===\"combinator\"){let s=t.slice(0,r),a=t.slice(r+1);return {type:\"complex\",combinator:i.content,left:Ve(s),right:Ve(a)}}}switch(t.length){case 0:throw new Error(\"Could not build AST.\");case 1:return t[0];default:return {type:\"compound\",list:[...t]}}}function*Be(t,e){switch(t.type){case\"list\":for(let r of t.list)yield*Be(r,t);break;case\"complex\":yield*Be(t.left,t),yield*Be(t.right,t);break;case\"compound\":yield*t.list.map(r=>[r,t]);break;default:yield [t,e];}}function Hl(t,e,r){if(t)for(let[i,s]of Be(t,r))e(i,s);}function wa(t,{recursive:e=!0,list:r=!0}={}){let i=jl(t);if(!i)return;let s=Ve(i,{list:r});if(!e)return s;for(let[a]of Be(s)){if(a.type!==\"pseudo-class\"||!a.argument||!Vl.has(a.name))continue;let n=a.argument,o=Ll[a.name];if(o){let l=o.exec(n);if(!l)continue;Object.assign(a,l.groups),n=l.groups.subtree;}n&&Object.assign(a,{subtree:wa(n,{recursive:!0,list:!0})});}return s}var ql=Xt(_i(),1),ka=function(t){if(t==null)return Jl;if(typeof t==\"string\")return Ul(t);if(typeof t==\"object\")return Array.isArray(t)?$l(t):Wl(t);if(typeof t==\"function\")return yr(t);throw new Error(\"Expected function, string, or object as test\")};function $l(t){let e=[],r=-1;for(;++r<t.length;)e[r]=ka(t[r]);return yr(i);function i(...s){let a=-1;for(;++a<e.length;)if(e[a].call(this,...s))return !0;return !1}}function Wl(t){return yr(e);function e(r){let i;for(i in t)if(r[i]!==t[i])return !1;return !0}}function Ul(t){return yr(e);function e(r){return r&&r.type===t}}function yr(t){return e;function e(r,...i){return !!(r&&typeof r==\"object\"&&\"type\"in r&&t.call(this,r,...i))}}function Jl(){return !0}var ci=!0,pr=!1,Yl=\"skip\",Kl=function(t,e,r,i){typeof e==\"function\"&&typeof r!=\"function\"&&(i=r,r=e,e=null);let s=ka(e),a=i?-1:1;n(t,void 0,[])();function n(o,l,h){let u=o&&typeof o==\"object\"?o:{};if(typeof u.type==\"string\"){let m=typeof u.tagName==\"string\"?u.tagName:typeof u.name==\"string\"?u.name:void 0;Object.defineProperty(f,\"name\",{value:\"node (\"+(o.type+(m?\"<\"+m+\">\":\"\"))+\")\"});}return f;function f(){let m=[],d,p,c;if((!e||s(o,l,h[h.length-1]||null))&&(m=Xl(r(o,h)),m[0]===pr))return m;if(o.children&&m[0]!==Yl)for(p=(i?o.children.length:-1)+a,c=h.concat(o);p>-1&&p<o.children.length;){if(d=n(o.children[p],p,c)(),d[0]===pr)return d;p=typeof d[1]==\"number\"?d[1]:p+a;}return m}}};function Xl(t){return Array.isArray(t)?t:typeof t==\"number\"?[ci,t]:[t]}var Vt=function(t,e,r,i){typeof e==\"function\"&&typeof r!=\"function\"&&(i=r,r=e,e=null),Kl(t,e,s,i);function s(a,n){let o=n[n.length-1];return r(a,o?o.children.indexOf(a):null,o)}},Ei=Xt(vl(),1);xa([Sa]);var Pa=t=>{try{if(!t.startsWith(\"linear-gradient\"))return !1;let e=(0,Ei.parse)(t);return !(e.length===0||e[0]?.type!==\"linear-gradient\")}catch{return !1}},Ca=t=>{try{if(!t.startsWith(\"radial-gradient\"))return !1;let e=(0,Ei.parse)(t);return !(e.length===0||e[0]?.type!==\"radial-gradient\")}catch{return !1}},Ts=t=>{let e=[],r=[];if(!(Pa(t)||Ca(t)))return [];let i=(0, Ei.parse)(t)[0];return i?.colorStops.forEach((s,a)=>{let n=[],o=0;if(s.type===\"hex\"||s.type===\"literal\"){let h=zt(s.value);n.push(parseFloat((h.rgba.r/255).toFixed(2)),parseFloat((h.rgba.g/255).toFixed(2)),parseFloat((h.rgba.b/255).toFixed(2))),o=h.rgba.a;}else if([\"rgb\",\"rgba\"].includes(s.type)){let h=zt({r:Number(s.value[0]),g:Number(s.value[1]),b:Number(s.value[2]),a:s.value[3]?Number(s.value[3]):1});n.push(parseFloat((h.rgba.r/255).toFixed(2)),parseFloat((h.rgba.g/255).toFixed(2)),parseFloat((h.rgba.b/255).toFixed(2))),o=h.rgba.a;}let l=parseFloat((a/(i.colorStops.length-1||1)).toFixed(2));s.length?.value&&Number(s.length.value)>0&&(l=parseFloat((Number(s.length.value)/100).toFixed(2))),e.push(l,...n),r.push(l,o);}),e.push(...r),e},Ms=(t,e,r)=>{if(![\"shape-gradient-fill\",\"shape-gradient-stroke\"].includes(t.title))return;let i=e.length/6;Vt(t,\"attribute\",s=>{s.title===\"gradient-type\"&&s.children[0]?s.children[0].value=r===\"linear\"?1:2:s.title===\"count\"&&s.children[0]&&(s.children[0].value=i);}),Vt(t,\"collection\",s=>{if(s.title===\"static-values\"&&typeof s.key==\"object\"&&s.key.value===\"k\"&&s.children[0]){let a=s.children[0];a.children=e.map(n=>({type:\"primitive\",valueType:\"number\",value:n}));}});};xa([Sa]);var lr=(t,e,r,i=!1)=>{let s=new Set,a=Array.isArray(t)?t:[t];for(let n of a)Vt(n,\"attribute\",(o,l,h)=>{o.title===r&&o.children[0]?.value===e&&h&&h.type!==\"root\"&&(i?h===n&&s.add(h):s.add(h));});return Array.from(s)},Zl=(t,e)=>{let r=[];for(let i of e){let s=[],a=wa(i);Hl(a,(n,o)=>{let l=s.length>0?s:t;if(n.type===\"id\")s=lr(l,n.name,\"layer-xml-id\",o?.type===\"compound\");else if(n.type===\"class\")s=lr(l,n.name,\"css-class\",o?.type===\"compound\");else if(n.type===\"type\"){let h=\"\",u=null;n.name===\"FillShape\"?(u=\"shape-type\",h=\"fl\"):n.name===\"StrokeShape\"?(u=\"shape-type\",h=\"st\"):n.name===\"GradientFillShape\"?(u=\"shape-type\",h=\"gf\"):n.name===\"GradientStrokeShape\"?(u=\"shape-type\",h=\"gs\"):n.name===\"ShapeLayer\"?(u=\"layer-type\",h=4):n.name===\"SolidColorLayer\"?(u=\"layer-type\",h=1):n.name===\"ImageLayer\"&&(u=\"layer-type\",h=2),u&&h&&(s=lr(l,h,u));}else if(n.type===\"attribute\"){let h=null,u=n.value;n.name===\"id\"?h=\"layer-xml-id\":n.name===\"class\"?h=\"css-class\":n.name===\"name\"?h=\"name\":n.name===\"shape-type\"?h=\"shape-type\":n.name===\"layer-type\"&&(h=\"layer-type\",u=Number(n.value)),h&&u&&[\"number\",\"string\"].includes(typeof u)&&(s=lr(l,u,h,o?.type===\"compound\"));}}),r.push(...s);}return Array.from(new Set(r))},ri=t=>t.includes(\"-color\"),Ql=t=>t===\"nonzero\"||t===\"evenodd\",th=t=>t.endsWith(\"%\")?parseFloat(t):parseFloat(t)*100,eh=t=>t===\"nonzero\"?1:2,rh=t=>{try{new URL(t);}catch{return !1}return !0},ih=t=>{let e=(0, ql.parse)(t).nodes;if(e.length===1){let r=e[0];if(r&&r.type===\"func\"&&r.name===\"url\"){let i=r.nodes;if(i.length===1){let s=i[0];if(s&&s.type===\"quoted\")return s.contents}}}return \"\"},sh=t=>{let e={};for(let r of t)if(ri(r.property)&&zt(r.value).isValid()){let i=zt(r.value).rgba,s=[i.r/255,i.g/255,i.b/255,i.a];switch(r.property){case\"fill-color\":e[\"fill-color\"]=s;break;case\"stroke-color\":e[\"stroke-color\"]=s;break}}else if(ri(r.property)&&Pa(r.value)){let i=Ts(r.value);switch(r.property){case\"fill-color\":e[\"linear-gradient-fill-color\"]=i;break;case\"stroke-color\":e[\"linear-gradient-stroke-color\"]=i;break}}else if(ri(r.property)&&Ca(r.value)){let i=Ts(r.value);switch(r.property){case\"fill-color\":e[\"radial-gradient-fill-color\"]=i;break;case\"stroke-color\":e[\"radial-gradient-stroke-color\"]=i;break}}else if(r.property===\"stroke-width\")e[\"stroke-width\"]=Number(r.value);else if(r.property===\"fill-rule\"&&Ql(r.value))e[\"fill-rule\"]=eh(r.value);else if(r.property===\"opacity\"){let i=th(r.value);if(Number.isNaN(i))continue;i<0?e.opacity=0:i>100?e.opacity=100:e.opacity=i;}else if(r.property===\"visibility\")e.hidden=r.value===\"hidden\";else if(r.property===\"src\"){let i=ih(r.value);rh(i)&&(e.src=i);}return e},ah=(t,e,r)=>{for(let i in e)switch(i){case\"fill-color\":let s=e[i];t.title===\"shape-fill\"?Array.isArray(s)&&Vt(t,\"array\",a=>a.title===\"color-rgba-children\"&&a.children.length===4?(a.children=a.children.map((n,o)=>({...n,value:s[o]})),pr):ci):t.title===\"layer-solid-color\"&&Vt(t,\"attribute\",a=>{if(a.title===\"hex-color\"&&a.children[0]?.value&&s?.length===4){let n=zt({r:s[0]*255,g:s[1]*255,b:s[2]*255,a:s[3]}).toHex();a.children[0].value=n;}});break;case\"stroke-color\":if(t.title===\"shape-stroke\"){let a=e[i];Array.isArray(a)&&Vt(t,\"array\",n=>n.title===\"static-values-children\"&&n.children.length===4?(n.children=n.children.map((o,l)=>({...o,value:a[l]})),pr):ci);}break;case\"stroke-width\":(t.title===\"shape-stroke\"||t.title===\"shape-gradient-stroke\")&&Vt(t,\"element\",a=>{a.title===\"stroke-width\"&&Vt(a,\"attribute\",(n,o,l)=>{n.title===\"static-value\"&&n.children[0]?.value&&n.children[0].valueType===\"number\"&&l?.title===\"animated-value-static\"&&(n.children[0].value=e[i]);});});break;case\"fill-rule\":[\"shape-fill\",\"shape-gradient-fill\"].includes(t.title)&&Vt(t,\"attribute\",a=>{a.title===\"fill-rule-value\"&&a.children[0]?.value&&(a.children[0].value=e[i]);});break;case\"opacity\":[\"shape-stroke\",\"shape-fill\",\"shape-gradient-fill\",\"shape-gradient-stroke\"].includes(t.title)&&Vt(t,\"element\",a=>{[\"stroke-opacity\",\"opacity\"].includes(a.title)&&Vt(a,\"attribute\",(n,o,l)=>{n.title===\"static-value\"&&n.children[0]?.value&&n.children[0].valueType===\"number\"&&l?.title===\"animated-value-static\"&&(n.children[0].value=e[i]);});});break;case\"hidden\":(t.title.includes(\"shape\")||t.title.includes(\"layer\"))&&Vt(t,\"attribute\",a=>{a.title===\"hidden\"&&a.children[0]&&(a.children[0].value=e[i]);});break;case\"linear-gradient-fill-color\":case\"linear-gradient-stroke-color\":Ms(t,e[i],\"linear\");break;case\"radial-gradient-fill-color\":case\"radial-gradient-stroke-color\":Ms(t,e[i],\"radial\");break;case\"src\":if(t.title===\"layer-image\"){let a=t.children.find(n=>n.title===\"image-id\");if(a?.type===\"attribute\"){let n=a.children[0]?.value;Vt(r,\"object\",o=>{o.title===\"asset-image\"&&o.children.some(l=>l.title===\"id\"&&l.children[0]?.type===\"primitive\"&&l.children[0].value===n)&&Vt(o,\"attribute\",l=>{l.title===\"embedded\"&&l.children[0]?l.children[0].value=0:l.title===\"path\"&&l.children[0]?l.children[0].value=\"\":l.title===\"filename\"&&l.children[0]&&(l.children[0].value=e[i]);});});}}break}},nh=(t={lss:\"\"})=>async e=>{let r=_l(t.lss);Vt(r,\"rule\",i=>{let s=Zl(e,i.selectors),a=sh(i.children);for(let n of s)ah(n,a,e);});},oh=nh,lh=Xt(da(),1),Ds=Xt(bl(),1),_a={custom:\"custom\",string:{assetImageType:\"asset-image-type\",assetType:\"asset-type\",author:\"author\",character:\"character\",cssClass:\"css-class\",description:\"description\",expression:\"expression\",filename:\"filename\",fontCssClass:\"font-css-class\",fontFamily:\"font-family\",fontName:\"font-name\",fontPath:\"font-path\",fontStyle:\"font-style\",fontWeight:\"font-weight\",generator:\"generator\",hexColor:\"hex-color\",id:\"id\",idDataSource:\"data-source-id\",idImage:\"image-id\",idLayerXml:\"layer-xml-id\",idReference:\"reference-id\",idSound:\"sound-id\",keyword:\"keyword\",layerXmlTagName:\"layer-xml-tag-name\",markerComment:\"marker-comment\",maskMode:\"mask-mode\",matchName:\"match-name\",name:\"name\",path:\"path\",referenceId:\"reference-id\",shapeType:\"shape-type\",strokeDashType:\"stroke-dash-type\",text:\"text\",themeColor:\"theme-color\",version:\"version\"},number:{adaptiveSampleLimit:\"adaptive-sample-limit\",ascent:\"ascent\",basedOn:\"based-on\",baselineShift:\"baseline-shift\",blendMode:\"blend-mode\",composite:\"composite\",compositionIndex:\"composition-index\",count:\"count\",dataSourceType:\"data-source-type\",effectListIndex:\"effect-list-index\",effectParametersIndex:\"effect-parameters-index\",effectType:\"effect-type\",effectValueType:\"effect-value-type\",expressionPropertyIndex:\"expression-property-index\",fillRuleValue:\"fill-rule-value\",fontSize:\"font-size\",framerate:\"framerate\",gradientType:\"gradient-type\",height:\"height\",inPoint:\"in-point\",layerStyleType:\"layer-style-type\",layerType:\"layer-type\",length:\"length\",lineCapType:\"line-cap-type\",lineHeight:\"line-height\",lineJoin:\"line-join\",lineJoinType:\"line-join-type\",markerDuration:\"marker-duration\",markerTime:\"marker-time\",matteMode:\"matte-mode\",matteTarget:\"matte-target\",mergeMode:\"merge-mode\",miterLimitValue:\"miter-limit-value\",multiple:\"multiple\",numberOfProperties:\"number-of-properties\",outPoint:\"out-point\",parentIndex:\"parent-index\",propertyIndex:\"property-index\",rangeUnits:\"range-units\",samplesPerFrame:\"samples-per-frame\",shapeDirection:\"shape-direction\",shapePathIndex:\"shape-path-index\",shapePolygonStarType:\"shape-polygon-star-type\",shutterAngle:\"shutter-angle\",shutterPhase:\"shutter-phase\",staticValue:\"static-value\",textMask:\"text-mask\",textRangeSelectorMode:\"text-range-selector-mode\",textTracking:\"text-tracking\",textType:\"text-type\",textTypeCaps:\"text-type-caps\",textTypeGrouping:\"text-type-grouping\",textTypeJustify:\"text-type-justify\",textTypeShape:\"text-type-shape\",textTypeVerticalJustify:\"text-type-vertical-justify\",time:\"time\",timeStart:\"start-time\",timeStretch:\"time-stretch\",value:\"value\",width:\"width\"},intBoolean:{animated:\"animated\",autoOrient:\"auto-orient\",embedded:\"embedded\",enabled:\"enabled\",expressible:\"expressible\",extraComposition:\"extra-composition\",hold:\"hold\",randomize:\"randomize\",threedimensional:\"threedimensional\",xAxisValue:\"x-axis-value\",yAxisValue:\"y-axis-value\"},boolean:{closed:\"closed\",collapseTransform:\"collapse-transform\",hasMask:\"has-mask\",hidden:\"hidden\",inverted:\"inverted\",motionBlurEnabled:\"motion-blur-enabled\",splitEnabled:\"split-enabled\",strokeOverFill:\"stroke-over-fill\"},object:{animatedColor:\"animated-color\",animatedColorStatic:\"animated-color-static\",animatedMultidimensional:\"animated-multidimensional\",animatedMultidimensionalStatic:\"animated-multidimensional-static\",animatedPosition:\"animated-position\",animatedPositionStatic:\"animated-position-static\",animatedShape:\"animated-shape\",animatedShapeStatic:\"animated-shape-static\",animatedValue:\"animated-value\",animatedValueStatic:\"animated-value-static\",animation:\"animation\",assetDataSource:\"asset-data-source\",assetImage:\"asset-image\",assetPrecomposition:\"asset-precomposition\",bezier:\"bezier\",characterData:\"character-data\",characterPrecomp:\"character-precomp\",characterShapes:\"character-shapes\",effect:\"effect\",effectCustom:\"effect-custom\",effectDisplacementMap:\"effect-displacement-map\",effectDropShadow:\"effect-drop-shadow\",effectFill:\"effect-fill\",effectGaussianBlur:\"effect-gaussian-blur\",effectMatte3:\"effect-matte3\",effectMeshWarp:\"effect-mesh-warp\",effectPaintOverTransparent:\"effect-paint-over-transparent\",effectProLevels:\"effect-pro-levels\",effectPuppet:\"effect-puppet\",effectRadialWipe:\"effect-radial-wipe\",effectSpherize:\"effect-spherize\",effectStroke:\"effect-stroke\",effectTint:\"effect-tint\",effectTritone:\"effect-tritone\",effectValueAngle:\"effect-value-angle\",effectValueCheckbox:\"effect-value-checkbox\",effectValueColor:\"effect-value-color\",effectValueDropdown:\"effect-value-dropdown\",effectValueIgnored:\"effect-value-ignored\",effectValueLayer:\"effect-value-layer\",effectValueNoValue:\"effect-value-no-value\",effectValuePoint:\"effect-value-point\",effectValueSlider:\"effect-value-slider\",effectWavy:\"effect-wavy\",endOpacity:\"end-opacity\",gradientOverlay:\"gradient-overlay\",keyframe:\"keyframe\",keyframeBezierHandle:\"keyframe-bezier-handle\",layerAdjustment:\"layer-adjustment\",layerAudio:\"layer-audio\",layerCamera:\"layer-camera\",layerData:\"layer-data\",layerGuide:\"layer-guide\",layerImage:\"layer-image\",layerImagePlaceholder:\"layer-image-placeholder\",layerImageSequence:\"layer-image-sequence\",layerLight:\"layer-light\",layerNull:\"layer-null\",layerPrecomposition:\"layer-precomposition\",layerShape:\"layer-shape\",layerSolidColor:\"layer-solid-color\",layerStyleBevelEmboss:\"layer-style-bevel-emboss\",layerStyleChokeSpread:\"layer-style-choke-spread\",layerStyleColorOverlay:\"layer-style-color-overlay\",layerStyleDropShadow:\"layer-style-drop-shadow\",layerStyleGradientOverlay:\"layer-style-gradient-overlay\",layerStyleInnerGlow:\"layer-style-inner-glow\",layerStyleInnerShadow:\"layer-style-inner-shadow\",layerStyleOuterGlow:\"layer-style-outer-glow\",layerStyleSatin:\"layer-style-satin\",layerStyleStroke:\"layer-style-stroke\",layerText:\"layer-text\",layerVideo:\"layer-video\",layerVideoPlaceholder:\"layer-video-placeholder\",marker:\"marker\",mask:\"mask\",positionKeyframe:\"position-keyframe\",shapeEllipse:\"shape-ellipse\",shapeFill:\"shape-fill\",shapeGradientFill:\"shape-gradient-fill\",shapeGradientStroke:\"shape-gradient-stroke\",shapeGroup:\"shape-group\",shapeKeyframe:\"shape-keyframe\",shapeMerge:\"shape-merge\",shapeOffsetPath:\"shape-offset-path\",shapePath:\"shape-path\",shapePolygon:\"shape-polygon\",shapePolyStar:\"shape-poly-star\",shapePuckerBloat:\"shape-pucker-bloat\",shapeRectangle:\"shape-rectangle\",shapeRepeater:\"shape-repeater\",shapeRoundedCorners:\"shape-rounded-corners\",shapeStar:\"shape-star\",shapeStroke:\"shape-stroke\",shapeTransform:\"shape-transform\",shapeTrim:\"shape-trim\",shapeTwist:\"shape-twist\",shapeZigZags:\"shape-zig-zag\",splitVector:\"split-vector\",strokeDashDefault:\"stroke-dash-default\",strokeDashGap:\"stroke-dash-gap\",strokeDashLength:\"stroke-dash-length\",strokeDashOffset:\"stroke-dash-offset\",textFont:\"text-font\",textRange:\"text-range\",textDocumentKeyframe:\"text-document-keyframe\"},array:{outTangentsValue:\"out-tangents-value\"},collection:{assets:\"assets\",composition:\"composition\",effectList:\"effect-list\",effectParameters:\"effect-parameters\",extraCompositions:\"extra-compositions\",inTangents:\"in-tangents\",keyframeEndValue:\"keyframe-end-value\",keyframeList:\"keyframe-list\",keyframeValue:\"keyframe-value\",keywords:\"keywords\",layerStyle:\"layer-style\",layerStyleList:\"layer-style-list\",markers:\"markers\",masksProperties:\"masks-properties\",outTangents:\"out-tangents\",positionKeyframeList:\"position-keyframe-list\",shapeKeyframeList:\"shape-keyframe-list\",shapeKeyframeStart:\"shape-keyframe-start\",shapeList:\"shape-list\",staticValues:\"static-values\",strokeDashList:\"stroke-dash-list\",textRanges:\"text-ranges\",textCharacters:\"text-characters\",textDocumentKeyframes:\"text-document-keyframes\",textFontList:\"text-font-list\",valueInTangent:\"value-in-tangent\",valueOutTangent:\"value-out-tangent\",vertices:\"vertices\",xAxis:\"x-axis\",yAxis:\"y-axis\",colorRgba:\"color-rgba\",documentFillColor:\"document-fill-color\",documentStrokeColor:\"document-stroke-color\",wrapPosition:\"wrap-position\",wrapSize:\"wrap-size\"},element:{align:\"align\",altitude:\"altitude\",amount:\"amount\",anchorPoint:\"anchor-point\",angle:\"angle\",animatedColorProp:\"animated-color-prop\",animatedGradientColors:\"animated-gradient-colors\",animatedMultidimensionalProp:\"animated-multidimensional-prop\",animatedPositionProp:\"animated-position-prop\",animatedShapeBezier:\"animated-shape-bezier\",animatedShapeProp:\"animated-shape-prop\",animatedValueProp:\"animated-value-prop\",bevelStyle:\"bevel-style\",blur:\"blur\",blurSize:\"blur-size\",center:\"center\",chokeSpread:\"choke-spread\",copies:\"copies\",dilate:\"dilate\",distance:\"distance\",effectValueAngleValue:\"effect-value-angle-value\",effectValueCheckboxValue:\"effect-value-checkbox-value\",effectValueColorValue:\"effect-value-color-value\",effectValueDropdownValue:\"effect-value-dropdown-value\",effectValueIgnoredValue:\"effect-value-ignored-value\",effectValueLayerValue:\"effect-value-layer-value\",effectValuePointValue:\"effect-value-point-value\",effectValueSliderValue:\"effect-value-slider-value\",endPoint:\"end-point\",fillBrightness:\"fill-brightness\",fillColor:\"fill-color\",fillHue:\"fill-hue\",fillOpacity:\"fill-opacity\",fillRule:\"fill-rule\",fillSaturation:\"fill-saturation\",firstMargin:\"first-margin\",forceAlignment:\"force-alignment\",globalAngle:\"global-angle\",gradientOverlayScale:\"gradient-overlay-scale\",highlightAngle:\"highlight-angle\",highlightColor:\"highlight-color\",highlightLength:\"highlight-length\",highlightMode:\"highlight-mode\",highlightOpacity:\"highlight-opacity\",innerRadius:\"inner-radius\",innerRoundness:\"inner-roundness\",invert:\"invert\",inTangent:\"in-tangent\",jitter:\"jitter\",lastMargin:\"last-margin\",layerAudioSettings:\"layer-audio-settings\",layerConceal:\"layer-conceal\",layerStyleBlendMode:\"layer-style-blend-mode\",layerStyleColor:\"layer-style-color\",layerTransform:\"layer-transform\",level:\"level\",lineSpacing:\"line-spacing\",maskOpacity:\"mask-opacity\",maskVertices:\"mask-vertices\",maxAmount:\"max-amount\",maxEase:\"max-ease\",metadata:\"metadata\",minEase:\"min-ease\",miterLimit:\"miter-limit\",miterLimitAlternative:\"miter-limit-alternative\",motionBlur:\"motion-blur\",noise:\"noise\",offset:\"offset\",opacity:\"opacity\",orientation:\"orientation\",outerRadius:\"outer-radius\",outerRoundness:\"outer-roundness\",outTangent:\"out-tangent\",perpendicularToPath:\"perpendicular-to-path\",perspective:\"perspective\",points:\"points\",polygonRotationClockwise:\"polygon-rotation-clockwise\",radius:\"radius\",range:\"range\",reverse:\"reverse\",reversePath:\"reverse-path\",rotationClockwise:\"rotation-clockwise\",rotationX:\"rotation-x\",rotationY:\"rotation-y\",rotationZ:\"rotation-z\",rounded:\"rounded\",roundness:\"roundness\",scale:\"scale\",selectorSmoothness:\"selector-smoothness\",shadowColor:\"shadow-color\",shadowMode:\"shadow-mode\",shadowOpacity:\"shadow-opacity\",shape:\"shape\",shapeEllipseSize:\"shape-ellipse-size\",shapeFillColor:\"shape-fill-color\",shapeStrokeColor:\"shape-stroke-color\",shapeTrimEnd:\"shape-trim-end\",shapeTrimStart:\"shape-trim-start\",shapeZigZagSize:\"shape-zig-zag-size\",size:\"size\",skew:\"skew\",skewAxis:\"skew-axis\",smoothness:\"smoothness\",soften:\"soften\",source:\"source\",splitX:\"split-x\",splitY:\"split-y\",splitZ:\"split-z\",startOpacity:\"start-opacity\",startPoint:\"start-point\",strength:\"strength\",strokeBrightness:\"stroke-brightness\",strokeColor:\"stroke-color\",strokeHue:\"stroke-hue\",strokeLength:\"stroke-length\",strokeOpacity:\"stroke-opacity\",strokeSaturation:\"stroke-saturation\",strokeWidth:\"stroke-width\",technique:\"technique\",textAnimatorData:\"text-animator-data\",textCharacterData:\"text-character-data\",textData:\"text-data\",textStyle:\"text-style\",textAnimatedDocument:\"text-animated-document\",textDocument:\"text-document\",textFonts:\"text-fonts\",textGroupAlignment:\"text-group-alignment\",textFollowPath:\"text-follow-path\",textAlignmentOptions:\"text-alignment-options\",textSelector:\"text-selector\",textSelectorEnd:\"text-selector-end\",textSelectorStart:\"text-selector-start\",timeRemapping:\"time-remapping\",letterSpacing:\"letter-spacing\",transformOpacity:\"transform-opacity\",transformRepeater:\"transform-repeater\",translation:\"translation\",userMetadata:\"user-metadata\"}},le=function(t,e,r){var i={type:String(t)};return r==null&&(typeof e==\"string\"||Array.isArray(e))?r=e:Object.assign(i,e),Array.isArray(r)?i.children=r:r!=null&&(i.value=String(r)),i};function gr(t){if(Array.isArray(t))return t;if(typeof t==\"function\"){let e=t();return gr(e)}else return typeof t>\"u\"?[]:[t]}function vr(t){if(Array.isArray(t))return t.length>0?[t[0]]:[];if(typeof t==\"function\"){let e=t();return vr(e)}else return typeof t>\"u\"?[]:[t]}function hh(t){return t===void 0?\"empty\":t}var ph=(t,e)=>le(\"primitive\",{value:hh(t),...e}),fh=(t,e)=>le(\"key\",{...e},t),Fs=(t,e,r)=>le(\"object\",{title:t,...r},[...gr(e)]),Is=(t,e,r)=>le(\"array\",{title:t,...r},[...gr(e)]),ch=(t,e,r,i)=>le(\"attribute\",{key:t,title:e,...i},vr(r)),uh=(t,e,r,i)=>le(\"element\",{key:t,title:e,...i},vr(r)),mh=(t,e,r,i)=>le(\"collection\",{key:t,title:e,...i},vr(r)),dh=(t,e)=>le(\"root\",{title:_a.object.animation,hasExpressions:!1,...e},[...gr(t)]),yh=Xt(da(),1),Ce=function t(e,r,i,s,a){let n=Ea(r);if(i!=null&&(typeof i!=\"number\"||i<0||i===Number.POSITIVE_INFINITY))throw new Error(\"Expected positive finite index\");if(s!=null&&(!t(s)||!s.children))throw new Error(\"Expected parent node\");if(s==null!=(i==null))throw new Error(\"Expected both parent and index\");return e&&e.type&&typeof e.type==\"string\"?!!n.call(a,e,i,s):!1},Ea=function(t){if(t==null)return xh;if(typeof t==\"string\")return bh(t);if(typeof t==\"object\")return Array.isArray(t)?gh(t):vh(t);if(typeof t==\"function\")return br(t);throw new Error(\"Expected function, string, or object as test\")};function gh(t){let e=[],r=-1;for(;++r<t.length;)e[r]=Ea(t[r]);return br(i);function i(...s){let a=-1;for(;++a<e.length;)if(e[a].call(this,...s))return !0;return !1}}function vh(t){return br(e);function e(r){let i;for(i in t)if(r[i]!==t[i])return !1;return !0}}function bh(t){return br(e);function e(r){return r&&r.type===t}}function br(t){return e;function e(...r){return !!t.call(this,...r)}}function xh(){return !0}var Sh=Object.defineProperty,wh=(t,e,r)=>e in t?Sh(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,Os=(t,e,r)=>(wh(t,typeof e!=\"symbol\"?e+\"\":e,r),r),{boolean:xt,collection:B,custom:Le,element:k,intBoolean:lt,number:z,object:w,string:U}=_a,$e=(t,e)=>({defaultTitle:`${t}-static`,dependents:[{key:\"k\",type:\"Array\",title:e,childType:\"Object\",parentTitle:t},{key:\"a\",type:\"Constant\",title:lt.animated,parentTitle:{defaultValue:0,values:{0:`${t}-static`,1:t}}}]}),X={...$e(w.animatedValue,B.keyframeList)},ii={...$e(w.animatedShape,B.shapeKeyframeList)},Vs={...$e(w.animatedPosition,B.positionKeyframeList)},oe={...$e(w.animatedColor,B.keyframeList)},Wt={...$e(w.animatedMultidimensional,B.keyframeList)},Aa={[B.composition]:{defaultTitle:w.layerPrecomposition,dependents:[{key:\"ty\",type:\"Constant\",title:z.layerType,parentTitle:{prefix:\"layer\",defaultValue:0,values:{0:\"precomposition\",1:\"solid-color\",2:\"image\",3:\"null\",4:\"shape\",5:\"text\",6:\"audio\",7:\"video-placeholder\",8:\"image-sequence\",9:\"video\",10:\"image-placeholder\",11:\"guide\",12:\"adjustment\",13:\"camera\",14:\"light\",15:\"data\"}}}]},[B.shapeList]:{defaultTitle:w.shapeRectangle,dependents:[{key:\"ty\",type:\"Constant\",title:U.shapeType,parentTitle:{prefix:\"shape\",defaultValue:\"rc\",values:{rc:\"rectangle\",el:\"ellipse\",sr:\"star\",sh:\"path\",fl:\"fill\",st:\"stroke\",gf:\"gradient-fill\",gs:\"gradient-stroke\",gr:\"group\",tr:\"transform\",rd:\"rounded-corners\",pb:\"pucker-bloat\",mm:\"merge\",tw:\"twist\",op:\"offset-path\",zz:\"zig-zag\",\"\":\"modifier\",rp:\"repeater\",tm:\"trim\"}}},{key:\"sy\",type:\"Constant\",title:z.shapePolygonStarType,parentTitle:{prefix:\"shape\",defaultValue:1,values:{1:\"star\",2:\"polygon\"}}}]},assets:{defaultTitle:w.assetPrecomposition,dependents:[{key:\"w\",type:\"Number\",title:z.width,parentTitle:w.assetImage},{key:\"h\",type:\"Number\",title:z.height,parentTitle:w.assetImage},{key:\"t\",type:\"Constant\",title:U.assetType,parentTitle:{prefix:\"asset\",defaultValue:\"seq\",values:{seq:\"image\",3:\"data-source\"}}},{key:\"layers\",type:\"Array\",title:B.composition,parentTitle:w.assetPrecomposition},{key:\"mn\",type:\"String\",title:U.matchName,parentTitle:w.assetPrecomposition},{key:\"fr\",type:\"Number\",title:z.framerate,parentTitle:w.assetPrecomposition},{key:\"xt\",type:\"Number\",title:lt.extraComposition,parentTitle:w.assetPrecomposition}]},[B.effectList]:{defaultTitle:w.effectCustom,dependents:[{key:\"ty\",type:\"Constant\",title:z.effectType,parentTitle:{prefix:\"effect\",defaultValue:5,values:{25:\"drop-shadow\",21:\"fill\",29:\"gaussian-blur\",28:\"matte3\",24:\"pro-levels\",22:\"stroke\",20:\"tint\",23:\"tritone\",26:\"radial-wipe\",32:\"wavy\",34:\"puppet\",33:\"spherize\",7:\"paint-over-transparent\",31:\"mesh-warp\",27:\"displacement-map\",5:\"custom\"}}}]},[B.effectParameters]:{defaultTitle:w.effectValueSlider,dependents:[{key:\"ty\",type:\"Constant\",title:z.effectValueType,parentTitle:{defaultValue:0,prefix:\"effect-value\",values:{4:\"checkbox\",2:\"color\",7:\"dropdown\",6:\"ignored\",10:\"layer\",3:\"point\",0:\"slider\",1:\"angle\"}}}]},[B.layerStyleList]:{defaultTitle:w.layerStyleStroke,dependents:[{key:\"ty\",type:\"Constant\",title:z.layerStyleType,parentTitle:{prefix:B.layerStyle,defaultValue:0,values:{0:\"stroke\",1:\"drop-shadow\",2:\"inner-shadow\",3:\"outer-glow\",4:\"inner-glow\",5:\"bevel-emboss\",6:\"satin\",7:\"color-overlay\",8:\"gradient-overlay\"}}}]},[k.animatedPositionProp]:{...Vs},[k.animatedShapeProp]:{...ii},[k.animatedShapeBezier]:{defaultTitle:w.bezier},[k.animatedColorProp]:{...oe},[k.animatedMultidimensionalProp]:{...Wt},[k.anchorPoint]:{...Vs},[B.keyframeList]:{defaultTitle:w.keyframe},[B.keyframeValue]:{defaultTitle:w.bezier},[B.keyframeEndValue]:{defaultTitle:w.bezier},[B.positionKeyframeList]:{defaultTitle:w.positionKeyframe},[k.inTangent]:{defaultTitle:w.keyframeBezierHandle},[k.outTangent]:{defaultTitle:w.keyframeBezierHandle},[k.translation]:{defaultTitle:w.animatedPositionStatic,dependents:[{key:\"k\",type:\"Array\",title:B.positionKeyframeList,childType:\"Object\",parentTitle:w.animatedPosition},{key:\"a\",type:\"Constant\",title:lt.animated,parentTitle:{defaultValue:0,values:{0:w.animatedPositionStatic,1:w.animatedPosition}}},{key:\"s\",type:\"Boolean\",title:xt.splitEnabled,parentTitle:w.splitVector},{key:\"x\",type:\"Object\",title:k.animatedValueProp,parentTitle:w.splitVector},{key:\"y\",type:\"Object\",title:k.animatedValueProp,parentTitle:w.splitVector},{key:\"z\",type:\"Object\",title:k.animatedValueProp,parentTitle:w.splitVector}]},[k.scale]:{...Wt},[k.rotationClockwise]:{...X},[k.polygonRotationClockwise]:{...X},[k.rotationX]:{...X},[k.rotationY]:{...X},[k.rotationZ]:{...X},[k.skew]:{...X},[k.skewAxis]:{...X},[k.orientation]:{...Wt},[k.size]:{...Wt},[k.rounded]:{...X},[k.level]:{...Wt},[k.shapeEllipseSize]:{...Wt},[k.startPoint]:{...Wt},[k.endPoint]:{...Wt},[k.splitX]:{...X},[k.splitY]:{...X},[k.splitZ]:{...X},[k.effectValueAngleValue]:{...X},[k.effectValueCheckboxValue]:{...X},[k.effectValueColorValue]:{...oe},[k.effectValueDropdownValue]:{...X},[k.effectValueLayerValue]:{...X},[k.effectValuePointValue]:{...Wt},[k.effectValueSliderValue]:{...X},[k.opacity]:{...X},[k.transformOpacity]:{...X},[k.maskOpacity]:{...X},[k.timeRemapping]:{...X},[k.dilate]:{...X},[k.perspective]:{...X},[k.highlightLength]:{...X},[k.highlightAngle]:{...X},[w.strokeDashDefault]:{...X},[k.miterLimitAlternative]:{...X},[k.strokeWidth]:{...X},[k.outerRadius]:{...X},[k.outerRoundness]:{...X},[k.points]:{...X},[k.innerRadius]:{...X},[k.innerRoundness]:{...X},[k.amount]:{...X},[k.copies]:{...X},[k.offset]:{...X},[k.radius]:{...X},[B.shapeKeyframeList]:{defaultTitle:w.shapeKeyframe},[B.shapeKeyframeStart]:{defaultTitle:w.bezier},[w.animatedShapeStatic]:{defaultTitle:w.bezier},[k.shapeTrimStart]:{...X},[k.shapeTrimEnd]:{...X},[k.angle]:{...X},[k.miterLimit]:{...X},[k.roundness]:{...X},[k.shapeZigZagSize]:{...X},[w.layerStyleChokeSpread]:{...X},[k.chokeSpread]:{...X},[k.layerStyleBlendMode]:{...X},[k.blurSize]:{...X},[k.noise]:{...X},[k.distance]:{...X},[k.layerStyleColor]:{...oe},[k.layerConceal]:{...X},[k.range]:{...X},[k.jitter]:{...X},[k.source]:{...X},[k.strength]:{...X},[k.bevelStyle]:{...X},[k.technique]:{...X},[k.soften]:{...X},[k.globalAngle]:{...X},[k.altitude]:{...X},[k.highlightMode]:{...X},[k.highlightColor]:{...X},[k.highlightOpacity]:{...X},[k.shadowMode]:{...X},[k.shadowColor]:{...oe},[k.shadowOpacity]:{...X},[k.invert]:{...X},[k.smoothness]:{...X},[k.reverse]:{...X},[k.align]:{...X},[w.gradientOverlay]:{...X},[k.firstMargin]:{...X},[k.lastMargin]:{...X},[k.reversePath]:{...X},[k.forceAlignment]:{...X},[k.perpendicularToPath]:{...X},[k.strokeWidth]:{...X},[k.strokeHue]:{...X},[k.strokeSaturation]:{...X},[k.strokeBrightness]:{...X},[k.strokeOpacity]:{...X},[k.strokeHue]:{...X},[k.fillColor]:{...oe},[k.fillHue]:{...X},[k.fillSaturation]:{...X},[k.fillOpacity]:{...X},[k.fillBrightness]:{...X},[k.letterSpacing]:{...X},[k.blur]:{...X},[k.lineSpacing]:{...X},[k.minEase]:{...X},[k.maxEase]:{...X},[k.maxAmount]:{...X},[k.textSelectorStart]:{...X},[k.textSelectorEnd]:{...X},[k.shape]:{...ii},[k.maskVertices]:{...ii},[k.shapeFillColor]:{...oe},[k.shapeStrokeColor]:{...Wt},[B.documentStrokeColor]:{...oe},[B.documentFillColor]:{...oe},[k.center]:{...Wt},[k.textGroupAlignment]:{...Wt},[B.masksProperties]:{defaultTitle:w.mask},[B.textFontList]:{defaultTitle:w.textFont},[k.startOpacity]:{...X},[w.endOpacity]:{...X},[B.strokeDashList]:{defaultTitle:w.strokeDashDefault,dependents:[{key:\"n\",type:\"Constant\",title:U.strokeDashType,parentTitle:{prefix:\"stroke-dash\",defaultValue:\"d\",values:{d:\"default\",g:\"gap\",o:\"offset\"}}}]},[k.strokeLength]:{...X},[B.markers]:{defaultTitle:w.marker},[k.textCharacterData]:{defaultTitle:w.characterShapes,dependents:[{key:\"shapes\",type:\"Array\",title:B.shapeList,parentTitle:w.characterShapes},{key:\"refId\",type:\"String\",title:U.referenceId,parentTitle:w.characterPrecomp},{key:\"ks\",type:\"Object\",title:k.layerTransform,parentTitle:w.characterPrecomp},{key:\"ip\",type:\"Number\",title:z.inPoint,parentTitle:w.characterPrecomp},{key:\"op\",type:\"Number\",title:z.outPoint,parentTitle:w.characterPrecomp},{key:\"sr\",type:\"Number\",title:z.timeStretch,parentTitle:w.characterPrecomp},{key:\"st\",type:\"Number\",title:z.timeStart,parentTitle:w.characterPrecomp}]},[B.textDocumentKeyframes]:{defaultTitle:w.textDocumentKeyframe},[B.textRanges]:{defaultTitle:w.textRange}},ft=(t,e,r=\"ty\")=>{let i=Aa[t]?.dependents?.find(h=>h.key===r);if(i?.type!==\"Constant\")return {};let{prefix:s,values:a}=i.parentTitle,n=s?`${s}-`:\"\",o=Object.values(a),l={};for(let h of o)typeof h==\"string\"&&(l[n+h]=e);return l},kh={},Ta=(t,e)=>{switch(t.type){case\"Object\":return Aa[e]||{defaultTitle:e};case\"Array\":return kh[e]||{defaultTitle:e};default:throw new Error(\"The node.type has to be 'Array' or 'Object'\")}},Ph={required:{p:{[w.assetImage]:U.filename,[w.assetPrecomposition]:U.filename,[w.assetDataSource]:U.filename},sc:{[w.layerSolidColor]:U.hexColor},ch:{[B.textCharacters]:U.character},fName:{[w.textFont]:U.fontName},fStyle:{[w.textFont]:U.fontStyle},style:{[B.textCharacters]:U.fontStyle},fFamily:{[w.textFont]:U.fontFamily,[B.textCharacters]:U.fontFamily},f:{[k.textDocument]:U.fontFamily},t:{[k.textDocument]:U.text}},known:{x:{[w.animatedValue]:U.expression,[w.animatedValueStatic]:U.expression,[w.animatedShape]:U.expression,[w.animatedShapeStatic]:U.expression,[w.animatedPosition]:U.expression,[w.animatedPositionStatic]:U.expression,[w.animatedColor]:U.expression,[w.animatedColorStatic]:U.expression,[w.animatedMultidimensional]:U.expression,[w.animatedMultidimensionalStatic]:U.expression,[k.textAnimatedDocument]:U.expression},v:{[w.animation]:U.version},cm:{[w.marker]:U.markerComment},a:{[k.metadata]:U.author},k:{[k.metadata]:U.keyword},d:{[k.metadata]:U.description},tc:{[k.metadata]:U.themeColor},g:{[k.metadata]:U.generator},id:{[w.assetImage]:U.id,[w.assetPrecomposition]:U.id,[w.assetDataSource]:U.id},refId:{[w.layerAudio]:U.idSound,[w.layerPrecomposition]:U.idReference,[w.layerImage]:U.idImage,[w.layerData]:U.idDataSource,[w.characterPrecomp]:U.idReference},u:{[w.assetImage]:U.path,[w.assetPrecomposition]:U.path,[w.assetDataSource]:U.path},nm:{[w.animation]:U.name,[w.assetImage]:U.name,[w.assetPrecomposition]:U.name,[w.assetDataSource]:U.name,[w.textRange]:U.name,[k.transformRepeater]:U.name,[w.animatedValue]:U.name,[w.animatedValueStatic]:U.name,[w.animatedShape]:U.name,[w.animatedShapeStatic]:U.name,[w.animatedPosition]:U.name,[w.animatedPositionStatic]:U.name,[w.animatedColor]:U.name,[w.animatedColorStatic]:U.name,[w.animatedMultidimensional]:U.name,[w.animatedMultidimensionalStatic]:U.name,...ft(B.effectParameters,U.name),...ft(B.effectList,U.name),[w.mask]:U.name,...ft(B.composition,U.name),...ft(B.shapeList,U.name),[w.strokeDashDefault]:U.name,[w.strokeDashGap]:U.name,[w.strokeDashOffset]:U.name,[w.layerStyleBevelEmboss]:U.name,[w.layerStyleColorOverlay]:U.name,[w.layerStyleDropShadow]:U.name,[w.layerStyleGradientOverlay]:U.name,[w.layerStyleInnerShadow]:U.name,[w.layerStyleOuterGlow]:U.name,[w.layerStyleSatin]:U.name,[w.layerStyleStroke]:U.name,[k.layerTransform]:U.name},mn:{[w.animation]:U.matchName,[w.animatedValue]:U.matchName,[w.animatedValueStatic]:U.matchName,[w.animatedShape]:U.matchName,[w.animatedShapeStatic]:U.matchName,[w.animatedPosition]:U.matchName,[w.animatedPositionStatic]:U.matchName,[w.animatedColor]:U.matchName,[w.animatedColorStatic]:U.matchName,[w.animatedMultidimensional]:U.matchName,[w.animatedMultidimensionalStatic]:U.matchName,...ft(B.effectParameters,U.matchName),...ft(B.effectList,U.matchName),[w.mask]:U.matchName,...ft(B.composition,U.matchName),...ft(B.shapeList,U.matchName),[w.strokeDashDefault]:U.matchName,[w.strokeDashGap]:U.matchName,[w.strokeDashOffset]:U.matchName,[w.layerStyleBevelEmboss]:U.name,[w.layerStyleColorOverlay]:U.name,[w.layerStyleDropShadow]:U.name,[w.layerStyleGradientOverlay]:U.name,[w.layerStyleInnerShadow]:U.name,[w.layerStyleOuterGlow]:U.name,[w.layerStyleSatin]:U.name,[w.layerStyleStroke]:U.name,[k.transformRepeater]:U.matchName},ln:{...ft(B.composition,U.idLayerXml),...ft(B.shapeList,U.idLayerXml)},cl:{...ft(B.composition,U.cssClass),...ft(B.shapeList,U.cssClass)},fPath:{[w.textFont]:U.fontPath},fWeight:{[w.textFont]:U.fontWeight},fClass:{[w.textFont]:U.fontCssClass},tg:{...ft(B.composition,U.layerXmlTagName)},t:{[w.assetImage]:U.assetImageType}}},Ch={required:{ty:{...ft(B.composition,z.layerType),...ft(B.shapeList,U.shapeType)}},known:{mode:{[w.mask]:U.maskMode},n:{[w.strokeDashDefault]:U.strokeDashType,[w.strokeDashGap]:U.strokeDashType,[w.strokeDashOffset]:U.strokeDashType},t:{[w.assetImage]:U.assetImageType}}},_h={required:{ip:{[w.animation]:z.inPoint,...ft(B.composition,z.inPoint)},op:{[w.animation]:z.outPoint,...ft(B.composition,z.outPoint),[w.characterPrecomp]:z.outPoint},p:{[k.animatedGradientColors]:z.count},k:{[w.animatedValueStatic]:z.staticValue,[w.animatedMultidimensionalStatic]:z.staticValue,[w.animatedPositionStatic]:z.staticValue,[w.animatedValue]:z.staticValue},w:{[w.animation]:z.width,[w.assetImage]:z.width,[w.assetPrecomposition]:z.width,[B.textCharacters]:z.width,[w.layerPrecomposition]:z.width},sw:{[w.layerSolidColor]:z.width},h:{[w.animation]:z.height,[w.assetImage]:z.height,[w.assetPrecomposition]:z.height,[w.layerPrecomposition]:z.height},sh:{[w.layerSolidColor]:z.height},size:{[B.textCharacters]:z.fontSize},ls:{[k.textDocument]:z.baselineShift},t:{[w.keyframe]:z.time,[B.keyframeList]:z.time,[B.keyframeValue]:z.time,[w.positionKeyframe]:z.time,[B.positionKeyframeList]:z.time,[w.keyframeBezierHandle]:z.time,[w.shapeKeyframe]:z.time,[w.textDocumentKeyframe]:z.timeStart},s:{[k.textDocument]:z.fontSize}},known:{v:{[w.effectValueIgnored]:z.value},tm:{[w.marker]:z.markerTime},dr:{[w.marker]:z.markerDuration},sa:{[k.motionBlur]:z.shutterAngle},sp:{[k.motionBlur]:z.shutterPhase},spf:{[k.motionBlur]:z.samplesPerFrame},asl:{[k.motionBlur]:z.adaptiveSampleLimit},ix:{...ft(B.shapeList,z.propertyIndex),...ft(B.effectList,z.propertyIndex),...ft(B.effectParameters,z.propertyIndex),[w.animatedValue]:z.propertyIndex,[w.animatedValueStatic]:z.propertyIndex,[w.animatedShape]:z.propertyIndex,[w.animatedShapeStatic]:z.propertyIndex,[w.animatedPosition]:z.propertyIndex,[w.animatedPositionStatic]:z.propertyIndex,[w.animatedColor]:z.propertyIndex,[w.animatedColorStatic]:z.propertyIndex,[w.animatedMultidimensional]:z.propertyIndex,[w.animatedMultidimensionalStatic]:z.propertyIndex},ind:{...ft(B.composition,z.compositionIndex),[w.shapePath]:z.shapePathIndex,...ft(B.effectParameters,z.effectParametersIndex),...ft(B.effectList,z.effectListIndex)},cix:{...ft(B.shapeList,z.expressionPropertyIndex)},fr:{[w.animation]:z.framerate,[w.assetPrecomposition]:z.framerate},sr:{...ft(B.composition,z.timeStretch),[w.characterPrecomp]:z.timeStretch},st:{...ft(B.composition,z.timeStart),[w.characterPrecomp]:z.timeStart},l:{[w.animatedMultidimensional]:z.length,[w.animatedMultidimensionalStatic]:z.length,[w.animatedPosition]:z.length,[w.animatedPositionStatic]:z.length,[k.translation]:z.length},parent:{...ft(B.composition,z.parentIndex)},td:{[w.layerPrecomposition]:z.matteTarget,[w.layerShape]:z.matteTarget,[w.layerSolidColor]:z.matteTarget,[w.layerImage]:z.matteTarget,[w.layerNull]:z.matteTarget,[w.layerText]:z.matteTarget},ml:{[w.shapeGradientStroke]:z.miterLimitValue,[w.shapeStroke]:z.miterLimitValue},np:{[w.shapeGroup]:z.numberOfProperties,[k.effectValueAngleValue]:z.numberOfProperties,[k.effectValueCheckboxValue]:z.numberOfProperties,[k.effectValueColorValue]:z.numberOfProperties,[k.effectValueDropdownValue]:z.numberOfProperties,[k.effectValueIgnoredValue]:z.numberOfProperties,[k.effectValueLayerValue]:z.numberOfProperties,[k.effectValuePointValue]:z.numberOfProperties,[k.effectValueSliderValue]:z.numberOfProperties,[w.effect]:z.numberOfProperties,[B.effectList]:z.numberOfProperties,[B.effectParameters]:z.numberOfProperties,...ft(B.effectList,z.numberOfProperties),...ft(B.effectParameters,z.numberOfProperties)},mm:{[w.shapeMerge]:z.mergeMode},ip:{[w.characterPrecomp]:z.inPoint},ascent:{[w.textFont]:z.ascent},r:{[k.textSelector]:z.rangeUnits},lh:{[k.textDocument]:z.lineHeight},tr:{[k.textDocument]:z.textTracking},ls:{[k.textDocument]:z.baselineShift}}},Eh={required:{ty:{...ft(B.composition,z.layerType),...ft(B.layerStyleList,z.layerStyleType),...ft(B.effectParameters,z.effectType),...ft(B.effectList,z.effectType)},bm:{...ft(B.composition,z.blendMode),...ft(B.shapeList,z.blendMode)},d:{[w.shapeEllipse]:z.shapeDirection,[w.shapePath]:z.shapeDirection,[w.shapePolygon]:z.shapeDirection,[w.shapeStar]:z.shapeDirection,[w.shapeRectangle]:z.shapeDirection},t:{[w.assetDataSource]:z.dataSourceType},origin:{[w.textFont]:z.textType},b:{[k.textSelector]:z.basedOn},sh:{[k.textSelector]:z.textTypeShape}},known:{tt:{[w.layerPrecomposition]:z.matteMode,[w.layerShape]:z.matteMode,[w.layerSolidColor]:z.matteMode,[w.layerImage]:z.matteMode,[w.layerNull]:z.matteMode,[w.layerText]:z.matteMode},m:{[w.shapeRepeater]:z.composite,[w.shapeTrim]:z.multiple,[k.textFollowPath]:z.textMask},r:{[w.shapeFill]:z.fillRuleValue,[w.shapeGradientFill]:z.fillRuleValue},t:{[w.shapeGradientFill]:z.gradientType,[w.shapeGradientStroke]:z.gradientType},gt:{[w.layerStyleGradientOverlay]:z.gradientType},lc:{[w.shapeGradientStroke]:z.lineCapType,[w.shapeStroke]:z.lineCapType},lj:{[w.shapeGradientStroke]:z.lineJoinType,[w.shapeStroke]:z.lineJoinType,[w.shapeOffsetPath]:z.lineJoin},sy:{[w.shapePolygon]:z.shapePolygonStarType,[w.shapeStar]:z.shapePolygonStarType},g:{[k.textAlignmentOptions]:z.textTypeGrouping},j:{[k.textDocument]:z.textTypeJustify},ca:{[k.textDocument]:z.textTypeCaps},vj:{[k.textDocument]:z.textTypeVerticalJustify}}},Ah={required:{},known:{}},Th={required:{x:{[w.keyframe]:lt.xAxisValue,[B.keyframeList]:lt.xAxisValue,[B.keyframeValue]:lt.xAxisValue,[w.positionKeyframe]:lt.xAxisValue,[B.positionKeyframeList]:lt.xAxisValue,[w.keyframeBezierHandle]:lt.xAxisValue},y:{[w.keyframe]:lt.yAxisValue,[B.keyframeList]:lt.yAxisValue,[B.keyframeValue]:lt.yAxisValue,[w.positionKeyframe]:lt.yAxisValue,[B.positionKeyframeList]:lt.yAxisValue,[w.keyframeBezierHandle]:lt.yAxisValue},t:{[k.textSelector]:lt.expressible}},known:{rn:{[k.textSelector]:lt.randomize},ddd:{[w.animation]:lt.threedimensional,...ft(B.composition,lt.threedimensional)},ao:{[w.layerPrecomposition]:lt.autoOrient,[w.layerShape]:lt.autoOrient,[w.layerSolidColor]:lt.autoOrient,[w.layerImage]:lt.autoOrient,[w.layerNull]:lt.autoOrient,[w.layerText]:lt.autoOrient},a:{[w.animatedValue]:lt.animated,[w.animatedValueStatic]:lt.animated,[w.animatedShape]:lt.animated,[w.animatedShapeStatic]:lt.animated,[w.animatedPosition]:lt.animated,[w.animatedPositionStatic]:lt.animated,[w.animatedColor]:lt.animated,[w.animatedColorStatic]:lt.animated,[w.animatedMultidimensional]:lt.animated,[w.animatedMultidimensionalStatic]:lt.animated},e:{[w.assetImage]:lt.embedded,[w.assetDataSource]:lt.embedded},en:{...ft(B.effectList,lt.enabled)},xt:{[w.assetPrecomposition]:lt.extraComposition},h:{[w.keyframe]:lt.hold,[B.keyframeList]:lt.hold,[B.keyframeValue]:lt.hold,[w.positionKeyframe]:lt.hold,[B.positionKeyframeList]:lt.hold,[w.keyframeBezierHandle]:lt.hold,[w.shapeKeyframe]:lt.hold}}},Mh={required:{s:{[w.splitVector]:xt.splitEnabled}},known:{c:{[w.bezier]:xt.closed},inv:{[w.mask]:xt.inverted},hd:{...ft(B.composition,xt.hidden),...ft(B.shapeList,xt.hidden)},cp:{[w.layerPrecomposition]:xt.collapseTransform,[w.layerShape]:xt.collapseTransform,[w.layerSolidColor]:xt.collapseTransform,[w.layerImage]:xt.collapseTransform,[w.layerNull]:xt.collapseTransform,[w.layerText]:xt.collapseTransform},hasMask:{[w.layerPrecomposition]:xt.hasMask,[w.layerShape]:xt.hasMask,[w.layerSolidColor]:xt.hasMask,[w.layerImage]:xt.hasMask,[w.layerNull]:xt.hasMask,[w.layerText]:xt.hasMask},mb:{[w.layerPrecomposition]:xt.motionBlurEnabled,[w.layerShape]:xt.motionBlurEnabled,[w.layerSolidColor]:xt.motionBlurEnabled,[w.layerImage]:xt.motionBlurEnabled,[w.layerNull]:xt.motionBlurEnabled,[w.layerText]:xt.motionBlurEnabled},of:{[k.textDocument]:xt.strokeOverFill}}},Dh={required:{assets:{[w.animation]:B.assets},layers:{[w.animation]:B.composition,[w.assetPrecomposition]:B.composition},shapes:{[w.layerShape]:B.shapeList,[w.characterShapes]:B.shapeList},ef:{[w.effect]:B.effectParameters,...ft(B.effectList,B.effectParameters)},i:{[w.bezier]:B.inTangents},o:{[w.bezier]:B.outTangents},v:{[w.bezier]:B.vertices},k:{[k.textAnimatedDocument]:B.textDocumentKeyframes,[w.animatedValue]:B.keyframeList,[w.animatedValueStatic]:B.staticValues,[w.animatedMultidimensional]:B.keyframeList,[w.animatedMultidimensionalStatic]:B.staticValues,[w.animatedPosition]:B.positionKeyframeList,[w.animatedPositionStatic]:B.staticValues,[w.animatedColor]:B.keyframeList,[w.animatedShape]:B.shapeKeyframeList,[w.animatedColorStatic]:B.colorRgba},a:{[k.textAnimatorData]:B.textRanges},x:{[w.keyframeBezierHandle]:B.xAxis},y:{[w.keyframeBezierHandle]:B.yAxis},s:{[w.shapeKeyframe]:B.shapeKeyframeStart},fc:{[k.textDocument]:B.documentFillColor}},known:{k:{[k.metadata]:B.keywords},comps:{[w.animation]:B.extraCompositions},chars:{[w.animation]:B.textCharacters},markers:{[w.animation]:B.markers},masksProperties:{[w.layerPrecomposition]:B.masksProperties,[w.layerShape]:B.masksProperties,[w.layerSolidColor]:B.masksProperties,[w.layerImage]:B.masksProperties,[w.layerNull]:B.masksProperties,[w.layerText]:B.masksProperties},ef:{[w.layerPrecomposition]:B.effectList,[w.layerShape]:B.effectList,[w.layerSolidColor]:B.effectList,[w.layerImage]:B.effectList,[w.layerNull]:B.effectList,[w.layerText]:B.effectList},sy:{[w.layerPrecomposition]:B.layerStyle,[w.layerShape]:B.layerStyle,[w.layerSolidColor]:B.layerStyle,[w.layerImage]:B.layerStyle,[w.layerNull]:B.layerStyle,[w.layerText]:B.layerStyle},d:{[w.shapeGradientStroke]:B.strokeDashList,[w.shapeStroke]:B.strokeDashList},it:{[w.shapeGroup]:B.shapeList},s:{[w.keyframe]:B.keyframeValue,[B.keyframeList]:B.keyframeValue,[w.positionKeyframe]:B.keyframeValue,[B.positionKeyframeList]:B.keyframeValue,[w.keyframeBezierHandle]:B.keyframeValue},e:{[w.keyframe]:B.keyframeEndValue,[B.keyframeList]:B.keyframeEndValue,[B.keyframeValue]:B.keyframeEndValue,[w.positionKeyframe]:B.keyframeEndValue,[B.positionKeyframeList]:B.keyframeEndValue,[w.keyframeBezierHandle]:B.keyframeEndValue,[w.shapeKeyframe]:B.keyframeEndValue},to:{[w.positionKeyframe]:B.valueOutTangent},ti:{[w.positionKeyframe]:B.valueInTangent},sz:{[k.textDocument]:B.wrapSize},sc:{[k.textDocument]:B.documentStrokeColor},ps:{[k.textDocument]:B.wrapPosition},list:{[k.textFonts]:B.textFontList}}},Fh={required:{r:{[k.layerTransform]:k.rotationClockwise,[w.shapeTransform]:k.rotationClockwise,[k.transformRepeater]:k.rotationClockwise,[k.textStyle]:k.rotationClockwise,[w.shapePolygon]:k.polygonRotationClockwise,[w.shapeStar]:k.polygonRotationClockwise,[w.shapeRectangle]:k.rounded,[w.shapeRoundedCorners]:k.radius},au:{[w.layerAudio]:k.layerAudioSettings},t:{[w.layerText]:k.textAnimatorData},pe:{[w.layerCamera]:k.perspective},ks:{[w.layerPrecomposition]:k.layerTransform,[w.layerShape]:k.layerTransform,[w.layerSolidColor]:k.layerTransform,[w.layerImage]:k.layerTransform,[w.layerNull]:k.layerTransform,[w.layerText]:k.layerTransform,[w.layerCamera]:k.layerTransform,[w.shapePath]:k.animatedShapeProp},p:{[w.shapeEllipse]:k.animatedPositionProp,[w.shapePolygon]:k.animatedPositionProp,[w.shapeStar]:k.animatedPositionProp,[w.shapeRectangle]:k.animatedPositionProp,[k.textAnimatorData]:k.textFollowPath},s:{[w.shapeEllipse]:k.shapeEllipseSize,[w.shapeGradientFill]:k.startPoint,[w.shapeGradientStroke]:k.startPoint,[w.shapeRectangle]:k.size,[w.shapeTrim]:k.shapeTrimStart,[w.textDocumentKeyframe]:k.textDocument,[w.layerStyleStroke]:k.blurSize,[w.layerStyleDropShadow]:k.blurSize,[w.layerStyleInnerShadow]:k.blurSize,[w.layerStyleBevelEmboss]:k.blurSize,[w.layerStyleSatin]:k.blurSize},o:{[w.shapeFill]:k.opacity,[w.shapeGradientFill]:k.opacity,[w.shapeTrim]:k.offset,[w.shapeGradientStroke]:k.strokeOpacity,[w.shapeStroke]:k.strokeOpacity},c:{[w.shapeFill]:k.shapeFillColor,[w.shapeRepeater]:k.copies,[w.shapeStroke]:k.shapeStrokeColor},e:{[w.shapeGradientFill]:k.endPoint,[w.shapeGradientStroke]:k.endPoint,[w.shapeTrim]:k.shapeTrimEnd},g:{[w.shapeGradientFill]:k.animatedGradientColors,[w.shapeGradientStroke]:k.animatedGradientColors},or:{[w.shapePolygon]:k.outerRadius,[w.shapeStar]:k.outerRadius},os:{[w.shapePolygon]:k.outerRoundness,[w.shapeStar]:k.outerRoundness},pt:{[w.shapePolygon]:k.points,[w.shapeStar]:k.points},ir:{[w.shapeStar]:k.innerRadius},is:{[w.shapeStar]:k.innerRoundness},tr:{[w.shapeRepeater]:k.transformRepeater},data:{[B.textCharacters]:k.textCharacterData},a:{[k.textSelector]:k.maxAmount},d:{[k.textAnimatorData]:k.textAnimatedDocument},k:{[w.animatedShapeStatic]:k.animatedShapeBezier,[k.animatedGradientColors]:k.animatedMultidimensionalProp},lv:{[k.layerAudioSettings]:k.level},x:{[w.splitVector]:k.splitX},y:{[w.splitVector]:k.splitY},z:{[w.splitVector]:k.splitZ},lc:{[w.layerStyleDropShadow]:k.layerConceal},m:{[k.textAnimatorData]:k.textAlignmentOptions},w:{[w.shapeGradientStroke]:k.strokeWidth,[w.shapeStroke]:k.strokeWidth}},known:{xe:{[k.textSelector]:k.maxEase},ne:{[k.textSelector]:k.minEase},meta:{[w.animation]:k.metadata},[k.metadata]:{[w.animation]:k.userMetadata},mb:{[w.animation]:k.motionBlur},fonts:{[w.animation]:k.textFonts},v:{...ft(B.effectParameters,z.value),[w.strokeDashDefault]:k.strokeLength,[w.strokeDashGap]:k.strokeLength,[w.strokeDashOffset]:k.strokeLength,[w.effectValueAngle]:k.effectValueAngleValue,[w.effectValueCheckbox]:k.effectValueCheckboxValue,[w.effectValueColor]:k.effectValueColorValue,[w.effectValueDropdown]:k.effectValueDropdownValue,[w.effectValueIgnored]:k.effectValueIgnoredValue,[w.effectValueLayer]:k.effectValueLayerValue,[w.effectValuePoint]:k.effectValuePointValue,[w.effectValueSlider]:k.effectValueSliderValue},rx:{[k.layerTransform]:k.rotationX,[w.shapeTransform]:k.rotationX,[k.transformRepeater]:k.rotationX,[k.textStyle]:k.rotationX},ry:{[k.layerTransform]:k.rotationY,[w.shapeTransform]:k.rotationY,[k.transformRepeater]:k.rotationY,[k.textStyle]:k.rotationY},rz:{[k.layerTransform]:k.rotationZ,[w.shapeTransform]:k.rotationZ,[k.transformRepeater]:k.rotationZ,[k.textStyle]:k.rotationZ},or:{[k.layerTransform]:k.orientation,[w.shapeTransform]:k.orientation,[k.transformRepeater]:k.orientation,[k.textStyle]:k.orientation},a:{[k.layerTransform]:k.anchorPoint,[k.transformRepeater]:k.anchorPoint,[w.shapeTransform]:k.anchorPoint,[k.textStyle]:k.anchorPoint,[w.shapeGradientFill]:k.highlightAngle,[w.shapeGradientStroke]:k.highlightAngle,[w.shapePuckerBloat]:k.amount,[w.shapeTwist]:k.angle,[w.shapeOffsetPath]:k.amount,[w.textRange]:k.textStyle,[k.textFollowPath]:k.forceAlignment,[k.textSelector]:k.maxAmount,[k.textAlignmentOptions]:k.textGroupAlignment,[w.layerStyleDropShadow]:k.angle,[w.layerStyleInnerShadow]:k.angle,[w.layerStyleBevelEmboss]:k.angle,[w.layerStyleSatin]:k.angle,[w.layerStyleGradientOverlay]:k.angle},s:{[k.layerTransform]:k.scale,[w.shapeTransform]:k.scale,[k.transformRepeater]:k.scale,[k.textStyle]:k.scale,[w.shapeZigZags]:k.shapeZigZagSize,[w.textRange]:k.textSelector,[w.layerStyleStroke]:k.size,[w.layerStyleGradientOverlay]:k.gradientOverlayScale,[k.textSelector]:k.textSelectorStart},o:{[k.layerTransform]:k.transformOpacity,[w.shapeTransform]:k.transformOpacity,[k.transformRepeater]:k.transformOpacity,[k.textStyle]:k.transformOpacity,[k.textSelector]:k.offset,[w.shapeFill]:k.opacity,[w.shapeGradientFill]:k.opacity,[w.shapeGradientStroke]:k.opacity,[w.shapeStroke]:k.opacity,[w.mask]:k.maskOpacity,[w.shapeGradientFill]:k.opacity,[w.shapeRepeater]:k.offset,[w.keyframe]:k.outTangent,[B.keyframeList]:k.outTangent,[B.keyframeValue]:k.outTangent,[w.positionKeyframe]:k.outTangent,[B.positionKeyframeList]:k.outTangent,[w.keyframeBezierHandle]:k.outTangent,[w.shapeKeyframe]:k.outTangent,[w.layerStyleDropShadow]:k.opacity,[w.layerStyleInnerShadow]:k.opacity,[w.layerStyleBevelEmboss]:k.opacity,[w.layerStyleSatin]:k.opacity,[w.layerStyleColorOverlay]:k.opacity,[w.layerStyleGradientOverlay]:k.opacity},i:{[w.keyframe]:k.inTangent,[B.keyframeList]:k.inTangent,[B.keyframeValue]:k.inTangent,[w.positionKeyframe]:k.inTangent,[B.positionKeyframeList]:k.inTangent,[w.keyframeBezierHandle]:k.inTangent,[w.shapeKeyframe]:k.inTangent},sk:{[k.layerTransform]:k.skew,[w.shapeTransform]:k.skew,[k.transformRepeater]:k.skew,[k.textStyle]:k.skew},sa:{[k.layerTransform]:k.skewAxis,[w.shapeTransform]:k.skewAxis,[k.transformRepeater]:k.skewAxis,[k.textStyle]:k.skewAxis},p:{[k.layerTransform]:k.translation,[w.shapeTransform]:k.translation,[k.transformRepeater]:k.translation,[k.textStyle]:k.translation,[k.textFollowPath]:k.perpendicularToPath},pt:{[w.mask]:k.maskVertices,[w.shapeZigZags]:k.points},x:{[w.mask]:k.dilate},tm:{[w.layerPrecomposition]:k.timeRemapping},h:{[w.shapeGradientFill]:k.highlightLength,[w.shapeGradientStroke]:k.highlightLength},r:{[w.shapeGradientFill]:k.fillRule,[w.shapeZigZags]:k.roundness,[k.textFollowPath]:k.reversePath,[w.layerStyleOuterGlow]:k.range},ml2:{[w.shapeGradientStroke]:k.miterLimitAlternative,[w.shapeStroke]:k.miterLimitAlternative},w:{[w.shapeGradientStroke]:k.strokeWidth,[w.shapeStroke]:k.strokeWidth},c:{[w.shapeTrim]:k.center,[w.layerStyleStroke]:k.layerStyleColor,[w.layerStyleDropShadow]:k.layerStyleColor,[w.layerStyleInnerShadow]:k.layerStyleColor,[w.layerStyleBevelEmboss]:k.layerStyleColor,[w.layerStyleOuterGlow]:k.layerStyleColor},ml:{[w.shapeOffsetPath]:k.miterLimit},so:{[w.layerStyleBevelEmboss]:k.shadowOpacity,[w.layerStyleColorOverlay]:k.opacity,[k.transformRepeater]:k.startOpacity},eo:{[k.transformRepeater]:k.startOpacity},ks:{[w.characterPrecomp]:k.layerTransform,[w.shapePath]:k.shape},f:{[k.textFollowPath]:k.firstMargin},l:{[k.textFollowPath]:k.lastMargin},sw:{[k.textStyle]:k.strokeWidth,[k.textDocument]:k.strokeWidth},sc:{[k.textStyle]:k.strokeColor,[k.textDocument]:k.strokeColor,[w.layerStyleBevelEmboss]:k.shadowColor},sh:{[k.textStyle]:k.strokeHue},ss:{[k.textStyle]:k.strokeSaturation},sb:{[k.textStyle]:k.strokeBrightness},fc:{[k.textStyle]:k.fillColor},fh:{[k.textStyle]:k.fillHue},fs:{[k.textStyle]:k.fillSaturation},fo:{[k.textStyle]:k.fillOpacity},fb:{[k.textStyle]:k.fillBrightness},t:{[k.textStyle]:k.letterSpacing},bl:{[k.textStyle]:k.blur},ls:{[k.textStyle]:k.lineSpacing},sm:{[k.textSelector]:k.selectorSmoothness,[w.layerStyleBevelEmboss]:k.shadowMode},e:{[k.textSelector]:k.textSelectorEnd},gf:{[w.layerStyleGradientOverlay]:k.animatedGradientColors},ch:{[w.layerStyleDropShadow]:k.chokeSpread,[w.layerStyleInnerShadow]:k.chokeSpread,[w.layerStyleBevelEmboss]:k.chokeSpread,[w.layerStyleOuterGlow]:k.chokeSpread},bm:{[w.layerStyleDropShadow]:k.layerStyleBlendMode,[w.layerStyleInnerShadow]:k.layerStyleBlendMode,[w.layerStyleBevelEmboss]:k.layerStyleBlendMode,[w.layerStyleSatin]:k.layerStyleBlendMode,[w.layerStyleColorOverlay]:k.layerStyleBlendMode,[w.layerStyleGradientOverlay]:k.layerStyleBlendMode},no:{[w.layerStyleDropShadow]:k.noise,[w.layerStyleInnerShadow]:k.noise,[w.layerStyleOuterGlow]:k.noise,[w.layerStyleInnerGlow]:k.noise},d:{[w.layerStyleDropShadow]:k.distance,[w.layerStyleInnerShadow]:k.distance,[w.layerStyleBevelEmboss]:k.distance,[w.layerStyleOuterGlow]:k.distance},j:{[w.layerStyleOuterGlow]:k.jitter},sr:{[w.layerStyleInnerGlow]:k.source,[w.layerStyleBevelEmboss]:k.strength},bs:{[w.layerStyleBevelEmboss]:k.bevelStyle},bt:{[w.layerStyleBevelEmboss]:k.technique},sf:{[w.layerStyleBevelEmboss]:k.soften},ga:{[w.layerStyleBevelEmboss]:k.globalAngle},ll:{[w.layerStyleBevelEmboss]:k.altitude},hm:{[w.layerStyleBevelEmboss]:k.highlightMode},hc:{[w.layerStyleBevelEmboss]:k.highlightColor},ho:{[w.layerStyleBevelEmboss]:k.highlightOpacity},in:{[w.layerStyleSatin]:k.invert},gs:{[w.layerStyleGradientOverlay]:k.smoothness},re:{[w.layerStyleGradientOverlay]:k.reverse},al:{[w.layerStyleGradientOverlay]:k.align},of:{[w.layerStyleGradientOverlay]:k.offset}}},se=(t,e,r,i)=>{let s=(r.required[t]||{})[e];if(s)return {type:i,title:s,parentTitle:e,required:!0};let a=(r.known[t]||{})[e]||Le;return {type:i,title:a,parentTitle:e,required:!1}},Ih=(t,e)=>se(t,e,Dh,\"collection\"),Oh=(t,e)=>se(t,e,Fh,\"element\"),Vh=(t,e,r)=>{switch(e.value.type){case\"String\":let i=se(t,r,Ph,\"attribute\");return i.title===Le?se(t,r,Ch,\"constant\"):i;case\"Boolean\":return se(t,r,Mh,\"attribute\");case\"Number\":let s=se(t,r,_h,\"attribute\");if(s.title===Le){let a=se(t,r,Eh,\"constant\");return a.title===Le?se(t,r,Th,\"integer-boolean\"):a}else return s;case\"Null\":return se(t,r,Ah,\"attribute\");default:return {type:\"missing\",title:Le,parentTitle:r,required:!1}}},Lh=(t,e,r)=>{switch(e.value.type){case\"Array\":return Ih(t,r);case\"Object\":return Oh(t,r);default:return Vh(t,e,r)}},Rh=class{constructor(t=1/0){this._capacity=t,Os(this,\"_keys\",[]),Os(this,\"_storage\",new WeakMap);}peek(){let t=this.size(),e=this._keys[t-1];return e?this._storage.get(e):void 0}pop(){let t=this._keys.pop();if(t!==void 0){let e=this._storage.get(t);return this._storage.delete(t),e}}push(t){if(this.size()===this._capacity)throw Error(\"Stack has reached max capacity, you cannot add more items\");let e={i:this._keys.length};this._storage.set(e,t),this._keys.push(e);}size(){return this._keys.length}},Bh={position:!0,valueType:!0,messages:{warning:!1}},Ls=(t,e,r)=>{r.messages.warning&&t.message(e);},zh=(t,e)=>!e.valueType||t.type===\"Array\"||t.type===\"Object\"||t.type===\"Document\"?{}:{valueType:t.type.toLowerCase()},xr=(t,e)=>e.position?{position:{...t.loc}}:{},Rs=(t,e)=>{let r=xr(t,e),i=zh(t,e);return ph(t.value,{...r,...i})},Nh=(t,e)=>{let r=t.name.value;if(e.position){let i=xr(t.name,e);return fh(r,{...i})}else return r},Gh=(t,e,r)=>{let i=Nh(t,r),s=typeof i==\"string\"?i:i.value,a={...xr(t,r)},{title:n}=Lh(s,t,e);switch(t.value.type){case\"Array\":return mh(i,n,[],{...a});case\"Object\":return uh(i,n,[],{...a});default:return ch(i,n,[],{...a})}},Ma=(t,e)=>e.loc.end.column===t.loc.end.column;function Ft(t,e,r){Ce(t,e)||r.fail(`Unexpected node type found ${t?.type}, has to be 'array'`);}var jh=t=>{let e=[];return t.elements.forEach(r=>{Ce(r,\"Object\")&&r.members.forEach(i=>e.push(i));}),e},Hh=(t,e,r,i,s)=>{let{key:a,parentTitle:n,type:o}=r;switch(o){case\"Constant\":if(!Ce(t,\"String\")&&!Ce(t,\"Number\"))break;let{defaultValue:l,prefix:h,values:u}=n,f=u[l];if(!f)throw new Error(`[${e}] '${l}' has to present in \"dependent.parentTitle.values\"`);let m=t.value,d=u[m];if(!d){let v=`[${e}] '${m}' is missing in \"dependent.parentTitle.values\"`;Ls(i,v,s);}let p=typeof d>\"u\"?f:d;return h&&h.length>0?`${h}-${p}`:p;case\"Array\":if(!Ce(t,\"Array\"))break;let c=r.childType;if(!(c&&t.elements.find(v=>v.type===c)))break;return n;default:if(o!==t.type){let v=`${e}'s '${a}' type is ${t.type} but has to be ${o}`;Ls(i,v,s);break}return n}},Da=(t,e,r,i,s)=>{let a=e.reduce((n,o)=>{let l=o.name.value;return n[l]=o.value,n},{});for(let n of r){let{key:o}=n,l=a[o];if(!l)continue;let h=Hh(l,t,n,i,s);if(h)return h}},Bs=(t,e,r,i)=>{let s=Ta(t,e),{defaultTitle:a,dependents:n}=s;return n&&Da(e,t.members,n,r,i)||a},zs=(t,e,r,i)=>{let s=Ta(t,e),{defaultTitle:a,dependents:n}=s;if(!n)return a;let o=jh(t);return Da(e,o,n,r,i)||a},qh=(t,e,r,i,s)=>{let a=xr(t,s);switch(t.type){case\"Document\":t.body.type!==\"Object\"&&i.fail(new Error(`Lottie must be \"Object\" but it's \"${t.body.type}\"`));break;case\"Member\":let n=r.peek();r.push(Gh(t,n.title,s));break;case\"Object\":switch(e.type){case\"Document\":r.push(dh([],{...a}));break;case\"Member\":let o=r.peek();Ft(o,\"element\",i);let l=Bs(t,o.title,i,s);r.push(Fs(l,[],{...a}));break;case\"Array\":let h=r.peek();Ft(h,\"array\",i);let u=Bs(t,h.title,i,s);r.push(Fs(u,[],{...a}));break}break;case\"Array\":switch(e.type){case\"Member\":let o=r.peek();Ft(o,\"collection\",i);let l=zs(t,o.title,i,s);r.push(Is(l,[],{...a}));break;case\"Array\":let h=r.peek();Ft(h,\"array\",i);let u=zs(t,h.title,i,s);r.push(Is(u,[],{...a}));break}break;default:switch(e.type){case\"Member\":Ma(t,e)&&r.push(Rs(t,s));break;case\"Array\":r.push(Rs(t,s));break}break}},$h=(t,e,r,i,s,a)=>{switch(t.type){case\"Document\":break;case\"Member\":let n=r.pop();switch(n.type){case\"element\":break;case\"collection\":break;case\"attribute\":!a.hasExpressions&&n.title===\"expression\"&&(a.hasExpressions=!0);break;default:i.fail(\"Node's type has to be 'element', 'collection or 'attribute'\");}let o=r.peek();switch(o.type){case\"object\":break;case\"root\":break;default:i.fail(\"ParentNode's type has to be 'object' or 'root'\");}o.children.push(n);break;case\"Object\":switch(e.type){case\"Document\":break;case\"Member\":let l=r.pop();Ft(l,\"object\",i);let h=r.peek();Ft(h,\"element\",i),l.title===h.title&&(l.title=`${h.title}-children`),h.children=[l];break;case\"Array\":let u=r.pop();Ft(u,\"object\",i);let f=r.peek();Ft(f,\"array\",i),f.children.push(u);break}break;case\"Array\":switch(e.type){case\"Member\":let l=r.pop();Ft(l,\"array\",i);let h=r.peek();Ft(h,\"collection\",i),l.title===h.title&&(l.title=`${h.title}-children`),h.children=[l];break;case\"Array\":let u=r.pop();Ft(u,\"array\",i);let f=r.peek();Ft(f,\"array\",i),f.children.push(u);break}break;default:switch(e.type){case\"Member\":if(Ma(t,e)){let u=r.pop();Ft(u,\"primitive\",i);let f=r.peek();Ft(f,\"attribute\",i),f.children=[u];}break;case\"Array\":let l=r.pop();Ft(l,\"primitive\",i);let h=r.peek();Ft(h,\"array\",i),h.children.push(l);break}break}};function Wh(t,e,r={}){let i=(0, Ds.parse)(t,{tokens:!0}),s=(0, yh.default)(Bh,r.parse),a=i.tokens.length,n=new Rh(a),o={hasExpressions:!1};(0, Ds.traverse)(i,{enter(u,f){qh(u,f,n,e,s);},exit(u,f){$h(u,f,n,e,s,o);}});let l={parse:{...s.messages.warning&&e.messages.length>0?{messages:e.messages}:{}}};Object.assign(e.data,l);let h=n.pop();if(Ce(h,\"root\"))return h.hasExpressions=o.hasExpressions,h;e.fail(`Stack's last item has to be \"root\" but it's \"${h?.type}\"`,h);}var Uh=function(t={}){let e=this.data(\"settings\")||{parse:{}};e.parse=(0, lh.default)(e.parse,t),Object.assign(this,{Parser:(r,i)=>Wh(r,i,e)});},Jh=Uh;function Pe(t){let e=r=>{let i={};return r.children.forEach(s=>{let a=typeof s.key==\"string\"?s.key:s.key.value,n=s.children[0];n&&(i[a]=Pe(n));}),i};switch(t.type){case\"primitive\":switch(typeof t.value){case\"number\":return t.value;case\"string\":return t.value;case\"boolean\":return t.value;case\"object\":return null;default:throw new Error(`Unknown Primitive type ${t.type}.`)}case\"attribute\":return t.children[0]?Pe(t.children[0]):null;case\"collection\":return t.children[0]?Pe(t.children[0]):null;case\"element\":return t.children[0]?Pe(t.children[0]):null;case\"array\":return t.children.map(Pe);case\"root\":return e(t);case\"object\":return e(t);default:throw new Error(`Unknown node type ${t.type}.`)}}var Yh={indent:0};function Kh(t,e,r={}){let i={...Yh,...r.stringify},s=Pe(t);return JSON.stringify(s,null,i.indent)}var Xh=function(t={}){let e=this.data(\"settings\")||{stringify:{}};e.stringify={...e.stringify,...t},Object.assign(this,{Compiler:(r,i)=>Kh(r,i,e)});},Zh=Xh;function Ns(t){if(t)throw t}var Qh=Xt(ya(),1),Gs=Xt(xl(),1);function ui(t){if(typeof t!=\"object\"||t===null)return !1;let e=Object.getPrototypeOf(t);return (e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in t)&&!(Symbol.iterator in t)}function tp(){let t=[],e={run:r,use:i};return e;function r(...s){let a=-1,n=s.pop();if(typeof n!=\"function\")throw new TypeError(\"Expected function as last argument, not \"+n);o(null,...s);function o(l,...h){let u=t[++a],f=-1;if(l){n(l);return}for(;++f<s.length;)(h[f]===null||h[f]===void 0)&&(h[f]=s[f]);s=h,u?ep(u,o)(...h):n(null,...h);}}function i(s){if(typeof s!=\"function\")throw new TypeError(\"Expected `middelware` to be a function, not \"+s);return t.push(s),e}}function ep(t,e){let r;return i;function i(...n){let o=t.length>n.length,l;o&&n.push(s);try{l=t.apply(this,n);}catch(h){let u=h;if(o&&r)throw u;return s(u)}o||(l instanceof Promise?l.then(a,s):l instanceof Error?s(l):a(l));}function s(n,...o){r||(r=!0,e(n,...o));}function a(n){s(null,n);}}var rp=Xt(ya(),1);function ip(t){return !t||typeof t!=\"object\"?\"\":\"position\"in t||\"type\"in t?js(t.position):\"start\"in t||\"end\"in t?js(t):\"line\"in t||\"column\"in t?mi(t):\"\"}function mi(t){return Hs(t&&t.line)+\":\"+Hs(t&&t.column)}function js(t){return mi(t&&t.start)+\"-\"+mi(t&&t.end)}function Hs(t){return t&&typeof t==\"number\"?t:1}var Jt=class extends Error{constructor(t,e,r){let i=[null,null],s={start:{line:null,column:null},end:{line:null,column:null}};if(super(),typeof e==\"string\"&&(r=e,e=void 0),typeof r==\"string\"){let a=r.indexOf(\":\");a===-1?i[1]=r:(i[0]=r.slice(0,a),i[1]=r.slice(a+1));}e&&(\"type\"in e||\"position\"in e?e.position&&(s=e.position):\"start\"in e||\"end\"in e?s=e:(\"line\"in e||\"column\"in e)&&(s.start=e)),this.name=ip(e)||\"1:1\",this.message=typeof t==\"object\"?t.message:t,this.stack=\"\",typeof t==\"object\"&&t.stack&&(this.stack=t.stack),this.reason=this.message,this.fatal,this.line=s.start.line,this.column=s.start.column,this.position=s,this.source=i[0],this.ruleId=i[1],this.file,this.actual,this.expected,this.url,this.note;}};Jt.prototype.file=\"\";Jt.prototype.name=\"\";Jt.prototype.reason=\"\";Jt.prototype.message=\"\";Jt.prototype.stack=\"\";Jt.prototype.fatal=null;Jt.prototype.column=null;Jt.prototype.line=null;Jt.prototype.source=null;Jt.prototype.ruleId=null;Jt.prototype.position=null;var Qt={basename:sp,dirname:ap,extname:np,join:op,sep:\"/\"};function sp(t,e){if(e!==void 0&&typeof e!=\"string\")throw new TypeError('\"ext\" argument must be a string');We(t);let r=0,i=-1,s=t.length,a;if(e===void 0||e.length===0||e.length>t.length){for(;s--;)if(t.charCodeAt(s)===47){if(a){r=s+1;break}}else i<0&&(a=!0,i=s+1);return i<0?\"\":t.slice(r,i)}if(e===t)return \"\";let n=-1,o=e.length-1;for(;s--;)if(t.charCodeAt(s)===47){if(a){r=s+1;break}}else n<0&&(a=!0,n=s+1),o>-1&&(t.charCodeAt(s)===e.charCodeAt(o--)?o<0&&(i=s):(o=-1,i=n));return r===i?i=n:i<0&&(i=t.length),t.slice(r,i)}function ap(t){if(We(t),t.length===0)return \".\";let e=-1,r=t.length,i;for(;--r;)if(t.charCodeAt(r)===47){if(i){e=r;break}}else i||(i=!0);return e<0?t.charCodeAt(0)===47?\"/\":\".\":e===1&&t.charCodeAt(0)===47?\"//\":t.slice(0,e)}function np(t){We(t);let e=t.length,r=-1,i=0,s=-1,a=0,n;for(;e--;){let o=t.charCodeAt(e);if(o===47){if(n){i=e+1;break}continue}r<0&&(n=!0,r=e+1),o===46?s<0?s=e:a!==1&&(a=1):s>-1&&(a=-1);}return s<0||r<0||a===0||a===1&&s===r-1&&s===i+1?\"\":t.slice(s,r)}function op(...t){let e=-1,r;for(;++e<t.length;)We(t[e]),t[e]&&(r=r===void 0?t[e]:r+\"/\"+t[e]);return r===void 0?\".\":lp(r)}function lp(t){We(t);let e=t.charCodeAt(0)===47,r=hp(t,!e);return r.length===0&&!e&&(r=\".\"),r.length>0&&t.charCodeAt(t.length-1)===47&&(r+=\"/\"),e?\"/\"+r:r}function hp(t,e){let r=\"\",i=0,s=-1,a=0,n=-1,o,l;for(;++n<=t.length;){if(n<t.length)o=t.charCodeAt(n);else {if(o===47)break;o=47;}if(o===47){if(!(s===n-1||a===1))if(s!==n-1&&a===2){if(r.length<2||i!==2||r.charCodeAt(r.length-1)!==46||r.charCodeAt(r.length-2)!==46){if(r.length>2){if(l=r.lastIndexOf(\"/\"),l!==r.length-1){l<0?(r=\"\",i=0):(r=r.slice(0,l),i=r.length-1-r.lastIndexOf(\"/\")),s=n,a=0;continue}}else if(r.length>0){r=\"\",i=0,s=n,a=0;continue}}e&&(r=r.length>0?r+\"/..\":\"..\",i=2);}else r.length>0?r+=\"/\"+t.slice(s+1,n):r=t.slice(s+1,n),i=n-s-1;s=n,a=0;}else o===46&&a>-1?a++:a=-1;}return r}function We(t){if(typeof t!=\"string\")throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}var pp={cwd:fp};function fp(){return \"/\"}function di(t){return t!==null&&typeof t==\"object\"&&t.href&&t.origin}function cp(t){if(typeof t==\"string\")t=new URL(t);else if(!di(t)){let e=new TypeError('The \"path\" argument must be of type string or an instance of URL. Received `'+t+\"`\");throw e.code=\"ERR_INVALID_ARG_TYPE\",e}if(t.protocol!==\"file:\"){let e=new TypeError(\"The URL must be of scheme file\");throw e.code=\"ERR_INVALID_URL_SCHEME\",e}return up(t)}function up(t){if(t.hostname!==\"\"){let i=new TypeError('File URL host must be \"localhost\" or empty on darwin');throw i.code=\"ERR_INVALID_FILE_URL_HOST\",i}let e=t.pathname,r=-1;for(;++r<e.length;)if(e.charCodeAt(r)===37&&e.charCodeAt(r+1)===50){let i=e.charCodeAt(r+2);if(i===70||i===102){let s=new TypeError(\"File URL path must not include encoded / characters\");throw s.code=\"ERR_INVALID_FILE_URL_PATH\",s}}return decodeURIComponent(e)}var si=[\"history\",\"path\",\"basename\",\"stem\",\"extname\",\"dirname\"],mp=class{constructor(t){let e;t?typeof t==\"string\"||dp(t)?e={value:t}:di(t)?e={path:t}:e=t:e={},this.data={},this.messages=[],this.history=[],this.cwd=pp.cwd(),this.value,this.stored,this.result,this.map;let r=-1;for(;++r<si.length;){let s=si[r];s in e&&e[s]!==void 0&&e[s]!==null&&(this[s]=s===\"history\"?[...e[s]]:e[s]);}let i;for(i in e)si.includes(i)||(this[i]=e[i]);}get path(){return this.history[this.history.length-1]}set path(t){di(t)&&(t=cp(t)),ni(t,\"path\"),this.path!==t&&this.history.push(t);}get dirname(){return typeof this.path==\"string\"?Qt.dirname(this.path):void 0}set dirname(t){qs(this.basename,\"dirname\"),this.path=Qt.join(t||\"\",this.basename);}get basename(){return typeof this.path==\"string\"?Qt.basename(this.path):void 0}set basename(t){ni(t,\"basename\"),ai(t,\"basename\"),this.path=Qt.join(this.dirname||\"\",t);}get extname(){return typeof this.path==\"string\"?Qt.extname(this.path):void 0}set extname(t){if(ai(t,\"extname\"),qs(this.dirname,\"extname\"),t){if(t.charCodeAt(0)!==46)throw new Error(\"`extname` must start with `.`\");if(t.includes(\".\",1))throw new Error(\"`extname` cannot contain multiple dots\")}this.path=Qt.join(this.dirname,this.stem+(t||\"\"));}get stem(){return typeof this.path==\"string\"?Qt.basename(this.path,this.extname):void 0}set stem(t){ni(t,\"stem\"),ai(t,\"stem\"),this.path=Qt.join(this.dirname||\"\",t+(this.extname||\"\"));}toString(t){return (this.value||\"\").toString(t||void 0)}message(t,e,r){let i=new Jt(t,e,r);return this.path&&(i.name=this.path+\":\"+i.name,i.file=this.path),i.fatal=!1,this.messages.push(i),i}info(t,e,r){let i=this.message(t,e,r);return i.fatal=null,i}fail(t,e,r){let i=this.message(t,e,r);throw i.fatal=!0,i}};function ai(t,e){if(t&&t.includes(Qt.sep))throw new Error(\"`\"+e+\"` cannot be a path: did not expect `\"+Qt.sep+\"`\")}function ni(t,e){if(!t)throw new Error(\"`\"+e+\"` cannot be empty\")}function qs(t,e){if(!t)throw new Error(\"Setting `\"+e+\"` requires `path` to be set too\")}function dp(t){return (0, rp.default)(t)}var yp=Ia().freeze(),Fa={}.hasOwnProperty;function Ia(){let t=tp(),e=[],r={},i,s=-1;return a.data=n,a.Parser=void 0,a.Compiler=void 0,a.freeze=o,a.attachers=e,a.use=l,a.parse=h,a.stringify=u,a.run=f,a.runSync=m,a.process=d,a.processSync=p,a;function a(){let c=Ia(),v=-1;for(;++v<e.length;)c.use(...e[v]);return c.data((0, Gs.default)(!0,{},r)),c}function n(c,v){return typeof c==\"string\"?arguments.length===2?(hi(\"data\",i),r[c]=v,a):Fa.call(r,c)&&r[c]||null:c?(hi(\"data\",i),r=c,a):r}function o(){if(i)return a;for(;++s<e.length;){let[c,...v]=e[s];if(v[0]===!1)continue;v[0]===!0&&(v[0]=void 0);let y=c.call(a,...v);typeof y==\"function\"&&t.use(y);}return i=!0,s=Number.POSITIVE_INFINITY,a}function l(c,...v){let y;if(hi(\"use\",i),c!=null)if(typeof c==\"function\")S(c,...v);else if(typeof c==\"object\")Array.isArray(c)?x(c):b(c);else throw new TypeError(\"Expected usable value, not `\"+c+\"`\");return y&&(r.settings=Object.assign(r.settings||{},y)),a;function g(C){if(typeof C==\"function\")S(C);else if(typeof C==\"object\")if(Array.isArray(C)){let[_,...T]=C;S(_,...T);}else b(C);else throw new TypeError(\"Expected usable value, not `\"+C+\"`\")}function b(C){x(C.plugins),C.settings&&(y=Object.assign(y||{},C.settings));}function x(C){let _=-1;if(C!=null)if(Array.isArray(C))for(;++_<C.length;){let T=C[_];g(T);}else throw new TypeError(\"Expected a list of plugins, not `\"+C+\"`\")}function S(C,_){let T=-1,L;for(;++T<e.length;)if(e[T][0]===C){L=e[T];break}L?(ui(L[1])&&ui(_)&&(_=(0, Gs.default)(!0,L[1],_)),L[1]=_):e.push([...arguments]);}}function h(c){a.freeze();let v=Oe(c),y=a.Parser;return oi(\"parse\",y),$s(y,\"parse\")?new y(String(v),v).parse():y(String(v),v)}function u(c,v){a.freeze();let y=Oe(v),g=a.Compiler;return li(\"stringify\",g),Ws(c),$s(g,\"compile\")?new g(c,y).compile():g(c,y)}function f(c,v,y){if(Ws(c),a.freeze(),!y&&typeof v==\"function\"&&(y=v,v=void 0),!y)return new Promise(g);g(null,y);function g(b,x){t.run(c,Oe(v),S);function S(C,_,T){_=_||c,C?x(C):b?b(_):y(null,_,T);}}}function m(c,v){let y,g;return a.run(c,v,b),Us(\"runSync\",\"run\",g),y;function b(x,S){Ns(x),y=S,g=!0;}}function d(c,v){if(a.freeze(),oi(\"process\",a.Parser),li(\"process\",a.Compiler),!v)return new Promise(y);y(null,v);function y(g,b){let x=Oe(c);a.run(a.parse(x),x,(C,_,T)=>{if(C||!_||!T)S(C);else {let L=a.stringify(_,T);L==null||(bp(L)?T.value=L:T.result=L),S(C,T);}});function S(C,_){C||!_?b(C):g?g(_):v(null,_);}}}function p(c){let v;a.freeze(),oi(\"processSync\",a.Parser),li(\"processSync\",a.Compiler);let y=Oe(c);return a.process(y,g),Us(\"processSync\",\"process\",v),y;function g(b){v=!0,Ns(b);}}}function $s(t,e){return typeof t==\"function\"&&t.prototype&&(gp(t.prototype)||e in t.prototype)}function gp(t){let e;for(e in t)if(Fa.call(t,e))return !0;return !1}function oi(t,e){if(typeof e!=\"function\")throw new TypeError(\"Cannot `\"+t+\"` without `Parser`\")}function li(t,e){if(typeof e!=\"function\")throw new TypeError(\"Cannot `\"+t+\"` without `Compiler`\")}function hi(t,e){if(e)throw new Error(\"Cannot call `\"+t+\"` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.\")}function Ws(t){if(!ui(t)||typeof t.type!=\"string\")throw new TypeError(\"Expected node, got `\"+t+\"`\")}function Us(t,e,r){if(!r)throw new Error(\"`\"+t+\"` finished async. Use `\"+e+\"` instead\")}function Oe(t){return vp(t)?t:new mp(t)}function vp(t){return !!(t&&typeof t==\"object\"&&\"message\"in t&&\"messages\"in t)}function bp(t){return typeof t==\"string\"||(0, Qh.default)(t)}var xp=yp().use(Jh).use(Zh).freeze(),Sp=Xt(Sl(),1),wp={name:\"@dotlottie/common\",version:\"0.3.0\",type:\"module\",description:\"\",author:\"Afsal <afsal@lottiefiles.com>, Sam Osborne <sam@lottiefiles.com>\",license:\"MIT\",private:!0,engines:{node:\">18.0.0\"},module:\"dist/index.js\",types:\"dist/index.d.ts\",files:[\"dist\"],keywords:[],scripts:{build:\"tsup\",dev:\"tsup --watch\",lint:\"eslint .\",\"type-check\":\"tsc --noEmit\"},dependencies:{\"@dotlottie/dotlottie-js\":\"^0.4.2\",\"@lottiefiles/relottie\":\"1.0.0\",\"@lottiefiles/relottie-style\":\"0.4.1\",\"@preact/signals-core\":\"^1.2.3\",\"lottie-web\":\"^5.12.2\"},devDependencies:{\"@lottiefiles/lottie-types\":\"^1.2.0\",tsup:\"^6.1.3\",typescript:\"^4.7.4\"},publishConfig:{access:\"restricted\"}},Oa=(t=>(t.Complete=\"complete\",t.DataFail=\"data_fail\",t.DataReady=\"data_ready\",t.Error=\"error\",t.Frame=\"frame\",t.Freeze=\"freeze\",t.LoopComplete=\"loopComplete\",t.Pause=\"pause\",t.Play=\"play\",t.Ready=\"ready\",t.Stop=\"stop\",t))(Oa||{}),Va=(t=>(t.Error=\"error\",t.Fetching=\"fetching\",t.Frozen=\"frozen\",t.Initial=\"initial\",t.Loading=\"loading\",t.Paused=\"paused\",t.Playing=\"playing\",t.Ready=\"ready\",t.Stopped=\"stopped\",t))(Va||{}),La=(t=>(t.Bounce=\"bounce\",t.Normal=\"normal\",t))(La||{}),Ht={autoplay:!1,direction:1,hover:!1,intermission:0,loop:!1,playMode:\"normal\",speed:1,defaultTheme:\"\"},Ra={autoplay:!1,currentState:\"initial\",frame:0,seeker:0,direction:1,hover:!1,loop:!1,playMode:\"normal\",speed:1,background:\"transparent\",intermission:0,currentAnimationId:void 0},Ai=class{_lottie;_src;_animationConfig;_playbackOptions;_hover=!1;_loop=!1;_counter=0;_intermission=0;_counterInterval=null;_container=null;_name;_mode=\"normal\";_background=\"transparent\";_animation;_defaultTheme;_activeAnimationId;_currentAnimationId;_testId;_listeners=new Map;_currentState=\"initial\";_stateBeforeFreeze=\"initial\";state=new bs(Ra);_frame=0;_seeker=0;_dotLottieLoader=new us;constructor(t,e,r){this._src=t,r?.testId&&(this._testId=r.testId),this._defaultTheme=r?.defaultTheme||\"\",this._playbackOptions=this._validatePlaybackOptions(r||{}),typeof r?.activeAnimationId==\"string\"&&(this._activeAnimationId=r.activeAnimationId),this._container=e||null,typeof r?.background==\"string\"&&this.setBackground(r.background),this._animationConfig={loop:!1,autoplay:!1,renderer:\"svg\",rendererSettings:{clearCanvas:!0,progressiveLoad:!0,hideOnTransparent:!0},...r||{}},this._listenToHover(),this._listenToVisibilityChange();}_listenToHover(){let t=()=>{this._hover&&this.currentState!==\"playing\"&&this.play();},e=()=>{this._hover&&this.currentState===\"playing\"&&this.stop();};this._container?.removeEventListener(\"mouseenter\",t),this._container?.removeEventListener(\"mouseleave\",e),this._container?.addEventListener(\"mouseleave\",e),this._container?.addEventListener(\"mouseenter\",t);}_onVisibilityChange(){!this._lottie||typeof document>\"u\"||(document.hidden&&this.currentState===\"playing\"?this.freeze():this.currentState===\"frozen\"&&this.unfreeze());}_listenToVisibilityChange(){typeof document<\"u\"&&typeof document.hidden<\"u\"&&document.addEventListener(\"visibilitychange\",()=>this._onVisibilityChange());}_getOption(t){if(typeof this._playbackOptions[t]<\"u\")return this._playbackOptions[t];let e=this._dotLottieLoader.manifest?.animations.find(r=>r.id===this._currentAnimationId);return e&&typeof e[t]<\"u\"?e[t]:Ht[t]}_getPlaybackOptions(){let t={};for(let e in Ht)typeof Ht[e]<\"u\"&&(t[e]=this._getOption(e));return t}_getOptionsFromAnimation(t){let{id:e,...r}=t;return {...Ht,...r}}_updateTestData(){!this._testId||!this._lottie||(window.dotLottiePlayer||(window.dotLottiePlayer={[this._testId]:{}}),window.dotLottiePlayer[this._testId]={direction:this._lottie.playDirection,currentState:this._currentState,loop:this.loop,mode:this._mode,speed:this._lottie.playSpeed});}get currentState(){return this._currentState}clearCountTimer(){this._counterInterval&&clearInterval(this._counterInterval);}setCurrentState(t){this._currentState=t,this._notify(),this._updateTestData();}static isPathJSON(t){return t.split(\".\").pop()?.toLowerCase()===\"json\"}get src(){return this._src}updateSrc(t){this._src!==t&&(this._src=t,this._activeAnimationId=void 0,this._currentAnimationId=void 0,this.load());}get intermission(){return this._intermission}get hover(){return this.hover}setHover(t){typeof t==\"boolean\"&&(this._hover=t,this._playbackOptions.hover=t,this._notify());}setIntermission(t){this._intermission=t,this._playbackOptions.intermission=t,this._notify();}get mode(){return this._mode}get animations(){return this._dotLottieLoader.animationsMap}get themes(){return this._dotLottieLoader.themeMap}setMode(t){typeof t==\"string\"&&(this._mode=t,this._playbackOptions.playMode=t,this._notify(),this._updateTestData());}get container(){if(this._container)return this._container}goToAndPlay(t,e,r){this._lottie&&(this._lottie.goToAndPlay(t,e,r),this.setCurrentState(\"playing\"));}goToAndStop(t,e,r){this._lottie&&(this._lottie.goToAndStop(t,e,r),this.setCurrentState(\"stopped\"));}seek(t){if(!this._lottie)return;let e=t;typeof e==\"number\"&&(e=Math.round(e));let r=/^(\\d+)(%?)$/u.exec(e.toString());if(!r)return;let i=r[2]===\"%\"?this.totalFrames*Number(r[1])/100:r[1];i!==void 0&&(this._lottie.goToAndPlay(i,!0),this.currentState===\"playing\"?this.play():this.currentState===\"frozen\"?this.freeze():this.pause());}_validatePlaybackOptions(t){if(!t)return {};let e={};for(let[r,i]of Object.entries(t))switch(r){case\"autoplay\":typeof i==\"boolean\"&&(e.autoplay=i);break;case\"direction\":typeof i==\"number\"&&[1,-1].includes(i)&&(e.direction=i);break;case\"loop\":(typeof i==\"boolean\"||typeof i==\"number\")&&(e.loop=i);break;case\"playMode\":typeof i==\"string\"&&[\"normal\",\"bounce\"].includes(i)&&(e.playMode=i);break;case\"speed\":typeof i==\"number\"&&(e.speed=i);break;case\"themeColor\":typeof i==\"string\"&&(e.themeColor=i);break;case\"hover\":typeof i==\"boolean\"&&(e.hover=i);break;case\"intermission\":typeof i==\"number\"&&(e.intermission=i);break;case\"defaultTheme\":typeof i==\"string\"&&(e.defaultTheme=i);break}return this._requireValidPlaybackOptions(e),e}_requireAnimationsInTheManifest(){if(!this._dotLottieLoader.manifest?.animations.length)throw vt(\"No animations found in manifest.\")}_requireAnimationsToBeLoaded(){if(this._dotLottieLoader.animationsMap.size===0)throw vt(\"No animations have been loaded.\")}play(t,e){if(this._lottie){if(this._requireAnimationsInTheManifest(),this._requireAnimationsToBeLoaded(),!t||typeof t==\"string\"&&t===this._currentAnimationId){this._lottie.playDirection===-1&&this._lottie.currentFrame===0?this._lottie.goToAndPlay(this._lottie.totalFrames,!0):this._lottie.play(),this.setCurrentState(\"playing\");return}if(typeof t==\"number\"){let r=this._dotLottieLoader.manifest?.animations[t];if(!r)throw vt(\"animation not found.\");typeof e==\"function\"?this.render({id:r.id,...e(this._getPlaybackOptions(),this._getOptionsFromAnimation(r))}):this.render({id:r.id});}if(typeof t==\"string\"){let r=this._dotLottieLoader.manifest?.animations.find(i=>i.id===t);if(!r)throw vt(\"animation not found.\");typeof e==\"function\"?this.render({id:r.id,...e(this._getPlaybackOptions(),this._getOptionsFromAnimation(r))}):this.render({id:r.id});}}}togglePlay(){this.currentState===\"playing\"?this.pause():this.play();}_getAnimationByIdOrIndex(t){if(this._requireAnimationsInTheManifest(),this._requireAnimationsToBeLoaded(),typeof t==\"number\"){let e=this._dotLottieLoader.manifest?.animations[t];if(!e)throw vt(\"animation not found.\");return e}if(typeof t==\"string\"){let e=this._dotLottieLoader.manifest?.animations.find(r=>r.id===t);if(!e)throw vt(\"animation not found.\");return e}throw vt(\"first param must be a number or string\")}get activeAnimationId(){return this._getActiveAnimationId()}get currentAnimationId(){return this._currentAnimationId}reset(){let t=this._getActiveAnimationId(),e=this._dotLottieLoader.manifest?.animations.find(r=>r.id===t);if(!e)throw vt(\"animation not found.\");this.render(e);}previous(t){if(!this._dotLottieLoader.manifest||!this._dotLottieLoader.manifest.animations.length)throw vt(\"manifest not found.\");let e=this._dotLottieLoader.manifest.animations.findIndex(i=>i.id===this._currentAnimationId);if(e===-1)throw vt(\"animation not found.\");let r=this._dotLottieLoader.manifest.animations[(e-1+this._dotLottieLoader.manifest.animations.length)%this._dotLottieLoader.manifest.animations.length];if(!r||!r.id)throw vt(\"animation not found.\");typeof t==\"function\"?this.render({id:r.id,...t(this._getPlaybackOptions(),this._getOptionsFromAnimation(r))}):this.render({id:r.id});}next(t){if(!this._dotLottieLoader.manifest||!this._dotLottieLoader.manifest.animations.length)throw vt(\"manifest not found.\");let e=this._dotLottieLoader.manifest.animations.findIndex(i=>i.id===this._currentAnimationId);if(e===-1)throw vt(\"animation not found.\");let r=this._dotLottieLoader.manifest.animations[(e+1)%this._dotLottieLoader.manifest.animations.length];if(!r||!r.id)throw vt(\"animation not found.\");typeof t==\"function\"?this.render({id:r.id,...t(this._getPlaybackOptions(),this._getOptionsFromAnimation(r))}):this.render({id:r.id});}getManifest(){return this._dotLottieLoader.manifest}resize(){this._lottie&&this._lottie.resize();}stop(){this._lottie&&(this.clearCountTimer(),this._counter=0,this.setDirection(this._getOption(\"direction\")),this._lottie.stop(),this.setCurrentState(\"stopped\"));}pause(){this._lottie&&(this.clearCountTimer(),this._lottie.pause(),this.setCurrentState(\"paused\"));}freeze(){this._lottie&&(this.currentState!==\"frozen\"&&(this._stateBeforeFreeze=this.currentState),this._lottie.pause(),this.setCurrentState(\"frozen\"));}unfreeze(){this._lottie&&(this._stateBeforeFreeze===\"playing\"?this.play():this.pause());}destroy(){this._container?.__lottie&&(this._container.__lottie.destroy(),this._container.__lottie=null),this.clearCountTimer(),typeof document<\"u\"&&document.removeEventListener(\"visibilitychange\",()=>this._onVisibilityChange()),this._counter=0,this._lottie?.destroy();}getAnimationInstance(){return this._lottie}static getLottieWebVersion(){return `${wp.dependencies[\"lottie-web\"]}`}addEventListener(t,e){this._listeners.set([t,e],e);try{this._lottie?.addEventListener(t,e);}catch(r){Se(`addEventListener ${r}`);}}getState(){return {autoplay:this._lottie?.autoplay??!1,currentState:this._currentState,frame:this._frame,seeker:this._seeker,direction:this._lottie?.playDirection??1,hover:this._hover,loop:this._loop||!1,playMode:this._mode,speed:this._lottie?.playSpeed??1,background:this._background,intermission:this._intermission,defaultTheme:this._defaultTheme,currentAnimationId:this._currentAnimationId}}_notify(){this.state.setState(this.getState());}get totalFrames(){return this._lottie?.totalFrames||0}get direction(){return this._lottie?this._lottie.playDirection:1}setDirection(t){this._requireValidDirection(t),this._lottie?.setDirection(t),this._playbackOptions.direction=t,this._notify(),this._updateTestData();}get speed(){return this._lottie?.playSpeed||1}setSpeed(t){this._requireValidSpeed(t),this._lottie?.setSpeed(t),this._playbackOptions.speed=t,this._notify(),this._updateTestData();}get autoplay(){return this._lottie?.autoplay??!1}setAutoplay(t){this._requireValidAutoplay(t),this._lottie&&(this._lottie.autoplay=t,this._playbackOptions.autoplay=t,this._notify(),this._updateTestData());}toggleAutoplay(){this._lottie&&this.setAutoplay(!this._lottie.autoplay);}get defaultTheme(){return this._defaultTheme}setDefaultTheme(t){this._defaultTheme=t,this._playbackOptions.defaultTheme=t,this._animation&&this.render(),this._notify();}get loop(){return this._loop}setLoop(t){this._requireValidLoop(t),this.clearCountTimer(),this._loop=t,this._lottie?.setLoop(!!t),this._playbackOptions.loop=t,this._notify(),this._updateTestData();}toggleLoop(){this._lottie&&this.setLoop(!this._loop);}get background(){return this._background}setBackground(t){this._requireValidBackground(t),this._container&&(this._background=t,this._container.style.backgroundColor=t);}async revertToManifestValues(t){let e;!Array.isArray(t)||t.length===0?e=[\"autoplay\",\"defaultTheme\",\"direction\",\"hover\",\"intermission\",\"loop\",\"playMode\",\"speed\",\"activeAnimationId\"]:e=t;let r=!1;if(e.includes(\"activeAnimationId\")){let i=this._dotLottieLoader.manifest?.activeAnimationId,s=this._getAnimationByIdOrIndex(i||0);this._activeAnimationId=i,await this._setCurrentAnimation(s.id),r=!0;}e.forEach(i=>{switch(i){case\"autoplay\":delete this._playbackOptions.autoplay,this.setAutoplay(this._getOption(\"autoplay\"));break;case\"defaultTheme\":delete this._playbackOptions.defaultTheme,this.setDefaultTheme(this._getOption(\"defaultTheme\"));break;case\"direction\":delete this._playbackOptions.direction,this.setDirection(this._getOption(\"direction\"));break;case\"hover\":delete this._playbackOptions.hover,this.setHover(this._getOption(\"hover\"));break;case\"intermission\":delete this._playbackOptions.intermission,this.setIntermission(this._getOption(\"intermission\"));break;case\"loop\":delete this._playbackOptions.loop,this.setLoop(this._getOption(\"loop\"));break;case\"playMode\":delete this._playbackOptions.playMode,this.setMode(this._getOption(\"playMode\")),this.setDirection(this._getOption(\"direction\"));break;case\"speed\":delete this._playbackOptions.speed,this.setSpeed(this._getOption(\"speed\"));break}}),r&&this.render();}removeEventListener(t,e){try{e?this._lottie?.removeEventListener(t,e):this._lottie?.removeEventListener(t),this._listeners.delete([t,e]);}catch(r){Se(\"removeEventListener\",r);}}addEventListeners(){if(this._lottie){this._lottie.addEventListener(\"enterFrame\",()=>{this._lottie&&(this._frame=this._lottie.currentFrame,this._seeker=this._lottie.currentFrame/this._lottie.totalFrames*100,this._notify());}),this._lottie.addEventListener(\"loopComplete\",()=>{if(!this._lottie)return;this.intermission>0&&this.pause();let t=this._lottie.playDirection;this._mode===\"bounce\"&&typeof t==\"number\"&&(t=Number(t)*-1);let e=t===-1?this._lottie.totalFrames-1:0;this.intermission?(this._lottie.goToAndPlay(e,!0),this._lottie.pause(),this._counterInterval=window.setTimeout(()=>{this._lottie&&(this._lottie.setDirection(t),this._lottie.goToAndPlay(e,!0));},this._intermission)):(this._lottie.setDirection(t),this._lottie.goToAndPlay(t===-1?this._lottie.totalFrames-1:0,!0));}),this._lottie.addEventListener(\"complete\",()=>{if(this._lottie&&typeof this._loop==\"number\"&&this._loop>0){if(this._counter+=this._mode===\"bounce\"?.5:1,this._counter>=this._loop){this.stop();return}this._counterInterval=window.setTimeout(()=>{if(!this._lottie)return;let t=this._lottie.playDirection;this._mode===\"bounce\"&&typeof t==\"number\"&&(t=Number(t)*-1);let e=t===-1?this._lottie.totalFrames-1:0;this._lottie.setDirection(t),this._lottie.goToAndPlay(e,!0);},this._intermission);}else this.stop(),this.setCurrentState(\"stopped\");});for(let[[t],e]of this._listeners)this._lottie.addEventListener(t,e);}}async _setCurrentAnimation(t){let e=await this._dotLottieLoader.getAnimation(t);this._currentAnimationId=t,this._animation=e;}async render(t){if(t?.id)await this._setCurrentAnimation(t.id);else if(!this._animation)throw vt(\"no animation selected\");this.destroy();let e=Ht.loop,r=Ht.autoplay,i=Ht.playMode,s=Ht.intermission,a=Ht.hover,n=Ht.direction,o=Ht.speed,l=Ht.defaultTheme;e=t?.loop??this._getOption(\"loop\"),r=t?.autoplay??this._getOption(\"autoplay\"),i=t?.playMode??this._getOption(\"playMode\"),s=t?.intermission??this._getOption(\"intermission\"),a=t?.hover??this._getOption(\"hover\"),n=t?.direction??this._getOption(\"direction\"),o=t?.speed??this._getOption(\"speed\"),l=t?.defaultTheme??this._getOption(\"defaultTheme\"),this._defaultTheme=l;let h={...this._animationConfig,autoplay:a?!1:r,loop:typeof e==\"number\"?!1:e};this._mode=i,this._intermission=s,this._hover=a,this._loop=e;let u=await this._dotLottieLoader.getTheme(l);if(u){let f=await xp().use(oh,{lss:u}).process(JSON.stringify(this._animation));this._animation=JSON.parse(f.value);}else this._animation=await this._dotLottieLoader.getAnimation(this._currentAnimationId??\"\");this._lottie=Sp.default.loadAnimation({...h,container:this._container,animationData:this._animation}),this.addEventListeners(),this._container&&(this._container.__lottie=this._lottie),this.setCurrentState(\"ready\"),this._lottie.setDirection(n),this._lottie.setSpeed(o),r&&!a&&this.play(),this._updateTestData();}_getActiveAnimationId(){let t=this._dotLottieLoader.manifest;return this._activeAnimationId??t?.activeAnimationId??t?.animations[0]?.id??void 0}async load(t){if(this._currentState===\"loading\"){Dr(\"Loading in progress..\");return}try{if(this.setCurrentState(\"loading\"),typeof this._src==\"string\")if(Ir(this._src)){let r=JSON.parse(this._src);this._dotLottieLoader.loadFromLottieJSON(r);}else {let r=new URL(this._src,window.location.href);await this._dotLottieLoader.loadFromUrl(r.toString());}else if(typeof this._src==\"object\"&&me(this._src))this._dotLottieLoader.loadFromLottieJSON(this._src);else throw vt(\"Invalid src provided\");if(!this._dotLottieLoader.manifest)throw vt(\"No manifest found\");let e=this._getActiveAnimationId();if(!e)throw vt(\"No active animation found\");await this._setCurrentAnimation(e),await this.render(t);}catch(e){this.setCurrentState(\"error\"),e instanceof Error&&Se(`Error loading animation: ${e.message}`);}}setErrorState(t){this.setCurrentState(\"error\"),Se(t);}_requireValidDirection(t){if(t!==-1&&t!==1)throw vt(\"Direction can only be -1 (backwards) or 1 (forwards)\")}_requireValidIntermission(t){if(t<0||!Number.isInteger(t))throw vt(\"intermission must be a positive number\")}_requireValidLoop(t){if(typeof t==\"number\"&&(!Number.isInteger(t)||t<0))throw vt(\"loop must be a positive number or boolean\")}_requireValidSpeed(t){if(typeof t!=\"number\")throw vt(\"speed must be a number\")}_requireValidBackground(t){if(typeof t!=\"string\")throw vt(\"background must be a string\")}_requireValidAutoplay(t){if(typeof t!=\"boolean\")throw vt(\"autoplay must be a boolean\")}_requireValidPlaybackOptions(t){t.direction&&this._requireValidDirection(t.direction),t.intermission&&this._requireValidIntermission(t.intermission),t.loop&&this._requireValidLoop(t.loop),t.speed&&this._requireValidSpeed(t.speed);}};var Ba=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(new Ai(\"\")),Jf=Ba.Provider,Yf=()=>{let t=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Ba);if(typeof t>\"u\")throw vt(\"useDotLottieContext must be used within a DotLottieProvider\");return t};var tc=(t,e,r)=>{let[i,s]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>r());return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let a=t(()=>{let n=e();s(n);});return ()=>{a();}},[t]),i};/*! Bundled license information:\n\nis-buffer/index.js:\n  (*!\n   * Determine if an object is a Buffer\n   *\n   * @author   Feross Aboukhadijeh <https://feross.org>\n   * @license  MIT\n   *)\n\nlottie-web/build/player/lottie.js:\n  (*!\n   Transformation Matrix v2.0\n   (c) Epistemex 2014-2015\n   www.epistemex.com\n   By Ken Fyrstenberg\n   Contributions by leeoniya.\n   License: MIT, header required.\n   *)\n*/\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=chunk-FMS366MP.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/chunk-FMS366MP.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/chunk-KUTI7W2Y.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@dotlottie/react-player/dist/chunk-KUTI7W2Y.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ ae; }\n/* harmony export */ });\n/* harmony import */ var _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-FMS366MP.js */ \"(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/chunk-FMS366MP.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n\n\n\n\nvar R={name:\"@dotlottie/react-player\",version:\"1.2.1\",type:\"module\",description:\"dotlottie animation player react component.\",repository:\"https://github.com/dotlottie/player-component.git\",homepage:\"https://dotlottie.com/players\",bugs:\"https://github.com/dotlottie/player-component/issues\",author:\"Afsal <afsal@lottiefiles.com>\",license:\"MIT\",module:\"dist/index.js\",types:\"dist/index.d.ts\",files:[\"dist\"],keywords:[\"dotlottie\",\"animation\",\"react\",\"component\",\"player\"],scripts:{build:\"tsup\",\"cypress:open\":\"cypress open --component\",dev:\"tsup --watch\",lint:\"eslint .\",test:\"cypress run --component\",\"type-check\":\"tsc --noEmit\"},peerDependencies:{react:\"^16.8.0 || ^17.0.0 || ^18.0.0\"},devDependencies:{\"@dotlottie/common\":\"workspace:^\",\"@lottiefiles/lottie-types\":\"^1.2.0\",\"@types/react\":\"^16.8.0\",\"@types/react-dom\":\"^16.8.0\",\"@vitejs/plugin-react\":\"^3.1.0\",autoprefixer:\"^10.4.14\",\"axe-core\":\"^4.7.2\",cypress:\"^12.11.0\",\"cypress-axe\":\"^1.4.0\",postcss:\"^8.4.24\",react:\"^16.8.0\",\"react-dom\":\"^16.8.0\",\"react-use\":\"^17.4.0\",tsup:\"^6.1.3\",typescript:\"^4.7.4\",vite:\"^4.2.1\"}};var A=(i,n,a)=>{let[e$1,m]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>new _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.e(i,n.current,a)),d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async()=>{let p=new _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.e(i,n.current,a);return p.load(),p},[n]);return a?.lottieRef&&(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(a.lottieRef,()=>({play:(t,l)=>{e$1.play(t,l);},previous:t=>{e$1.previous(t);},next:t=>{e$1.next(t);},reset:()=>{e$1.reset();},getManifest:()=>e$1.getManifest(),getState:()=>e$1.getState(),getCurrentAnimationId:()=>e$1.currentAnimationId,getLottie:()=>e$1.getAnimationInstance(),getVersions:()=>({lottieWebVersion:_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.e.getLottieWebVersion(),dotLottieReactVersion:`${R.version}`}),setDefaultTheme:t=>{e$1.setDefaultTheme(t);},setBackground:t=>{e$1.setBackground(t);},setAutoplay:t=>{e$1.setAutoplay(t);},setDirection:t=>{e$1.setDirection(t);},setHover:t=>{e$1.setHover(t);},setIntermission:t=>{e$1.setIntermission(t);},setLoop:t=>{e$1.setLoop(t);},setPlayMode:t=>{e$1.setMode(t);},setSpeed:t=>{e$1.setSpeed(t);},revertToManifestValues:t=>{e$1.revertToManifestValues(t);},pause:()=>{e$1.pause();},seek:t=>{e$1.seek(t);},getContainer:()=>e$1.container,goToAndPlay:(t,l,c)=>{e$1.goToAndPlay(t,l,c);},goToAndStop:(t,l,c)=>{e$1.goToAndStop(t,l,c);},stop:()=>{e$1.stop();},togglePlay:()=>{e$1.togglePlay();},resize:()=>{e$1.resize();}}),[a.lottieRef.current,e$1]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>((async()=>m(await d()))(),()=>{e$1.destroy();}),[d]),e$1};function v(i,n){let a=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>n(i.getState()),[n,i]),e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(d=>i.state.subscribe(d),[i]);return (0,_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.f)(e,a,()=>n(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.d))}var ae=({onEvent:i,activeAnimationId:n,autoplay:a$1,background:e=\"transparent\",direction:m,intermission:d,loop:p,playMode:t,hover:l,speed:c,renderer:V=\"svg\",rendererSettings:h={},lottieRef:C,src:I,className:E,testId:f,children:P,defaultTheme:b$1,...w})=>{let D=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),o=A(I,D,{lottieRef:C,renderer:V,activeAnimationId:n,rendererSettings:{clearCanvas:!0,progressiveLoad:!1,hideOnTransparent:!0,...h},hover:l,loop:p,direction:m,speed:c,intermission:d,background:e,playMode:t,autoplay:l?!1:a$1,testId:f,defaultTheme:b$1}),k=v(o,y=>y.currentState),O=v(o,y=>y.frame),F=v(o,y=>y.seeker),H=v(o,y=>y.currentAnimationId);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{typeof p>\"u\"?o.revertToManifestValues([\"loop\"]):o.setLoop(p);},[p]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{typeof a$1>\"u\"?o.revertToManifestValues([\"autoplay\"]):o.setAutoplay(a$1);},[a$1]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{typeof m>\"u\"?o.revertToManifestValues([\"direction\"]):o.setDirection(m);},[m]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{typeof c>\"u\"?o.revertToManifestValues([\"speed\"]):o.setSpeed(c);},[c]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{typeof t>\"u\"?o.revertToManifestValues([\"playMode\"]):o.setMode(t);},[t]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{typeof l>\"u\"?o.revertToManifestValues([\"hover\"]):o.setHover(l);},[l]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{typeof e>\"u\"?o.setBackground(\"transparent\"):o.setBackground(e);},[e]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{typeof d>\"u\"?o.revertToManifestValues([\"intermission\"]):o.setIntermission(d);},[d]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{typeof b$1>\"u\"||!b$1?o.revertToManifestValues([\"defaultTheme\"]):o.setDefaultTheme(b$1);},[b$1]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{n&&o.play(n);},[n]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>(o.addEventListener(\"DOMLoaded\",()=>{i?.(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.a.Ready);}),o.addEventListener(\"data_ready\",()=>{i?.(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.a.DataReady);}),o.addEventListener(\"data_failed\",()=>{i?.(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.a.DataFail);}),o.addEventListener(\"complete\",()=>{o.currentState!==_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.b.Playing&&i?.(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.a.Complete);}),o.addEventListener(\"loopComplete\",()=>{i?.(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.a.LoopComplete);}),()=>{o.destroy();}),[o]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{switch(k){case _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.b.Stopped:i?.(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.a.Stop);break;case _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.b.Paused:i?.(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.a.Pause);break;case _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.b.Playing:i?.(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.a.Play);break;case _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.b.Frozen:i?.(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.a.Freeze);break;case _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.b.Error:i?.(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.a.Error);break;}},[k]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{i?.(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.a.Frame,{frame:O,seeker:F});},[O]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.g,{value:o,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\",{className:`dotlottie-container main ${P?\"controls\":\"\"} ${E}`,lang:\"en\",...f&&{\"data-testid\":f},...w,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\",{ref:D,\"data-name\":`${H}`,role:\"figure\",className:`animation ${P?\"controls\":\"\"}`,style:{position:\"relative\"},...f&&{\"data-testid\":\"animation\"},children:k===_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.b.Error&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"div\",{...f&&{\"data-testid\":\"error\"},className:\"error\",children:\"\\u26A0\\uFE0F\"})}),P]})})};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=chunk-KUTI7W2Y.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/chunk-KUTI7W2Y.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/chunk-NCDSG2XD.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@dotlottie/react-player/dist/chunk-NCDSG2XD.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ so; }\n/* harmony export */ });\n/* harmony import */ var _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-FMS366MP.js */ \"(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/chunk-FMS366MP.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n\n\n\n\nfunction C(t){let o=(0,_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.h)(),e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>t(o.getState()),[t,o]),a=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(n=>o.state.subscribe(n),[o]);return (0,_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.f)(a,e,()=>t(_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.d))}var U=t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",xmlns:\"http://www.w3.org/2000/svg\",...t,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{d:\"M8.33325 11.6667C7.78097 11.6667 7.33325 12.1144 7.33325 12.6667C7.33325 13.2189 7.78097 13.6667 8.33325 13.6667C8.88554 13.6667 9.33325 13.2189 9.33325 12.6667C9.33325 12.1144 8.88554 11.6667 8.33325 11.6667Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{d:\"M7.33325 8C7.33325 7.44771 7.78097 7 8.33325 7C8.88554 7 9.33325 7.44771 9.33325 8C9.33325 8.55228 8.88554 9 8.33325 9C7.78097 9 7.33325 8.55228 7.33325 8Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{d:\"M7.33325 3.33333C7.33325 2.78105 7.78097 2.33333 8.33325 2.33333C8.88554 2.33333 9.33325 2.78105 9.33325 3.33333C9.33325 3.88562 8.88554 4.33333 8.33325 4.33333C7.78097 4.33333 7.33325 3.88562 7.33325 3.33333Z\",fill:\"currentColor\"})]});var X=t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",xmlns:\"http://www.w3.org/2000/svg\",...t,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{d:\"M10.8654 2.31311C11.0607 2.11785 11.3772 2.11785 11.5725 2.31311L13.4581 4.19873C13.6534 4.39399 13.6534 4.71058 13.4581 4.90584L11.5725 6.79146C11.3772 6.98672 11.0607 6.98672 10.8654 6.79146C10.6701 6.5962 10.6701 6.27961 10.8654 6.08435L11.6162 5.33354H4V6.66687C4 7.03506 3.70152 7.33354 3.33333 7.33354C2.96514 7.33354 2.66666 7.03506 2.66666 6.66687L2.66666 4.66687C2.66666 4.29868 2.96514 4.0002 3.33333 4.0002H11.8454L10.8654 3.02022C10.6701 2.82496 10.6701 2.50838 10.8654 2.31311Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{d:\"M12.4375 11.9998C12.8057 11.9998 13.1042 11.7013 13.1042 11.3331V9.33313C13.1042 8.96494 12.8057 8.66647 12.4375 8.66647C12.0693 8.66647 11.7708 8.96494 11.7708 9.33313V10.6665H4.15462L4.90543 9.91565C5.10069 9.72039 5.10069 9.40381 4.90543 9.20854C4.71017 9.01328 4.39359 9.01328 4.19832 9.20854L2.31271 11.0942C2.11744 11.2894 2.11744 11.606 2.31271 11.8013L4.19832 13.6869C4.39359 13.8821 4.71017 13.8821 4.90543 13.6869C5.10069 13.4916 5.10069 13.175 4.90543 12.9798L3.92545 11.9998H12.4375Z\",fill:\"currentColor\"})]});var $=t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",xmlns:\"http://www.w3.org/2000/svg\",...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M14.3336 2.5C14.3336 2.22386 14.1097 2 13.8336 2C13.5574 2 13.3336 2.22386 13.3336 2.5V13.5C13.3336 13.7761 13.5574 14 13.8336 14C14.1097 14 14.3336 13.7761 14.3336 13.5V2.5ZM3.50618 2.21722C2.83954 1.82595 2 2.30667 2 3.07965V12.9201C2 13.6931 2.83954 14.1738 3.50618 13.7825L11.8893 8.86231C12.5477 8.47586 12.5477 7.52389 11.8893 7.13745L3.50618 2.21722Z\",fill:\"currentColor\"})});var K=t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",xmlns:\"http://www.w3.org/2000/svg\",...t,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{d:\"M3.99996 2C3.26358 2 2.66663 2.59695 2.66663 3.33333V12.6667C2.66663 13.403 3.26358 14 3.99996 14H5.33329C6.06967 14 6.66663 13.403 6.66663 12.6667V3.33333C6.66663 2.59695 6.06967 2 5.33329 2H3.99996Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{d:\"M10.6666 2C9.93025 2 9.33329 2.59695 9.33329 3.33333V12.6667C9.33329 13.403 9.93025 14 10.6666 14H12C12.7363 14 13.3333 13.403 13.3333 12.6667V3.33333C13.3333 2.59695 12.7363 2 12 2H10.6666Z\",fill:\"currentColor\"})]});var Q=t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",xmlns:\"http://www.w3.org/2000/svg\",...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{d:\"M3.33337 3.46787C3.33337 2.52312 4.35948 1.93558 5.17426 2.41379L12.8961 6.94592C13.7009 7.41824 13.7009 8.58176 12.8961 9.05408L5.17426 13.5862C4.35948 14.0644 3.33337 13.4769 3.33337 12.5321V3.46787Z\",fill:\"currentColor\"})});var Y=t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",xmlns:\"http://www.w3.org/2000/svg\",...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M1.69214 13.5C1.69214 13.7761 1.916 14 2.19214 14C2.46828 14 2.69214 13.7761 2.69214 13.5L2.69214 2.5C2.69214 2.22386 2.46828 2 2.19214 2C1.916 2 1.69214 2.22386 1.69214 2.5V13.5ZM12.5192 13.7828C13.1859 14.174 14.0254 13.6933 14.0254 12.9204L14.0254 3.0799C14.0254 2.30692 13.1859 1.8262 12.5192 2.21747L4.13612 7.13769C3.47769 7.52414 3.47769 8.4761 4.13612 8.86255L12.5192 13.7828Z\",fill:\"currentColor\"})});var _=function(){};function E(t){for(var o=[],e=1;e<arguments.length;e++)o[e-1]=arguments[e];t&&t.addEventListener&&t.addEventListener.apply(t,o);}function R(t){for(var o=[],e=1;e<arguments.length;e++)o[e-1]=arguments[e];t&&t.removeEventListener&&t.removeEventListener.apply(t,o);}var j=typeof window<\"u\";var Te=[\"mousedown\",\"touchstart\"],ke=function(t,o,e){e===void 0&&(e=Te);var a=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(o);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function(){a.current=o;},[o]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function(){for(var l=function(i){var f=t.current;f&&!f.contains(i.target)&&a.current(i);},n=0,u=e;n<u.length;n++){var d=u[n];E(document,d,l);}return function(){for(var i=0,f=e;i<f.length;i++){var s=f[i];R(document,s,l);}}},[e,t]);},A=ke;var Ie=j?window:null,te=function(t){return !!t.addEventListener},oe=function(t){return !!t.on},Be=function(t,o,e,a){e===void 0&&(e=Ie),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function(){if(o&&e)return te(e)?E(e,t,o,a):oe(e)&&e.on(t,o,a),function(){te(e)?R(e,t,o,a):oe(e)&&e.off(t,o,a);}},[t,o,e,JSON.stringify(a)]);},re=Be;var He=function(t){return typeof t==\"function\"?t:typeof t==\"string\"?function(o){return o.key===t}:t?function(){return !0}:function(){return !1}},Ne=function(t,o,e,a){o===void 0&&(o=_),e===void 0&&(e={}),a===void 0&&(a=[t]);var l=e.event,n=l===void 0?\"keydown\":l,u=e.target,d=e.options,i=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(function(){var f=He(t),s=function(p){if(f(p))return o(p)};return s},a);re(n,i,u,d);},P=Ne;var se=t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M13.5303 6.46967C13.8232 6.76256 13.8232 7.23744 13.5303 7.53033L9.06066 12L13.5303 16.4697C13.8232 16.7626 13.8232 17.2374 13.5303 17.5303C13.2374 17.8232 12.7626 17.8232 12.4697 17.5303L7.46967 12.5303C7.17678 12.2374 7.17678 11.7626 7.46967 11.4697L12.4697 6.46967C12.7626 6.17678 13.2374 6.17678 13.5303 6.46967Z\",fill:\"currentColor\"})});var le=t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M10.4697 17.5303C10.1768 17.2374 10.1768 16.7626 10.4697 16.4697L14.9393 12L10.4697 7.53033C10.1768 7.23744 10.1768 6.76256 10.4697 6.46967C10.7626 6.17678 11.2374 6.17678 11.5303 6.46967L16.5303 11.4697C16.8232 11.7626 16.8232 12.2374 16.5303 12.5303L11.5303 17.5303C11.2374 17.8232 10.7626 17.8232 10.4697 17.5303Z\",fill:\"currentColor\"})});var ue=({children:t,enableReset:o,expand:e=!1,onBack:a,onExpand:l,onReset:n,title:u})=>{let d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{a();},[a]),i=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{l();},[l]),f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{n();},[n]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[!e&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"button\",{className:\"popover-item\",\"aria-label\":`Go to ${u}`,onClick:i,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\",{style:{flex:1},children:u}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(le,{})})]}),e&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\",{className:\"popover-submenu\",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\",{className:\"popover-header\",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\",{onClick:d,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(se,{})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\",{className:\"popover-header-title\",style:{flex:1},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\",{children:u}),o&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\",{className:\"reset-theme\",onClick:f,\"aria-label\":`Reset ${u}`,children:\"Reset\"})]})]}),t]})]})};var fe=t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M20.5283 5.9372C20.8211 6.23009 20.8211 6.70497 20.5283 6.99786L9.4631 18.063C9.32181 18.2043 9.12997 18.2833 8.93016 18.2826C8.73035 18.2819 8.53907 18.2015 8.39877 18.0593L3.46807 13.0596C3.17722 12.7647 3.18052 12.2898 3.47544 11.999C3.77036 11.7081 4.24522 11.7114 4.53608 12.0063L8.93646 16.4683L19.4676 5.9372C19.7605 5.64431 20.2354 5.64431 20.5283 5.9372Z\",fill:\"currentColor\"})});var pe=({onSelectItem:t,selected:o=!1,value:e,...a})=>{let l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{t?.(e);},[t,e]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"button\",{\"aria-label\":`Select ${e}`,className:`popover-item ${o?\"selected\":\"\"}`,onClick:l,...a,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\",{style:{visibility:o?\"visible\":\"hidden\"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(fe,{})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"span\",{style:{flex:1},children:e})]})};var me=({items:t=[],onSelectItem:o,onDismiss:e,...a})=>{let[l,n]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\"),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);A(u,()=>{n(\"\"),e();}),P(\"Escape\",()=>{n(\"\"),e();});let d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{n(\"\");},[n]),i=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(s=>()=>n(s),[n]),f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((s,p)=>()=>o(s,p),[o]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"dialog\",{ref:u,style:{padding:l?\"0px\":\"8px\"},className:\"popover\",\"aria-label\":\"Popover Menu\",...a,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"ul\",{\"aria-label\":\"Popover content\",className:\"popover-content\",children:t.map(s=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"li\",{style:{width:\"100%\"},children:(l===s.title||!l)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ue,{expand:l===s.title,title:s.title,onExpand:i(s.title),onBack:d,enableReset:s.enableReset,onReset:f(s.title,\"\"),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"ul\",{className:\"popover-items\",\"aria-label\":`List of ${s.title}`,children:s.items.map(p=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"li\",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(pe,{value:p.value,selected:p.selected,onSelectItem:f(s.title,p.value)})},p.value))})})},s.title))})})};var $e=[\"play\",\"stop\",\"loop\",\"next\",\"previous\",\"animations\",\"themes\"],so=({buttons:t=$e,...o})=>{let e=(0,_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.h)(),a=C(r=>r.loop),l=C(r=>r.currentState),n=C(r=>r.seeker),u=C(r=>r.currentAnimationId),d=C(r=>r.defaultTheme),i=C(r=>r.direction),f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>l===_chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_0__.b.Playing,[l]),[s,p]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[S,ce]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),[L,ve]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),B=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{let r=[],v=S.map(x=>({value:x.id,selected:u===x.id})),b=L.filter(x=>x.animations.includes(u||\"\")).map(x=>({value:x.id,selected:d===x.id}));return Array.isArray(v)&&v.length!==0&&r.push({title:\"Animations\",items:v,enableReset:!1}),Array.isArray(b)&&b.length!==0&&r.push({title:\"Themes\",items:b,enableReset:!!d}),r},[S,L,u,d]),xe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>t.includes(\"themes\")&&Array.isArray(L)&&L.length?!0:t.includes(\"animations\")&&Array.isArray(S)&&S.length>1,[B]),Ce=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{p(!s);},[p]),he=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{p(!1);},[p]),ge=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{e.toggleLoop();},[e]),Se=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{e.freeze();},[e]),be=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{e.unfreeze();},[e]),ye=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{e.next(r=>({...r,defaultTheme:\"\"}));},[e]),Le=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{e.previous(r=>({...r,defaultTheme:\"\"}));},[e]),we=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{e.togglePlay();},[e]),Ee=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((r,v)=>{r===\"Animations\"&&e.play(v,b=>({...b,defaultTheme:\"\"})),r===\"Themes\"&&e.setDefaultTheme(v);},[e]),Re=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(r=>{e.seek(String(r.currentTarget.value).concat(\"%\"));},[e]);function D(){let r=e.getManifest()?.animations,v=e.getManifest()?.themes;r&&ce(r),v&&ve(v);}return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{if(!(typeof e>\"u\"))return e.addEventListener(\"DOMLoaded\",D),()=>{e.removeEventListener(\"DOMLoaded\",D);}},[e]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\",{\"aria-label\":\"lottie-animation-controls\",className:\"toolbar\",...o,children:[t.includes(\"previous\")&&S.length>1&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\",{onClick:Le,\"aria-label\":\"play-previous\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Y,{})}),t.includes(\"play\")&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\",{onClick:we,\"aria-label\":\"play-pause\",children:f?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(K,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Q,{})}),t.includes(\"next\")&&S.length>1&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\",{onClick:ye,\"aria-label\":\"play-next\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)($,{})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"input\",{style:{width:\"100%\",\"--seeker\":n},className:`seeker ${i===1?\"\":\"to-left\"}`,type:\"range\",min:0,step:0,max:100,value:n||0,onInput:Re,onMouseDown:Se,onMouseUp:be,\"aria-valuemin\":1,\"aria-valuemax\":100,role:\"slider\",\"aria-valuenow\":n,\"aria-label\":\"lottie-seek-input\"}),t.includes(\"loop\")&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\",{onClick:ge,className:a?\"active\":\"\",\"aria-label\":\"loop-toggle\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(X,{})}),xe&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(\"div\",{style:{position:\"relative\"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(me,{items:B,open:s,onDismiss:he,onSelectItem:Ee}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(\"button\",{className:`${s?\"popover-active\":\"\"}`,\"aria-label\":\"open-popover\",onClick:Ce,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(U,{})})]})]})};\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=chunk-NCDSG2XD.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/chunk-NCDSG2XD.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@dotlottie/react-player/dist/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Controls: function() { return /* reexport safe */ _chunk_NCDSG2XD_js__WEBPACK_IMPORTED_MODULE_0__.a; },\n/* harmony export */   DotLottiePlayer: function() { return /* reexport safe */ _chunk_KUTI7W2Y_js__WEBPACK_IMPORTED_MODULE_1__.a; },\n/* harmony export */   PlayMode: function() { return /* reexport safe */ _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_2__.c; },\n/* harmony export */   PlayerEvents: function() { return /* reexport safe */ _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_2__.a; },\n/* harmony export */   PlayerState: function() { return /* reexport safe */ _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_2__.b; }\n/* harmony export */ });\n/* harmony import */ var _chunk_NCDSG2XD_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-NCDSG2XD.js */ \"(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/chunk-NCDSG2XD.js\");\n/* harmony import */ var _chunk_KUTI7W2Y_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-KUTI7W2Y.js */ \"(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/chunk-KUTI7W2Y.js\");\n/* harmony import */ var _chunk_FMS366MP_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-FMS366MP.js */ \"(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/chunk-FMS366MP.js\");\n\n\n\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZG90bG90dGllL3JlYWN0LXBsYXllci9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQW9EO0FBQ087QUFDOEI7QUFDekY7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGRvdGxvdHRpZS9yZWFjdC1wbGF5ZXIvZGlzdC9pbmRleC5qcz9kYjMwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGEgYXMgQ29udHJvbHMgfSBmcm9tICcuL2NodW5rLU5DRFNHMlhELmpzJztcbmV4cG9ydCB7IGEgYXMgRG90TG90dGllUGxheWVyIH0gZnJvbSAnLi9jaHVuay1LVVRJN1cyWS5qcyc7XG5leHBvcnQgeyBjIGFzIFBsYXlNb2RlLCBhIGFzIFBsYXllckV2ZW50cywgYiBhcyBQbGF5ZXJTdGF0ZSB9IGZyb20gJy4vY2h1bmstRk1TMzY2TVAuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3V0LmpzLm1hcFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVosa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQixxQkFBcUI7O0FBRXJCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1DQUFtQyxTQUFTO0FBQzVDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGNBQWMsU0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQ0FBMkMsVUFBVTtBQUNyRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanM/ZGJmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICB2YXIgaVxuICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHxcbiAgICAgIHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDE2KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAyKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDQpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiAxMiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArXG4gICAgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9XG4gICAgICAoKHVpbnQ4W2ldIDw8IDE2KSAmIDB4RkYwMDAwKSArXG4gICAgICAoKHVpbnQ4W2kgKyAxXSA8PCA4KSAmIDB4RkYwMCkgK1xuICAgICAgKHVpbnQ4W2kgKyAyXSAmIDB4RkYpXG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpXG4gIH1cbiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGhcbiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsodWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKSkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAyXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdICtcbiAgICAgICc9PSdcbiAgICApXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICtcbiAgICAgIGxvb2t1cFsodG1wID4+IDQpICYgMHgzRl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgMikgJiAweDNGXSArXG4gICAgICAnPSdcbiAgICApXG4gIH1cblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/base64-js/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"(app-pages-browser)/./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"(app-pages-browser)/./node_modules/ieee754/index.js\")\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUyxXQUFXOztBQUVwQjtBQUNBO0FBQ0E7QUFDQSxTQUFTLFdBQVc7O0FBRXBCO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVMsV0FBVzs7QUFFcEI7QUFDQTtBQUNBLFNBQVMsVUFBVTs7QUFFbkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcz9lZmZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBpZWVlNzU0LiBCU0QtMy1DbGF1c2UgTGljZW5zZS4gRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnL29wZW5zb3VyY2U+ICovXG5leHBvcnRzLnJlYWQgPSBmdW5jdGlvbiAoYnVmZmVyLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbVxuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgbkJpdHMgPSAtN1xuICB2YXIgaSA9IGlzTEUgPyAobkJ5dGVzIC0gMSkgOiAwXG4gIHZhciBkID0gaXNMRSA/IC0xIDogMVxuICB2YXIgcyA9IGJ1ZmZlcltvZmZzZXQgKyBpXVxuXG4gIGkgKz0gZFxuXG4gIGUgPSBzICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIHMgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IGVMZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IChlICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIG0gPSBlICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIGUgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IG1MZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgbSA9IChtICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhc1xuICB9IGVsc2UgaWYgKGUgPT09IGVNYXgpIHtcbiAgICByZXR1cm4gbSA/IE5hTiA6ICgocyA/IC0xIDogMSkgKiBJbmZpbml0eSlcbiAgfSBlbHNlIHtcbiAgICBtID0gbSArIE1hdGgucG93KDIsIG1MZW4pXG4gICAgZSA9IGUgLSBlQmlhc1xuICB9XG4gIHJldHVybiAocyA/IC0xIDogMSkgKiBtICogTWF0aC5wb3coMiwgZSAtIG1MZW4pXG59XG5cbmV4cG9ydHMud3JpdGUgPSBmdW5jdGlvbiAoYnVmZmVyLCB2YWx1ZSwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG0sIGNcbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIHJ0ID0gKG1MZW4gPT09IDIzID8gTWF0aC5wb3coMiwgLTI0KSAtIE1hdGgucG93KDIsIC03NykgOiAwKVxuICB2YXIgaSA9IGlzTEUgPyAwIDogKG5CeXRlcyAtIDEpXG4gIHZhciBkID0gaXNMRSA/IDEgOiAtMVxuICB2YXIgcyA9IHZhbHVlIDwgMCB8fCAodmFsdWUgPT09IDAgJiYgMSAvIHZhbHVlIDwgMCkgPyAxIDogMFxuXG4gIHZhbHVlID0gTWF0aC5hYnModmFsdWUpXG5cbiAgaWYgKGlzTmFOKHZhbHVlKSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpIHtcbiAgICBtID0gaXNOYU4odmFsdWUpID8gMSA6IDBcbiAgICBlID0gZU1heFxuICB9IGVsc2Uge1xuICAgIGUgPSBNYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4yKVxuICAgIGlmICh2YWx1ZSAqIChjID0gTWF0aC5wb3coMiwgLWUpKSA8IDEpIHtcbiAgICAgIGUtLVxuICAgICAgYyAqPSAyXG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgdmFsdWUgKz0gcnQgLyBjXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlICs9IHJ0ICogTWF0aC5wb3coMiwgMSAtIGVCaWFzKVxuICAgIH1cbiAgICBpZiAodmFsdWUgKiBjID49IDIpIHtcbiAgICAgIGUrK1xuICAgICAgYyAvPSAyXG4gICAgfVxuXG4gICAgaWYgKGUgKyBlQmlhcyA+PSBlTWF4KSB7XG4gICAgICBtID0gMFxuICAgICAgZSA9IGVNYXhcbiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICBtID0gKCh2YWx1ZSAqIGMpIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IGUgKyBlQmlhc1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gdmFsdWUgKiBNYXRoLnBvdygyLCBlQmlhcyAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSAwXG4gICAgfVxuICB9XG5cbiAgZm9yICg7IG1MZW4gPj0gODsgYnVmZmVyW29mZnNldCArIGldID0gbSAmIDB4ZmYsIGkgKz0gZCwgbSAvPSAyNTYsIG1MZW4gLT0gOCkge31cblxuICBlID0gKGUgPDwgbUxlbikgfCBtXG4gIGVMZW4gKz0gbUxlblxuICBmb3IgKDsgZUxlbiA+IDA7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IGUgJiAweGZmLCBpICs9IGQsIGUgLz0gMjU2LCBlTGVuIC09IDgpIHt9XG5cbiAgYnVmZmVyW29mZnNldCArIGkgLSBkXSB8PSBzICogMTI4XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ieee754/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyx3R0FBd0I7O0FBRXJQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/ZWViMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCIuLi8uLi9jb21waWxlZC9wcm9jZXNzXCIpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9jZXNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fjunhyeongpark%2FDocuments%2FGitHub%2Fjun-brro-blog%2Fsrc%2Fcomponents%2FContact%2FContactForm.js&modules=%2FUsers%2Fjunhyeongpark%2FDocuments%2FGitHub%2Fjun-brro-blog%2Fsrc%2Fcomponents%2FContact%2FLottieAnimation.js&server=false!":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fjunhyeongpark%2FDocuments%2FGitHub%2Fjun-brro-blog%2Fsrc%2Fcomponents%2FContact%2FContactForm.js&modules=%2FUsers%2Fjunhyeongpark%2FDocuments%2FGitHub%2Fjun-brro-blog%2Fsrc%2Fcomponents%2FContact%2FLottieAnimation.js&server=false! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/Contact/ContactForm.js */ \"(app-pages-browser)/./src/components/Contact/ContactForm.js\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/Contact/LottieAnimation.js */ \"(app-pages-browser)/./src/components/Contact/LottieAnimation.js\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZVc2VycyUyRmp1bmh5ZW9uZ3BhcmslMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZqdW4tYnJyby1ibG9nJTJGc3JjJTJGY29tcG9uZW50cyUyRkNvbnRhY3QlMkZDb250YWN0Rm9ybS5qcyZtb2R1bGVzPSUyRlVzZXJzJTJGanVuaHllb25ncGFyayUyRkRvY3VtZW50cyUyRkdpdEh1YiUyRmp1bi1icnJvLWJsb2clMkZzcmMlMkZjb21wb25lbnRzJTJGQ29udGFjdCUyRkxvdHRpZUFuaW1hdGlvbi5qcyZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLHdNQUE4SDtBQUM5SCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzI1MDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvanVuaHllb25ncGFyay9Eb2N1bWVudHMvR2l0SHViL2p1bi1icnJvLWJsb2cvc3JjL2NvbXBvbmVudHMvQ29udGFjdC9Db250YWN0Rm9ybS5qc1wiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2p1bmh5ZW9uZ3BhcmsvRG9jdW1lbnRzL0dpdEh1Yi9qdW4tYnJyby1ibG9nL3NyYy9jb21wb25lbnRzL0NvbnRhY3QvTG90dGllQW5pbWF0aW9uLmpzXCIpIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fjunhyeongpark%2FDocuments%2FGitHub%2Fjun-brro-blog%2Fsrc%2Fcomponents%2FContact%2FContactForm.js&modules=%2FUsers%2Fjunhyeongpark%2FDocuments%2FGitHub%2Fjun-brro-blog%2Fsrc%2Fcomponents%2FContact%2FLottieAnimation.js&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/index.css":
/*!*************************************************************!*\
  !*** ./node_modules/@dotlottie/react-player/dist/index.css ***!
  \*************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"193796b8f481\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZG90bG90dGllL3JlYWN0LXBsYXllci9kaXN0L2luZGV4LmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bkb3Rsb3R0aWUvcmVhY3QtcGxheWVyL2Rpc3QvaW5kZXguY3NzPzE5ZTAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIxOTM3OTZiOGY0ODFcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/index.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/Contact/ContactForm.js":
/*!***********************************************!*\
  !*** ./src/components/Contact/ContactForm.js ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ContactForm; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hook-form */ \"(app-pages-browser)/./node_modules/react-hook-form/dist/index.esm.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction ContactForm() {\n    _s();\n    const { register, handleSubmit, formState: { errors } } = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_2__.useForm)();\n    const onSubmit = (data)=>console.log(data);\n    ;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: \"mt-12 text-base xs:text-lg sm:text-xl font-medium leading-relaxed font-in\",\n        children: [\n            \"Hello! My name is\",\n            \" \",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"text\",\n                placeholder: \"your name\",\n                ...register(\"name\", {\n                    required: true,\n                    maxLength: 80\n                }),\n                className: \"outline-none border-0 p-0 mx-2 focus:ring-0 placeholder:text-center placeholder:text-lg border-b border-gray  focus:border-gray bg-transparent\"\n            }, void 0, false, {\n                fileName: \"/Users/junhyeongpark/Documents/GitHub/jun-brro-blog/src/components/Contact/ContactForm.js\",\n                lineNumber: 20,\n                columnNumber: 7\n            }, this),\n            \"and I want to discuss a potential project. You can email me at\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"email\",\n                placeholder: \"your@email\",\n                ...register(\"email\", {}),\n                className: \"outline-none border-0 p-0 mx-2 focus:ring-0 placeholder:text-center placeholder:text-lg border-b border-gray  focus:border-gray bg-transparent\"\n            }, void 0, false, {\n                fileName: \"/Users/junhyeongpark/Documents/GitHub/jun-brro-blog/src/components/Contact/ContactForm.js\",\n                lineNumber: 28,\n                columnNumber: 7\n            }, this),\n            \"or reach out to me on\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"tel\",\n                placeholder: \"your phone\",\n                ...register(\"phone number\", {}),\n                className: \"outline-none border-0 p-0 mx-2 focus:ring-0 placeholder:text-center placeholder:text-lg border-b border-gray  focus:border-gray bg-transparent\"\n            }, void 0, false, {\n                fileName: \"/Users/junhyeongpark/Documents/GitHub/jun-brro-blog/src/components/Contact/ContactForm.js\",\n                lineNumber: 31,\n                columnNumber: 7\n            }, this),\n            \"Here are some details about my project: \",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                fileName: \"/Users/junhyeongpark/Documents/GitHub/jun-brro-blog/src/components/Contact/ContactForm.js\",\n                lineNumber: 38,\n                columnNumber: 47\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                ...register(\"project details\", {}),\n                placeholder: \"My project is about...\",\n                rows: 3,\n                className: \"w-full outline-none border-0 p-0 mx-0 focus:ring-0  placeholder:text-lg border-b border-gray  focus:border-gray bg-transparent\"\n            }, void 0, false, {\n                fileName: \"/Users/junhyeongpark/Documents/GitHub/jun-brro-blog/src/components/Contact/ContactForm.js\",\n                lineNumber: 39,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"submit\",\n                value: \"send request\",\n                className: \"mt-8 font-medium inline-block capitalize text-lg sm:text-xl py-2 sm:py-3 px-6 sm:px-8 border-2 border-solid border-dark dark:border-light rounded cursor-pointer\"\n            }, void 0, false, {\n                fileName: \"/Users/junhyeongpark/Documents/GitHub/jun-brro-blog/src/components/Contact/ContactForm.js\",\n                lineNumber: 44,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/junhyeongpark/Documents/GitHub/jun-brro-blog/src/components/Contact/ContactForm.js\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, this);\n}\n_s(ContactForm, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function() {\n    return [\n        react_hook_form__WEBPACK_IMPORTED_MODULE_2__.useForm\n    ];\n});\n_c = ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0NvbnRhY3QvQ29udGFjdEZvcm0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUMwQjtBQUNnQjtBQUUzQixTQUFTRTs7SUFDdEIsTUFBTSxFQUNKQyxRQUFRLEVBQ1JDLFlBQVksRUFDWkMsV0FBVyxFQUFFQyxNQUFNLEVBQUUsRUFDdEIsR0FBR0wsd0RBQU9BO0lBQ1gsTUFBTU0sV0FBVyxDQUFDQyxPQUFTQyxRQUFRQyxHQUFHLENBQUNGOztJQUd2QyxxQkFDRSw4REFBQ0c7UUFDQ0osVUFBVUgsYUFBYUc7UUFDdkJLLFdBQVU7O1lBQ1g7WUFDbUI7MEJBQ2xCLDhEQUFDQztnQkFDQ0MsTUFBSztnQkFDTEMsYUFBWTtnQkFDWCxHQUFHWixTQUFTLFFBQVE7b0JBQUVhLFVBQVU7b0JBQU1DLFdBQVc7Z0JBQUcsRUFBRTtnQkFDdkRMLFdBQVU7Ozs7OztZQUVWOzBCQUVGLDhEQUFDQztnQkFBTUMsTUFBSztnQkFBUUMsYUFBWTtnQkFBYyxHQUFHWixTQUFTLFNBQVMsQ0FBQyxFQUFFO2dCQUFHUyxXQUFVOzs7Ozs7WUFDOUM7MEJBRXJDLDhEQUFDQztnQkFDQ0MsTUFBSztnQkFDTEMsYUFBWTtnQkFDWCxHQUFHWixTQUFTLGdCQUFnQixDQUFDLEVBQUU7Z0JBQ2hDUyxXQUFVOzs7Ozs7WUFFVjswQkFDc0MsOERBQUNNOzs7OzswQkFDekMsOERBQUNDO2dCQUFVLEdBQUdoQixTQUFTLG1CQUFtQixDQUFDLEVBQUU7Z0JBQzdDWSxhQUFZO2dCQUNaSyxNQUFNO2dCQUNOUixXQUFVOzs7Ozs7MEJBRVYsOERBQUNDO2dCQUFNQyxNQUFLO2dCQUFTTyxPQUFNO2dCQUFlVCxXQUFVOzs7Ozs7Ozs7Ozs7QUFHMUQ7R0ExQ3dCVjs7UUFLbEJELG9EQUFPQTs7O0tBTFdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0NvbnRhY3QvQ29udGFjdEZvcm0uanM/OWZlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUZvcm0gfSBmcm9tIFwicmVhY3QtaG9vay1mb3JtXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvbnRhY3RGb3JtKCkge1xuICBjb25zdCB7XG4gICAgcmVnaXN0ZXIsXG4gICAgaGFuZGxlU3VibWl0LFxuICAgIGZvcm1TdGF0ZTogeyBlcnJvcnMgfSxcbiAgfSA9IHVzZUZvcm0oKTtcbiAgY29uc3Qgb25TdWJtaXQgPSAoZGF0YSkgPT4gY29uc29sZS5sb2coZGF0YSk7XG4gIGNvbnNvbGUubG9nKGVycm9ycyk7XG5cbiAgcmV0dXJuIChcbiAgICA8Zm9ybVxuICAgICAgb25TdWJtaXQ9e2hhbmRsZVN1Ym1pdChvblN1Ym1pdCl9XG4gICAgICBjbGFzc05hbWU9XCJtdC0xMiB0ZXh0LWJhc2UgeHM6dGV4dC1sZyBzbTp0ZXh0LXhsIGZvbnQtbWVkaXVtIGxlYWRpbmctcmVsYXhlZCBmb250LWluXCJcbiAgICA+XG4gICAgICBIZWxsbyEgTXkgbmFtZSBpc3tcIiBcIn1cbiAgICAgIDxpbnB1dFxuICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgIHBsYWNlaG9sZGVyPVwieW91ciBuYW1lXCJcbiAgICAgICAgey4uLnJlZ2lzdGVyKFwibmFtZVwiLCB7IHJlcXVpcmVkOiB0cnVlLCBtYXhMZW5ndGg6IDgwIH0pfVxuICAgICAgICBjbGFzc05hbWU9XCJvdXRsaW5lLW5vbmUgYm9yZGVyLTAgcC0wIG14LTIgZm9jdXM6cmluZy0wIHBsYWNlaG9sZGVyOnRleHQtY2VudGVyIHBsYWNlaG9sZGVyOnRleHQtbGcgYm9yZGVyLWIgYm9yZGVyLWdyYXkgXG4gICAgICAgIGZvY3VzOmJvcmRlci1ncmF5IGJnLXRyYW5zcGFyZW50XCJcbiAgICAgIC8+XG4gICAgICBhbmQgSSB3YW50IHRvIGRpc2N1c3MgYSBwb3RlbnRpYWwgcHJvamVjdC4gWW91IGNhbiBlbWFpbCBtZSBhdFxuICAgICAgPGlucHV0IHR5cGU9XCJlbWFpbFwiIHBsYWNlaG9sZGVyPVwieW91ckBlbWFpbFwiIHsuLi5yZWdpc3RlcihcImVtYWlsXCIsIHt9KX0gIGNsYXNzTmFtZT1cIm91dGxpbmUtbm9uZSBib3JkZXItMCBwLTAgbXgtMiBmb2N1czpyaW5nLTAgcGxhY2Vob2xkZXI6dGV4dC1jZW50ZXIgcGxhY2Vob2xkZXI6dGV4dC1sZyBib3JkZXItYiBib3JkZXItZ3JheSBcbiAgICAgICAgZm9jdXM6Ym9yZGVyLWdyYXkgYmctdHJhbnNwYXJlbnRcIi8+XG4gICAgICBvciByZWFjaCBvdXQgdG8gbWUgb25cbiAgICAgIDxpbnB1dFxuICAgICAgICB0eXBlPVwidGVsXCJcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJ5b3VyIHBob25lXCJcbiAgICAgICAgey4uLnJlZ2lzdGVyKFwicGhvbmUgbnVtYmVyXCIsIHt9KX1cbiAgICAgICAgY2xhc3NOYW1lPVwib3V0bGluZS1ub25lIGJvcmRlci0wIHAtMCBteC0yIGZvY3VzOnJpbmctMCBwbGFjZWhvbGRlcjp0ZXh0LWNlbnRlciBwbGFjZWhvbGRlcjp0ZXh0LWxnIGJvcmRlci1iIGJvcmRlci1ncmF5IFxuICAgICAgICBmb2N1czpib3JkZXItZ3JheSBiZy10cmFuc3BhcmVudFwiXG4gICAgICAvPlxuICAgICAgSGVyZSBhcmUgc29tZSBkZXRhaWxzIGFib3V0IG15IHByb2plY3Q6IDxiciAvPlxuICAgICAgPHRleHRhcmVhIHsuLi5yZWdpc3RlcihcInByb2plY3QgZGV0YWlsc1wiLCB7fSl9IFxuICAgICAgcGxhY2Vob2xkZXI9XCJNeSBwcm9qZWN0IGlzIGFib3V0Li4uXCJcbiAgICAgIHJvd3M9ezN9XG4gICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgb3V0bGluZS1ub25lIGJvcmRlci0wIHAtMCBteC0wIGZvY3VzOnJpbmctMCAgcGxhY2Vob2xkZXI6dGV4dC1sZyBib3JkZXItYiBib3JkZXItZ3JheSBcbiAgICAgICAgZm9jdXM6Ym9yZGVyLWdyYXkgYmctdHJhbnNwYXJlbnRcIiAvPlxuICAgICAgPGlucHV0IHR5cGU9XCJzdWJtaXRcIiB2YWx1ZT1cInNlbmQgcmVxdWVzdFwiIGNsYXNzTmFtZT1cIm10LTggZm9udC1tZWRpdW0gaW5saW5lLWJsb2NrIGNhcGl0YWxpemUgdGV4dC1sZyBzbTp0ZXh0LXhsIHB5LTIgc206cHktMyBweC02IHNtOnB4LTggYm9yZGVyLTIgYm9yZGVyLXNvbGlkIGJvcmRlci1kYXJrIGRhcms6Ym9yZGVyLWxpZ2h0IHJvdW5kZWQgY3Vyc29yLXBvaW50ZXJcIiAvPlxuICAgIDwvZm9ybT5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUZvcm0iLCJDb250YWN0Rm9ybSIsInJlZ2lzdGVyIiwiaGFuZGxlU3VibWl0IiwiZm9ybVN0YXRlIiwiZXJyb3JzIiwib25TdWJtaXQiLCJkYXRhIiwiY29uc29sZSIsImxvZyIsImZvcm0iLCJjbGFzc05hbWUiLCJpbnB1dCIsInR5cGUiLCJwbGFjZWhvbGRlciIsInJlcXVpcmVkIiwibWF4TGVuZ3RoIiwiYnIiLCJ0ZXh0YXJlYSIsInJvd3MiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Contact/ContactForm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/Contact/LottieAnimation.js":
/*!***************************************************!*\
  !*** ./src/components/Contact/LottieAnimation.js ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _dotlottie_react_player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @dotlottie/react-player */ \"(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/index.js\");\n/* harmony import */ var _dotlottie_react_player_dist_index_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @dotlottie/react-player/dist/index.css */ \"(app-pages-browser)/./node_modules/@dotlottie/react-player/dist/index.css\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\nconst LottieAnimation = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_dotlottie_react_player__WEBPACK_IMPORTED_MODULE_2__.DotLottiePlayer, {\n        src: \"/animation_llqd7ey4.lottie\",\n        autoplay: true,\n        loop: true\n    }, void 0, false, {\n        fileName: \"/Users/junhyeongpark/Documents/GitHub/jun-brro-blog/src/components/Contact/LottieAnimation.js\",\n        lineNumber: 8,\n        columnNumber: 7\n    }, undefined);\n};\n_c = LottieAnimation;\n/* harmony default export */ __webpack_exports__[\"default\"] = (LottieAnimation);\nvar _c;\n$RefreshReg$(_c, \"LottieAnimation\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0NvbnRhY3QvTG90dGllQW5pbWF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDMEI7QUFDZ0M7QUFDVjtBQUVoRCxNQUFNRSxrQkFBa0I7SUFDdEIscUJBQ0ksOERBQUNELG9FQUFlQTtRQUNkRSxLQUFJO1FBQ0pDLFFBQVE7UUFDUkMsSUFBSTs7Ozs7O0FBS1o7S0FWTUg7QUFZTiwrREFBZUEsZUFBZUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9Db250YWN0L0xvdHRpZUFuaW1hdGlvbi5qcz8zZTJiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgRG90TG90dGllUGxheWVyIH0gZnJvbSAnQGRvdGxvdHRpZS9yZWFjdC1wbGF5ZXInO1xuaW1wb3J0ICdAZG90bG90dGllL3JlYWN0LXBsYXllci9kaXN0L2luZGV4LmNzcyc7XG5cbmNvbnN0IExvdHRpZUFuaW1hdGlvbiA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICAgIDxEb3RMb3R0aWVQbGF5ZXJcbiAgICAgICAgc3JjPVwiL2FuaW1hdGlvbl9sbHFkN2V5NC5sb3R0aWVcIlxuICAgICAgICBhdXRvcGxheVxuICAgICAgICBsb29wXG4gICAgICA+XG4gICAgICAgXG4gICAgICA8L0RvdExvdHRpZVBsYXllcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IExvdHRpZUFuaW1hdGlvbjsiXSwibmFtZXMiOlsiUmVhY3QiLCJEb3RMb3R0aWVQbGF5ZXIiLCJMb3R0aWVBbmltYXRpb24iLCJzcmMiLCJhdXRvcGxheSIsImxvb3AiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Contact/LottieAnimation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcz84ZTZkIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsyMjk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5leHBvcnRzPXt9O3ZhciByO3ZhciBuO2Z1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9KGZ1bmN0aW9uKCl7dHJ5e2lmKHR5cGVvZiBzZXRUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtyPXNldFRpbWVvdXR9ZWxzZXtyPWRlZmF1bHRTZXRUaW1vdXR9fWNhdGNoKGUpe3I9ZGVmYXVsdFNldFRpbW91dH10cnl7aWYodHlwZW9mIGNsZWFyVGltZW91dD09PVwiZnVuY3Rpb25cIil7bj1jbGVhclRpbWVvdXR9ZWxzZXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fWNhdGNoKGUpe249ZGVmYXVsdENsZWFyVGltZW91dH19KSgpO2Z1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYocj09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGUsMCl9aWYoKHI9PT1kZWZhdWx0U2V0VGltb3V0fHwhcikmJnNldFRpbWVvdXQpe3I9c2V0VGltZW91dDtyZXR1cm4gc2V0VGltZW91dChlLDApfXRyeXtyZXR1cm4gcihlLDApfWNhdGNoKHQpe3RyeXtyZXR1cm4gci5jYWxsKG51bGwsZSwwKX1jYXRjaCh0KXtyZXR1cm4gci5jYWxsKHRoaXMsZSwwKX19fWZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChlKXtpZihuPT09Y2xlYXJUaW1lb3V0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfWlmKChuPT09ZGVmYXVsdENsZWFyVGltZW91dHx8IW4pJiZjbGVhclRpbWVvdXQpe249Y2xlYXJUaW1lb3V0O3JldHVybiBjbGVhclRpbWVvdXQoZSl9dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsZSl9Y2F0Y2godCl7cmV0dXJuIG4uY2FsbCh0aGlzLGUpfX19dmFyIGk9W107dmFyIG89ZmFsc2U7dmFyIHU7dmFyIGE9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7aWYoIW98fCF1KXtyZXR1cm59bz1mYWxzZTtpZih1Lmxlbmd0aCl7aT11LmNvbmNhdChpKX1lbHNle2E9LTF9aWYoaS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKG8pe3JldHVybn12YXIgZT1ydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7bz10cnVlO3ZhciB0PWkubGVuZ3RoO3doaWxlKHQpe3U9aTtpPVtdO3doaWxlKCsrYTx0KXtpZih1KXt1W2FdLnJ1bigpfX1hPS0xO3Q9aS5sZW5ndGh9dT1udWxsO289ZmFsc2U7cnVuQ2xlYXJUaW1lb3V0KGUpfXQubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt0W3ItMV09YXJndW1lbnRzW3JdfX1pLnB1c2gobmV3IEl0ZW0oZSx0KSk7aWYoaS5sZW5ndGg9PT0xJiYhbyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZSx0KXt0aGlzLmZ1bj1lO3RoaXMuYXJyYXk9dH1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTt0LnRpdGxlPVwiYnJvd3NlclwiO3QuYnJvd3Nlcj10cnVlO3QuZW52PXt9O3QuYXJndj1bXTt0LnZlcnNpb249XCJcIjt0LnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9dC5vbj1ub29wO3QuYWRkTGlzdGVuZXI9bm9vcDt0Lm9uY2U9bm9vcDt0Lm9mZj1ub29wO3QucmVtb3ZlTGlzdGVuZXI9bm9vcDt0LnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3QuZW1pdD1ub29wO3QucHJlcGVuZExpc3RlbmVyPW5vb3A7dC5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7dC5saXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuW119O3QuYmluZGluZz1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07dC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07dC5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe3ZhciBuPXRbcl07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT10W3JdPXtleHBvcnRzOnt9fTt2YXIgbz10cnVlO3RyeXtlW3JdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO289ZmFsc2V9ZmluYWxseXtpZihvKWRlbGV0ZSB0W3JdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciByPV9fbmNjd3Bja19yZXF1aXJlX18oMjI5KTttb2R1bGUuZXhwb3J0cz1yfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      case REACT_SERVER_CONTEXT_TYPE:\n        {\n          var context2 = type;\n          return (context2.displayName || context2._globalName) + '.Provider';\n        }\n\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe[prop-missing]\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      } // TODO(luna): This will currently only throw if the function component\n      // tries to access React/ReactDOM/props. We should probably make this throw\n      // in simple components too\n\n\n      var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n      // component, which we don't yet support. Attach a noop catch handler to\n      // silence the error.\n      // TODO: Implement component stacks for async client components?\n\n      if (maybePromise && typeof maybePromise.catch === 'function') {\n        maybePromise.catch(function () {});\n      }\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement$1(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement$1(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (hasOwnProperty.call(props, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(props).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV = jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.development.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.development.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      case REACT_SERVER_CONTEXT_TYPE:\n        {\n          var context2 = type;\n          return (context2.displayName || context2._globalName) + '.Provider';\n        }\n\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe[prop-missing]\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      } // TODO(luna): This will currently only throw if the function component\n      // tries to access React/ReactDOM/props. We should probably make this throw\n      // in simple components too\n\n\n      var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n      // component, which we don't yet support. Attach a noop catch handler to\n      // silence the error.\n      // TODO: Implement component stacks for async client components?\n\n      if (maybePromise && typeof maybePromise.catch === 'function') {\n        maybePromise.catch(function () {});\n      }\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement$1(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement$1(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (hasOwnProperty.call(props, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(props).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx = jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs = jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/ODE0MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-runtime.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LXJ1bnRpbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLHNMQUFrRTtBQUNwRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1ydW50aW1lLmpzPzE5ZWMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-hook-form/dist/index.esm.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/react-hook-form/dist/index.esm.mjs ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Controller: function() { return /* binding */ Controller; },\n/* harmony export */   Form: function() { return /* binding */ Form; },\n/* harmony export */   FormProvider: function() { return /* binding */ FormProvider; },\n/* harmony export */   appendErrors: function() { return /* binding */ appendErrors; },\n/* harmony export */   get: function() { return /* binding */ get; },\n/* harmony export */   set: function() { return /* binding */ set; },\n/* harmony export */   useController: function() { return /* binding */ useController; },\n/* harmony export */   useFieldArray: function() { return /* binding */ useFieldArray; },\n/* harmony export */   useForm: function() { return /* binding */ useForm; },\n/* harmony export */   useFormContext: function() { return /* binding */ useFormContext; },\n/* harmony export */   useFormState: function() { return /* binding */ useFormState; },\n/* harmony export */   useWatch: function() { return /* binding */ useWatch; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\nvar isObject = (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar isPlainObject = (tempObject) => {\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\n};\n\nvar isWeb = typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n    let copy;\n    const isArray = Array.isArray(data);\n    if (data instanceof Date) {\n        copy = new Date(data);\n    }\n    else if (data instanceof Set) {\n        copy = new Set(data);\n    }\n    else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n        (isArray || isObject(data))) {\n        copy = isArray ? [] : {};\n        if (!isArray && !isPlainObject(data)) {\n            copy = data;\n        }\n        else {\n            for (const key in data) {\n                if (data.hasOwnProperty(key)) {\n                    copy[key] = cloneObject(data[key]);\n                }\n            }\n        }\n    }\n    else {\n        return data;\n    }\n    return copy;\n}\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (obj, path, defaultValue) => {\n    if (!path || !isObject(obj)) {\n        return defaultValue;\n    }\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\n    return isUndefined(result) || result === obj\n        ? isUndefined(obj[path])\n            ? defaultValue\n            : obj[path]\n        : result;\n};\n\nconst EVENTS = {\n    BLUR: 'blur',\n    FOCUS_OUT: 'focusout',\n    CHANGE: 'change',\n};\nconst VALIDATION_MODE = {\n    onBlur: 'onBlur',\n    onChange: 'onChange',\n    onSubmit: 'onSubmit',\n    onTouched: 'onTouched',\n    all: 'all',\n};\nconst INPUT_VALIDATION_RULES = {\n    max: 'max',\n    min: 'min',\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n    pattern: 'pattern',\n    required: 'required',\n    validate: 'validate',\n};\n\nconst HookFormContext = react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst useFormContext = () => react__WEBPACK_IMPORTED_MODULE_0___default().useContext(HookFormContext);\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst FormProvider = (props) => {\n    const { children, ...data } = props;\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(HookFormContext.Provider, { value: data }, children));\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\n    const result = {\n        defaultValues: control._defaultValues,\n    };\n    for (const key in formState) {\n        Object.defineProperty(result, key, {\n            get: () => {\n                const _key = key;\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n                }\n                localProxyFormState && (localProxyFormState[_key] = true);\n                return formState[_key];\n            },\n        });\n    }\n    return result;\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n    updateFormState(formStateData);\n    const { name, ...formState } = formStateData;\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar shouldSubscribeByName = (name, signalName, exact) => exact && signalName\n    ? name === signalName\n    : !name ||\n        !signalName ||\n        name === signalName ||\n        convertToArrayPayload(name).some((currentName) => currentName &&\n            (currentName.startsWith(signalName) ||\n                signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\n    const _props = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(props);\n    _props.current = props;\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n        const subscription = !props.disabled &&\n            _props.current.subject &&\n            _props.current.subject.subscribe({\n                next: _props.current.next,\n            });\n        return () => {\n            subscription && subscription.unsubscribe();\n        };\n    }, [props.disabled]);\n}\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, name, exact } = props || {};\n    const [formState, updateFormState] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(control._formState);\n    const _mounted = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(true);\n    const _localProxyFormState = react__WEBPACK_IMPORTED_MODULE_0___default().useRef({\n        isDirty: false,\n        isLoading: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    const _name = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        next: (value) => _mounted.current &&\n            shouldSubscribeByName(_name.current, value.name, exact) &&\n            shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) &&\n            updateFormState({\n                ...control._formState,\n                ...value,\n            }),\n        subject: control._subjects.state,\n    });\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n        _mounted.current = true;\n        _localProxyFormState.current.isValid && control._updateValid(true);\n        return () => {\n            _mounted.current = false;\n        };\n    }, [control]);\n    return getProxyFormState(formState, control, _localProxyFormState.current, false);\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n    if (isString(names)) {\n        isGlobal && _names.watch.add(names);\n        return get(formValues, names, defaultValue);\n    }\n    if (Array.isArray(names)) {\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n    }\n    isGlobal && (_names.watchAll = true);\n    return formValues;\n};\n\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nfunction useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\n    const _name = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        subject: control._subjects.values,\n        next: (formState) => {\n            if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n                updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\n            }\n        },\n    });\n    const [value, updateValue] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(control._getWatch(name, defaultValue));\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => control._removeUnmounted());\n    return value;\n}\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nfunction set(object, path, value) {\n    let index = -1;\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\n    const length = tempPath.length;\n    const lastIndex = length - 1;\n    while (++index < length) {\n        const key = tempPath[index];\n        let newValue = value;\n        if (index !== lastIndex) {\n            const objValue = object[key];\n            newValue =\n                isObject(objValue) || Array.isArray(objValue)\n                    ? objValue\n                    : !isNaN(+tempPath[index + 1])\n                        ? []\n                        : {};\n        }\n        object[key] = newValue;\n        object = object[key];\n    }\n    return object;\n}\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nfunction useController(props) {\n    const methods = useFormContext();\n    const { name, control = methods.control, shouldUnregister } = props;\n    const isArrayField = isNameInFieldArray(control._names.array, name);\n    const value = useWatch({\n        control,\n        name,\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\n        exact: true,\n    });\n    const formState = useFormState({\n        control,\n        name,\n    });\n    const _registerProps = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(control.register(name, {\n        ...props.rules,\n        value,\n    }));\n    _registerProps.current = control.register(name, props.rules);\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n        const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n        const updateMounted = (name, value) => {\n            const field = get(control._fields, name);\n            if (field) {\n                field._f.mount = value;\n            }\n        };\n        updateMounted(name, true);\n        if (_shouldUnregisterField) {\n            const value = cloneObject(get(control._options.defaultValues, name));\n            set(control._defaultValues, name, value);\n            if (isUndefined(get(control._formValues, name))) {\n                set(control._formValues, name, value);\n            }\n        }\n        return () => {\n            (isArrayField\n                ? _shouldUnregisterField && !control._state.action\n                : _shouldUnregisterField)\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, isArrayField, shouldUnregister]);\n    return {\n        field: {\n            name,\n            value,\n            onChange: react__WEBPACK_IMPORTED_MODULE_0___default().useCallback((event) => _registerProps.current.onChange({\n                target: {\n                    value: getEventValue(event),\n                    name: name,\n                },\n                type: EVENTS.CHANGE,\n            }), [name]),\n            onBlur: react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(() => _registerProps.current.onBlur({\n                target: {\n                    value: get(control._formValues, name),\n                    name: name,\n                },\n                type: EVENTS.BLUR,\n            }), [name, control]),\n            ref: (elm) => {\n                const field = get(control._fields, name);\n                if (field && elm) {\n                    field._f.ref = {\n                        focus: () => elm.focus(),\n                        select: () => elm.select(),\n                        setCustomValidity: (message) => elm.setCustomValidity(message),\n                        reportValidity: () => elm.reportValidity(),\n                    };\n                }\n            },\n        },\n        formState,\n        fieldState: Object.defineProperties({}, {\n            invalid: {\n                enumerable: true,\n                get: () => !!get(formState.errors, name),\n            },\n            isDirty: {\n                enumerable: true,\n                get: () => !!get(formState.dirtyFields, name),\n            },\n            isTouched: {\n                enumerable: true,\n                get: () => !!get(formState.touchedFields, name),\n            },\n            error: {\n                enumerable: true,\n                get: () => get(formState.errors, name),\n            },\n        }),\n    };\n}\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = (props) => props.render(useController(props));\n\nconst POST_REQUEST = 'post';\n/**\n * Form component to manage submission.\n *\n * @param props - to setup submission detail. {@link FormProps}\n *\n * @returns form component or headless render prop.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control, formState: { errors } } = useForm();\n *\n *   return (\n *     <Form action=\"/api\" control={control}>\n *       <input {...register(\"name\")} />\n *       <p>{errors?.root?.server && 'Server error'}</p>\n *       <button>Submit</button>\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction Form(props) {\n    const methods = useFormContext();\n    const [mounted, setMounted] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(false);\n    const { control = methods.control, onSubmit, children, action, method = POST_REQUEST, headers, encType, onError, render, onSuccess, validateStatus, ...rest } = props;\n    const submit = async (event) => {\n        let hasError = false;\n        let type = '';\n        await control.handleSubmit(async (data) => {\n            const formData = new FormData();\n            let formDataJson = '';\n            try {\n                formDataJson = JSON.stringify(data);\n            }\n            catch (_a) { }\n            for (const name of control._names.mount) {\n                formData.append(name, get(data, name));\n            }\n            if (onSubmit) {\n                await onSubmit({\n                    data,\n                    event,\n                    method,\n                    formData,\n                    formDataJson,\n                });\n            }\n            if (action) {\n                try {\n                    const shouldStringifySubmissionData = [\n                        headers && headers['Content-Type'],\n                        encType,\n                    ].some((value) => value && value.includes('json'));\n                    const response = await fetch(action, {\n                        method,\n                        headers: {\n                            ...headers,\n                            ...(encType ? { 'Content-Type': encType } : {}),\n                        },\n                        body: shouldStringifySubmissionData ? formDataJson : formData,\n                    });\n                    if (response &&\n                        (validateStatus\n                            ? !validateStatus(response.status)\n                            : response.status < 200 || response.status >= 300)) {\n                        hasError = true;\n                        onError && onError({ response });\n                        type = String(response.status);\n                    }\n                    else {\n                        onSuccess && onSuccess({ response });\n                    }\n                }\n                catch (error) {\n                    hasError = true;\n                    onError && onError({ error });\n                }\n            }\n        })(event);\n        if (hasError && props.control) {\n            props.control._subjects.state.next({\n                isSubmitSuccessful: false,\n            });\n            props.control.setError('root.server', {\n                type,\n            });\n        }\n    };\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n        setMounted(true);\n    }, []);\n    return render ? (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, render({\n        submit,\n    }))) : (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"form\", { noValidate: mounted, action: action, method: method, encType: encType, onSubmit: submit, ...rest }, children));\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\n            [type]: message || true,\n        },\n    }\n    : {};\n\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const { _f, ...currentField } = field;\n            if (_f && callback(_f.name)) {\n                if (_f.ref.focus) {\n                    _f.ref.focus();\n                    break;\n                }\n                else if (_f.refs && _f.refs[0].focus) {\n                    _f.refs[0].focus();\n                    break;\n                }\n            }\n            else if (isObject(currentField)) {\n                focusFieldBy(currentField, callback);\n            }\n        }\n    }\n};\n\nvar generateId = () => {\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16 + d) % 16 | 0;\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n\nvar getValidationModes = (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\n    (_names.watchAll ||\n        _names.watch.has(name) ||\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nvar updateFieldArrayRootError = (errors, error, name) => {\n    const fieldArrayErrors = compact(get(errors, name));\n    set(fieldArrayErrors, 'root', error[name]);\n    set(errors, name, fieldArrayErrors);\n    return errors;\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isHTMLElement = (value) => {\n    if (!isWeb) {\n        return false;\n    }\n    const owner = value ? value.ownerDocument : 0;\n    return (value instanceof\n        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));\n};\n\nvar isMessage = (value) => isString(value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRegex = (value) => value instanceof RegExp;\n\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nvar getCheckboxValue = (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n\nconst defaultReturn = {\n    isValid: false,\n    value: null,\n};\nvar getRadioValue = (options) => Array.isArray(options)\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\n        ? {\n            isValid: true,\n            value: option.value,\n        }\n        : previous, defaultReturn)\n    : defaultReturn;\n\nfunction getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n    };\n\nvar validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, } = field._f;\n    const inputValue = get(formValues, name);\n    if (!mount || disabled) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidity = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&\n        isUndefined(ref.value) &&\n        isUndefined(inputValue)) ||\n        (isHTMLElement(ref) && ref.value === '') ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = {\n            type: exceedMax ? maxType : minType,\n            message,\n            ref,\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n        };\n    };\n    if (isFieldArray\n        ? !Array.isArray(inputValue) || !inputValue.length\n        : required &&\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n                (isBoolean(inputValue) && !inputValue) ||\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\n                (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.required,\n                message,\n                ref: inputRef,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber ||\n                (inputValue ? +inputValue : inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\n            const isTime = ref.type == 'time';\n            const isWeek = ref.type == 'week';\n            if (isString(maxOutput.value) && inputValue) {\n                exceedMax = isTime\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n                    : isWeek\n                        ? inputValue > maxOutput.value\n                        : valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value) && inputValue) {\n                exceedMin = isTime\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n                    : isWeek\n                        ? inputValue < minOutput.value\n                        : valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) &&\n        !isEmpty &&\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > +maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < +minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.pattern,\n                message,\n                ref,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue, formValues);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = {\n                    ...validateError,\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\n                };\n                if (!validateAllFieldCriteria) {\n                    setCustomValidity(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n                if (validateError) {\n                    validationResult = {\n                        ...validateError,\n                        ...appendErrorsCurry(key, validateError.message),\n                    };\n                    setCustomValidity(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = {\n                    ref: inputRef,\n                    ...validationResult,\n                };\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidity(true);\n    return error;\n};\n\nfunction append(data, value) {\n    return [...data, ...convertToArrayPayload(value)];\n}\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}\n\nvar moveArrayAt = (data, from, to) => {\n    if (!Array.isArray(data)) {\n        return [];\n    }\n    if (isUndefined(data[to])) {\n        data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n};\n\nfunction prepend(data, value) {\n    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\n\nfunction removeAtIndexes(data, indexes) {\n    let i = 0;\n    const temp = [...data];\n    for (const index of indexes) {\n        temp.splice(index - i, 1);\n        i++;\n    }\n    return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index)\n    ? []\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\n    data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n\nfunction baseGet(object, updatePath) {\n    const length = updatePath.slice(0, -1).length;\n    let index = 0;\n    while (index < length) {\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\n    }\n    return object;\n}\nfunction isEmptyArray(obj) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction unset(object, path) {\n    const paths = Array.isArray(path)\n        ? path\n        : isKey(path)\n            ? [path]\n            : stringToPath(path);\n    const childObject = paths.length === 1 ? object : baseGet(object, paths);\n    const index = paths.length - 1;\n    const key = paths[index];\n    if (childObject) {\n        delete childObject[key];\n    }\n    if (index !== 0 &&\n        ((isObject(childObject) && isEmptyObject(childObject)) ||\n            (Array.isArray(childObject) && isEmptyArray(childObject)))) {\n        unset(object, paths.slice(0, -1));\n    }\n    return object;\n}\n\nvar updateAt = (fieldValues, index, value) => {\n    fieldValues[index] = value;\n    return fieldValues;\n};\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFieldArray(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\n    const [fields, setFields] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(control._getFieldArray(name));\n    const ids = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(control._getFieldArray(name).map(generateId));\n    const _fieldIds = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(fields);\n    const _name = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(name);\n    const _actioned = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(false);\n    _name.current = name;\n    _fieldIds.current = fields;\n    control._names.array.add(name);\n    props.rules &&\n        control.register(name, props.rules);\n    useSubscribe({\n        next: ({ values, name: fieldArrayName, }) => {\n            if (fieldArrayName === _name.current || !fieldArrayName) {\n                const fieldValues = get(values, _name.current);\n                if (Array.isArray(fieldValues)) {\n                    setFields(fieldValues);\n                    ids.current = fieldValues.map(generateId);\n                }\n            }\n        },\n        subject: control._subjects.array,\n    });\n    const updateValues = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback((updatedFieldArrayValues) => {\n        _actioned.current = true;\n        control._updateFieldArray(name, updatedFieldArrayValues);\n    }, [control, name]);\n    const append$1 = (value, options) => {\n        const appendValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = append(control._getFieldArray(name), appendValue);\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n        ids.current = append(ids.current, appendValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, append, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const prepend$1 = (value, options) => {\n        const prependValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = prepend(control._getFieldArray(name), prependValue);\n        control._names.focus = getFocusFieldName(name, 0, options);\n        ids.current = prepend(ids.current, prependValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, prepend, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n        ids.current = removeArrayAt(ids.current, index);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n            argA: index,\n        });\n    };\n    const insert$1 = (index, value, options) => {\n        const insertValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n        control._names.focus = getFocusFieldName(name, index, options);\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, insert, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        });\n    };\n    const swap = (indexA, indexB) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n        swapArrayAt(ids.current, indexA, indexB);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, false);\n    };\n    const move = (from, to) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        moveArrayAt(updatedFieldArrayValues, from, to);\n        moveArrayAt(ids.current, from, to);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, false);\n    };\n    const update = (index, value) => {\n        const updateValue = cloneObject(value);\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\n        updateValues(updatedFieldArrayValues);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\n            argA: index,\n            argB: updateValue,\n        }, true, false);\n    };\n    const replace = (value) => {\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n        ids.current = updatedFieldArrayValues.map(generateId);\n        updateValues([...updatedFieldArrayValues]);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\n    };\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n        control._state.action = false;\n        isWatched(name, control._names) &&\n            control._subjects.state.next({\n                ...control._formState,\n            });\n        if (_actioned.current &&\n            (!getValidationModes(control._options.mode).isOnSubmit ||\n                control._formState.isSubmitted)) {\n            if (control._options.resolver) {\n                control._executeSchema([name]).then((result) => {\n                    const error = get(result.errors, name);\n                    const existingError = get(control._formState.errors, name);\n                    if (existingError\n                        ? (!error && existingError.type) ||\n                            (error &&\n                                (existingError.type !== error.type ||\n                                    existingError.message !== error.message))\n                        : error && error.type) {\n                        error\n                            ? set(control._formState.errors, name, error)\n                            : unset(control._formState.errors, name);\n                        control._subjects.state.next({\n                            errors: control._formState.errors,\n                        });\n                    }\n                });\n            }\n            else {\n                const field = get(control._fields, name);\n                if (field && field._f) {\n                    validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\n                        control._subjects.state.next({\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\n                        }));\n                }\n            }\n        }\n        control._subjects.values.next({\n            name,\n            values: { ...control._formValues },\n        });\n        control._names.focus &&\n            focusFieldBy(control._fields, (key) => !!key && key.startsWith(control._names.focus || ''));\n        control._names.focus = '';\n        control._updateValid();\n        _actioned.current = false;\n    }, [fields, name, control]);\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n        !get(control._formValues, name) && control._updateFieldArray(name);\n        return () => {\n            (control._options.shouldUnregister || shouldUnregister) &&\n                control.unregister(name);\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(swap, [updateValues, name, control]),\n        move: react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(move, [updateValues, name, control]),\n        prepend: react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(prepend$1, [updateValues, name, control]),\n        append: react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(append$1, [updateValues, name, control]),\n        remove: react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(remove, [updateValues, name, control]),\n        insert: react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(insert$1, [updateValues, name, control]),\n        update: react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(update, [updateValues, name, control]),\n        replace: react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(replace, [updateValues, name, control]),\n        fields: react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(() => fields.map((field, index) => ({\n            ...field,\n            [keyName]: ids.current[index] || generateId(),\n        })), [fields, keyName]),\n    };\n}\n\nfunction createSubject() {\n    let _observers = [];\n    const next = (value) => {\n        for (const observer of _observers) {\n            observer.next && observer.next(value);\n        }\n    };\n    const subscribe = (observer) => {\n        _observers.push(observer);\n        return {\n            unsubscribe: () => {\n                _observers = _observers.filter((o) => o !== observer);\n            },\n        };\n    };\n    const unsubscribe = () => {\n        _observers = [];\n    };\n    return {\n        get observers() {\n            return _observers;\n        },\n        next,\n        subscribe,\n        unsubscribe,\n    };\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\n    if (isPrimitive(object1) || isPrimitive(object2)) {\n        return object1 === object2;\n    }\n    if (isDateObject(object1) && isDateObject(object2)) {\n        return object1.getTime() === object2.getTime();\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isDateObject(val1) && isDateObject(val2)) ||\n                (isObject(val1) && isObject(val2)) ||\n                (Array.isArray(val1) && Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nvar objectHasFunction = (data) => {\n    for (const key in data) {\n        if (isFunction(data[key])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction markFieldsDirty(data, fields = {}) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                fields[key] = Array.isArray(data[key]) ? [] : {};\n                markFieldsDirty(data[key], fields[key]);\n            }\n            else if (!isNullOrUndefined(data[key])) {\n                fields[key] = true;\n            }\n        }\n    }\n    return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                if (isUndefined(formValues) ||\n                    isPrimitive(dirtyFieldsFromValues[key])) {\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\n                        ? markFieldsDirty(data[key], [])\n                        : { ...markFieldsDirty(data[key]) };\n                }\n                else {\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n                }\n            }\n            else {\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n            }\n        }\n    }\n    return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : value\n                ? +value\n                : value\n        : valueAsDate && isString(value)\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;\n\nfunction getFieldValue(_f) {\n    const ref = _f.ref;\n    if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n        return;\n    }\n    if (isFileInput(ref)) {\n        return ref.files;\n    }\n    if (isRadioInput(ref)) {\n        return getRadioValue(_f.refs).value;\n    }\n    if (isMultipleSelect(ref)) {\n        return [...ref.selectedOptions].map(({ value }) => value);\n    }\n    if (isCheckBoxInput(ref)) {\n        return getCheckboxValue(_f.refs).value;\n    }\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n    const fields = {};\n    for (const name of fieldsNames) {\n        const field = get(_fields, name);\n        field && set(fields, name, field._f);\n    }\n    return {\n        criteriaMode,\n        names: [...fieldsNames],\n        fields,\n        shouldUseNativeValidation,\n    };\n};\n\nvar getRuleValue = (rule) => isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n        ? rule.source\n        : isObject(rule)\n            ? isRegex(rule.value)\n                ? rule.value.source\n                : rule.value\n            : rule;\n\nvar hasValidation = (options) => options.mount &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\n    const error = get(errors, name);\n    if (error || isKey(name)) {\n        return {\n            error,\n            name,\n        };\n    }\n    const names = name.split('.');\n    while (names.length) {\n        const fieldName = names.join('.');\n        const field = get(_fields, fieldName);\n        const foundError = get(errors, fieldName);\n        if (field && !Array.isArray(field) && name !== fieldName) {\n            return { name };\n        }\n        if (foundError && foundError.type) {\n            return {\n                name: fieldName,\n                error: foundError,\n            };\n        }\n        names.pop();\n    }\n    return {\n        name,\n    };\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n    if (mode.isOnAll) {\n        return false;\n    }\n    else if (!isSubmitted && mode.isOnTouch) {\n        return !(isTouched || isBlurEvent);\n    }\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n        return !isBlurEvent;\n    }\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n        return isBlurEvent;\n    }\n    return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nfunction createFormControl(props = {}, flushRootRender) {\n    let _options = {\n        ...defaultOptions,\n        ...props,\n    };\n    let _formState = {\n        submitCount: 0,\n        isDirty: false,\n        isLoading: isFunction(_options.defaultValues),\n        isValidating: false,\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        touchedFields: {},\n        dirtyFields: {},\n        errors: {},\n    };\n    let _fields = {};\n    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)\n        ? cloneObject(_options.defaultValues || _options.values) || {}\n        : {};\n    let _formValues = _options.shouldUnregister\n        ? {}\n        : cloneObject(_defaultValues);\n    let _state = {\n        action: false,\n        mount: false,\n        watch: false,\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n    };\n    let delayErrorCallback;\n    let timer = 0;\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    const _subjects = {\n        values: createSubject(),\n        array: createSubject(),\n        state: createSubject(),\n    };\n    const shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues;\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\n    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n    const debounce = (callback) => (wait) => {\n        clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n    const _updateValid = async (shouldUpdateValid) => {\n        if (_proxyFormState.isValid || shouldUpdateValid) {\n            const isValid = _options.resolver\n                ? isEmptyObject((await _executeSchema()).errors)\n                : await executeBuiltInValidation(_fields, true);\n            if (isValid !== _formState.isValid) {\n                _subjects.state.next({\n                    isValid,\n                });\n            }\n        }\n    };\n    const _updateIsValidating = (value) => _proxyFormState.isValidating &&\n        _subjects.state.next({\n            isValidating: value,\n        });\n    const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\n        if (args && method) {\n            _state.action = true;\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\n                shouldSetValues && set(_fields, name, fieldValues);\n            }\n            if (shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.errors, name))) {\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.errors, name, errors);\n                unsetEmptyArray(_formState.errors, name);\n            }\n            if (_proxyFormState.touchedFields &&\n                shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.touchedFields, name))) {\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n            }\n            if (_proxyFormState.dirtyFields) {\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n            }\n            _subjects.state.next({\n                name,\n                isDirty: _getDirty(name, values),\n                dirtyFields: _formState.dirtyFields,\n                errors: _formState.errors,\n                isValid: _formState.isValid,\n            });\n        }\n        else {\n            set(_formValues, name, values);\n        }\n    };\n    const updateErrors = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n        const field = get(_fields, name);\n        if (field) {\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n            isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipSetValueAs\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\n                : setFieldValue(name, defaultValue);\n            _state.mount && _updateValid();\n        }\n    };\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n        let shouldUpdateField = false;\n        let isPreviousDirty = false;\n        const output = {\n            name,\n        };\n        if (!isBlurEvent || shouldDirty) {\n            if (_proxyFormState.isDirty) {\n                isPreviousDirty = _formState.isDirty;\n                _formState.isDirty = output.isDirty = _getDirty();\n                shouldUpdateField = isPreviousDirty !== output.isDirty;\n            }\n            const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n            isPreviousDirty = get(_formState.dirtyFields, name);\n            isCurrentFieldPristine\n                ? unset(_formState.dirtyFields, name)\n                : set(_formState.dirtyFields, name, true);\n            output.dirtyFields = _formState.dirtyFields;\n            shouldUpdateField =\n                shouldUpdateField ||\n                    (_proxyFormState.dirtyFields &&\n                        isPreviousDirty !== !isCurrentFieldPristine);\n        }\n        if (isBlurEvent) {\n            const isPreviousFieldTouched = get(_formState.touchedFields, name);\n            if (!isPreviousFieldTouched) {\n                set(_formState.touchedFields, name, isBlurEvent);\n                output.touchedFields = _formState.touchedFields;\n                shouldUpdateField =\n                    shouldUpdateField ||\n                        (_proxyFormState.touchedFields &&\n                            isPreviousFieldTouched !== isBlurEvent);\n            }\n        }\n        shouldUpdateField && shouldRender && _subjects.state.next(output);\n        return shouldUpdateField ? output : {};\n    };\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\n        const previousFieldError = get(_formState.errors, name);\n        const shouldUpdateValid = _proxyFormState.isValid &&\n            isBoolean(isValid) &&\n            _formState.isValid !== isValid;\n        if (props.delayError && error) {\n            delayErrorCallback = debounce(() => updateErrors(name, error));\n            delayErrorCallback(props.delayError);\n        }\n        else {\n            clearTimeout(timer);\n            delayErrorCallback = null;\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n            !isEmptyObject(fieldState) ||\n            shouldUpdateValid) {\n            const updatedFormState = {\n                ...fieldState,\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n                errors: _formState.errors,\n                name,\n            };\n            _formState = {\n                ..._formState,\n                ...updatedFormState,\n            };\n            _subjects.state.next(updatedFormState);\n        }\n        _updateIsValidating(false);\n    };\n    const _executeSchema = async (name) => _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n    const executeSchemaAndUpdateState = async (names) => {\n        const { errors } = await _executeSchema();\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\n        valid: true,\n    }) => {\n        for (const name in fields) {\n            const field = fields[name];\n            if (field) {\n                const { _f, ...fieldValue } = field;\n                if (_f) {\n                    const isFieldArrayRoot = _names.array.has(_f.name);\n                    const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);\n                    if (fieldError[_f.name]) {\n                        context.valid = false;\n                        if (shouldOnlyCheckValid) {\n                            break;\n                        }\n                    }\n                    !shouldOnlyCheckValid &&\n                        (get(fieldError, _f.name)\n                            ? isFieldArrayRoot\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name));\n                }\n                fieldValue &&\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const _removeUnmounted = () => {\n        for (const name of _names.unMount) {\n            const field = get(_fields, name);\n            field &&\n                (field._f.refs\n                    ? field._f.refs.every((ref) => !live(ref))\n                    : !live(field._f.ref)) &&\n                unregister(name);\n        }\n        _names.unMount = new Set();\n    };\n    const _getDirty = (name, data) => (name && data && set(_formValues, name, data),\n        !deepEqual(getValues(), _defaultValues));\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n        ...(_state.mount\n            ? _formValues\n            : isUndefined(defaultValue)\n                ? _defaultValues\n                : isString(names)\n                    ? { [names]: defaultValue }\n                    : defaultValue),\n    }, isGlobal, defaultValue);\n    const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\n    const setFieldValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        let fieldValue = value;\n        if (field) {\n            const fieldReference = field._f;\n            if (fieldReference) {\n                !fieldReference.disabled &&\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\n                fieldValue =\n                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n                        ? ''\n                        : value;\n                if (isMultipleSelect(fieldReference.ref)) {\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\n                }\n                else if (fieldReference.refs) {\n                    if (isCheckBoxInput(fieldReference.ref)) {\n                        fieldReference.refs.length > 1\n                            ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                                (checkboxRef.checked = Array.isArray(fieldValue)\n                                    ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                    : fieldValue === checkboxRef.value))\n                            : fieldReference.refs[0] &&\n                                (fieldReference.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else if (isFileInput(fieldReference.ref)) {\n                    fieldReference.ref.value = '';\n                }\n                else {\n                    fieldReference.ref.value = fieldValue;\n                    if (!fieldReference.ref.type) {\n                        _subjects.values.next({\n                            name,\n                            values: { ..._formValues },\n                        });\n                    }\n                }\n            }\n        }\n        (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n        options.shouldValidate && trigger(name);\n    };\n    const setValues = (name, value, options) => {\n        for (const fieldKey in value) {\n            const fieldValue = value[fieldKey];\n            const fieldName = `${name}.${fieldKey}`;\n            const field = get(_fields, fieldName);\n            (_names.array.has(name) ||\n                !isPrimitive(fieldValue) ||\n                (field && !field._f)) &&\n                !isDateObject(fieldValue)\n                ? setValues(fieldName, fieldValue, options)\n                : setFieldValue(fieldName, fieldValue, options);\n        }\n    };\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        const cloneValue = cloneObject(value);\n        set(_formValues, name, cloneValue);\n        if (isFieldArray) {\n            _subjects.array.next({\n                name,\n                values: { ..._formValues },\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                _subjects.state.next({\n                    name,\n                    dirtyFields: getDirtyFields(_defaultValues, _formValues),\n                    isDirty: _getDirty(name, cloneValue),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(cloneValue)\n                ? setValues(name, cloneValue, options)\n                : setFieldValue(name, cloneValue, options);\n        }\n        isWatched(name, _names) && _subjects.state.next({ ..._formState });\n        _subjects.values.next({\n            name,\n            values: { ..._formValues },\n        });\n        !_state.mount && flushRootRender();\n    };\n    const onChange = async (event) => {\n        const target = event.target;\n        let name = target.name;\n        let isFieldValueUpdated = true;\n        const field = get(_fields, name);\n        const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\n        if (field) {\n            let error;\n            let isValid;\n            const fieldValue = getCurrentFieldValue();\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n            const shouldSkipValidation = (!hasValidation(field._f) &&\n                !_options.resolver &&\n                !get(_formState.errors, name) &&\n                !field._f.deps) ||\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n            const watched = isWatched(name, _names, isBlurEvent);\n            set(_formValues, name, fieldValue);\n            if (isBlurEvent) {\n                field._f.onBlur && field._f.onBlur(event);\n                delayErrorCallback && delayErrorCallback(0);\n            }\n            else if (field._f.onChange) {\n                field._f.onChange(event);\n            }\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n            const shouldRender = !isEmptyObject(fieldState) || watched;\n            !isBlurEvent &&\n                _subjects.values.next({\n                    name,\n                    type: event.type,\n                    values: { ..._formValues },\n                });\n            if (shouldSkipValidation) {\n                _proxyFormState.isValid && _updateValid();\n                return (shouldRender &&\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\n            }\n            !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n            _updateIsValidating(true);\n            if (_options.resolver) {\n                const { errors } = await _executeSchema([name]);\n                const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n                const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n                error = errorLookupResult.error;\n                name = errorLookupResult.name;\n                isValid = isEmptyObject(errors);\n            }\n            else {\n                error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n                isFieldValueUpdated =\n                    isNaN(fieldValue) ||\n                        fieldValue === get(_formValues, name, fieldValue);\n                if (isFieldValueUpdated) {\n                    if (error) {\n                        isValid = false;\n                    }\n                    else if (_proxyFormState.isValid) {\n                        isValid = await executeBuiltInValidation(_fields, true);\n                    }\n                }\n            }\n            if (isFieldValueUpdated) {\n                field._f.deps &&\n                    trigger(field._f.deps);\n                shouldRenderByError(name, isValid, error, fieldState);\n            }\n        }\n    };\n    const trigger = async (name, options = {}) => {\n        let isValid;\n        let validationResult;\n        const fieldNames = convertToArrayPayload(name);\n        _updateIsValidating(true);\n        if (_options.resolver) {\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n            isValid = isEmptyObject(errors);\n            validationResult = name\n                ? !fieldNames.some((name) => get(errors, name))\n                : isValid;\n        }\n        else if (name) {\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\n                const field = get(_fields, fieldName);\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\n            }))).every(Boolean);\n            !(!validationResult && !_formState.isValid) && _updateValid();\n        }\n        else {\n            validationResult = isValid = await executeBuiltInValidation(_fields);\n        }\n        _subjects.state.next({\n            ...(!isString(name) ||\n                (_proxyFormState.isValid && isValid !== _formState.isValid)\n                ? {}\n                : { name }),\n            ...(_options.resolver || !name ? { isValid } : {}),\n            errors: _formState.errors,\n            isValidating: false,\n        });\n        options.shouldFocus &&\n            !validationResult &&\n            focusFieldBy(_fields, (key) => key && get(_formState.errors, key), name ? fieldNames : _names.mount);\n        return validationResult;\n    };\n    const getValues = (fieldNames) => {\n        const values = {\n            ..._defaultValues,\n            ...(_state.mount ? _formValues : {}),\n        };\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const getFieldState = (name, formState) => ({\n        invalid: !!get((formState || _formState).errors, name),\n        isDirty: !!get((formState || _formState).dirtyFields, name),\n        isTouched: !!get((formState || _formState).touchedFields, name),\n        error: get((formState || _formState).errors, name),\n    });\n    const clearErrors = (name) => {\n        name &&\n            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));\n        _subjects.state.next({\n            errors: name ? _formState.errors : {},\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, {\n            ...error,\n            ref,\n        });\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (name, defaultValue) => isFunction(name)\n        ? _subjects.values.subscribe({\n            next: (payload) => name(_getWatch(undefined, defaultValue), payload),\n        })\n        : _getWatch(name, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(fieldName);\n            _names.array.delete(fieldName);\n            if (!options.keepValue) {\n                unset(_fields, fieldName);\n                unset(_formValues, fieldName);\n            }\n            !options.keepError && unset(_formState.errors, fieldName);\n            !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n            !options.keepTouched && unset(_formState.touchedFields, fieldName);\n            !_options.shouldUnregister &&\n                !options.keepDefaultValue &&\n                unset(_defaultValues, fieldName);\n        }\n        _subjects.values.next({\n            values: { ..._formValues },\n        });\n        _subjects.state.next({\n            ..._formState,\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n        });\n        !options.keepIsValid && _updateValid();\n    };\n    const register = (name, options = {}) => {\n        let field = get(_fields, name);\n        const disabledIsDefined = isBoolean(options.disabled);\n        set(_fields, name, {\n            ...(field || {}),\n            _f: {\n                ...(field && field._f ? field._f : { ref: { name } }),\n                name,\n                mount: true,\n                ...options,\n            },\n        });\n        _names.mount.add(name);\n        field\n            ? disabledIsDefined &&\n                set(_formValues, name, options.disabled\n                    ? undefined\n                    : get(_formValues, name, getFieldValue(field._f)))\n            : updateValidAndValue(name, true, options.value);\n        return {\n            ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n            ...(_options.progressive\n                ? {\n                    required: !!options.required,\n                    min: getRuleValue(options.min),\n                    max: getRuleValue(options.max),\n                    minLength: getRuleValue(options.minLength),\n                    maxLength: getRuleValue(options.maxLength),\n                    pattern: getRuleValue(options.pattern),\n                }\n                : {}),\n            name,\n            onChange,\n            onBlur: onChange,\n            ref: (ref) => {\n                if (ref) {\n                    register(name, options);\n                    field = get(_fields, name);\n                    const fieldRef = isUndefined(ref.value)\n                        ? ref.querySelectorAll\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\n                            : ref\n                        : ref;\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n                    const refs = field._f.refs || [];\n                    if (radioOrCheckbox\n                        ? refs.find((option) => option === fieldRef)\n                        : fieldRef === field._f.ref) {\n                        return;\n                    }\n                    set(_fields, name, {\n                        _f: {\n                            ...field._f,\n                            ...(radioOrCheckbox\n                                ? {\n                                    refs: [\n                                        ...refs.filter(live),\n                                        fieldRef,\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                                    ],\n                                    ref: { type: fieldRef.type, name },\n                                }\n                                : { ref: fieldRef }),\n                        },\n                    });\n                    updateValidAndValue(name, false, undefined, fieldRef);\n                }\n                else {\n                    field = get(_fields, name, {});\n                    if (field._f) {\n                        field._f.mount = false;\n                    }\n                    (_options.shouldUnregister || options.shouldUnregister) &&\n                        !(isNameInFieldArray(_names.array, name) && _state.action) &&\n                        _names.unMount.add(name);\n                }\n            },\n        };\n    };\n    const _focusError = () => _options.shouldFocusError &&\n        focusFieldBy(_fields, (key) => key && get(_formState.errors, key), _names.mount);\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let fieldValues = cloneObject(_formValues);\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        if (_options.resolver) {\n            const { errors, values } = await _executeSchema();\n            _formState.errors = errors;\n            fieldValues = values;\n        }\n        else {\n            await executeBuiltInValidation(_fields);\n        }\n        unset(_formState.errors, 'root');\n        if (isEmptyObject(_formState.errors)) {\n            _subjects.state.next({\n                errors: {},\n            });\n            await onValid(fieldValues, e);\n        }\n        else {\n            if (onInvalid) {\n                await onInvalid({ ..._formState.errors }, e);\n            }\n            _focusError();\n            setTimeout(_focusError);\n        }\n        _subjects.state.next({\n            isSubmitted: true,\n            isSubmitting: false,\n            isSubmitSuccessful: isEmptyObject(_formState.errors),\n            submitCount: _formState.submitCount + 1,\n            errors: _formState.errors,\n        });\n    };\n    const resetField = (name, options = {}) => {\n        if (get(_fields, name)) {\n            if (isUndefined(options.defaultValue)) {\n                setValue(name, get(_defaultValues, name));\n            }\n            else {\n                setValue(name, options.defaultValue);\n                set(_defaultValues, name, options.defaultValue);\n            }\n            if (!options.keepTouched) {\n                unset(_formState.touchedFields, name);\n            }\n            if (!options.keepDirty) {\n                unset(_formState.dirtyFields, name);\n                _formState.isDirty = options.defaultValue\n                    ? _getDirty(name, get(_defaultValues, name))\n                    : _getDirty();\n            }\n            if (!options.keepError) {\n                unset(_formState.errors, name);\n                _proxyFormState.isValid && _updateValid();\n            }\n            _subjects.state.next({ ..._formState });\n        }\n    };\n    const _reset = (formValues, keepStateOptions = {}) => {\n        const updatedValues = formValues || _defaultValues;\n        const cloneUpdatedValues = cloneObject(updatedValues);\n        const values = formValues && !isEmptyObject(formValues)\n            ? cloneUpdatedValues\n            : _defaultValues;\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = updatedValues;\n        }\n        if (!keepStateOptions.keepValues) {\n            if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n                for (const fieldName of _names.mount) {\n                    get(_formState.dirtyFields, fieldName)\n                        ? set(values, fieldName, get(_formValues, fieldName))\n                        : setValue(fieldName, get(values, fieldName));\n                }\n            }\n            else {\n                if (isWeb && isUndefined(formValues)) {\n                    for (const name of _names.mount) {\n                        const field = get(_fields, name);\n                        if (field && field._f) {\n                            const fieldReference = Array.isArray(field._f.refs)\n                                ? field._f.refs[0]\n                                : field._f.ref;\n                            if (isHTMLElement(fieldReference)) {\n                                const form = fieldReference.closest('form');\n                                if (form) {\n                                    form.reset();\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                _fields = {};\n            }\n            _formValues = props.shouldUnregister\n                ? keepStateOptions.keepDefaultValues\n                    ? cloneObject(_defaultValues)\n                    : {}\n                : cloneObject(values);\n            _subjects.array.next({\n                values: { ...values },\n            });\n            _subjects.values.next({\n                values: { ...values },\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n            focus: '',\n        };\n        !_state.mount && flushRootRender();\n        _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n        _state.watch = !!props.shouldUnregister;\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : !!(keepStateOptions.keepDefaultValues &&\n                    !deepEqual(formValues, _defaultValues)),\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirtyValues\n                ? _formState.dirtyFields\n                : keepStateOptions.keepDefaultValues && formValues\n                    ? getDirtyFields(_defaultValues, formValues)\n                    : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitting: false,\n            isSubmitSuccessful: false,\n        });\n    };\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\n        ? formValues(_formValues)\n        : formValues, keepStateOptions);\n    const setFocus = (name, options = {}) => {\n        const field = get(_fields, name);\n        const fieldReference = field && field._f;\n        if (fieldReference) {\n            const fieldRef = fieldReference.refs\n                ? fieldReference.refs[0]\n                : fieldReference.ref;\n            if (fieldRef.focus) {\n                fieldRef.focus();\n                options.shouldSelect && fieldRef.select();\n            }\n        }\n    };\n    const _updateFormState = (updatedFormState) => {\n        _formState = {\n            ..._formState,\n            ...updatedFormState,\n        };\n    };\n    const _resetDefaultValues = () => isFunction(_options.defaultValues) &&\n        _options.defaultValues().then((values) => {\n            reset(values, _options.resetOptions);\n            _subjects.state.next({\n                isLoading: false,\n            });\n        });\n    return {\n        control: {\n            register,\n            unregister,\n            getFieldState,\n            handleSubmit,\n            setError,\n            _executeSchema,\n            _getWatch,\n            _getDirty,\n            _updateValid,\n            _removeUnmounted,\n            _updateFieldArray,\n            _getFieldArray,\n            _reset,\n            _resetDefaultValues,\n            _updateFormState,\n            _subjects,\n            _proxyFormState,\n            get _fields() {\n                return _fields;\n            },\n            get _formValues() {\n                return _formValues;\n            },\n            get _state() {\n                return _state;\n            },\n            set _state(value) {\n                _state = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            get _formState() {\n                return _formState;\n            },\n            set _formState(value) {\n                _formState = value;\n            },\n            get _options() {\n                return _options;\n            },\n            set _options(value) {\n                _options = {\n                    ..._options,\n                    ...value,\n                };\n            },\n        },\n        trigger,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        resetField,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n        getFieldState,\n    };\n}\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useForm(props = {}) {\n    const _formControl = react__WEBPACK_IMPORTED_MODULE_0___default().useRef();\n    const _values = react__WEBPACK_IMPORTED_MODULE_0___default().useRef();\n    const [formState, updateFormState] = react__WEBPACK_IMPORTED_MODULE_0___default().useState({\n        isDirty: false,\n        isValidating: false,\n        isLoading: isFunction(props.defaultValues),\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        submitCount: 0,\n        dirtyFields: {},\n        touchedFields: {},\n        errors: {},\n        defaultValues: isFunction(props.defaultValues)\n            ? undefined\n            : props.defaultValues,\n    });\n    if (!_formControl.current) {\n        _formControl.current = {\n            ...createFormControl(props, () => updateFormState((formState) => ({ ...formState }))),\n            formState,\n        };\n    }\n    const control = _formControl.current.control;\n    control._options = props;\n    useSubscribe({\n        subject: control._subjects.state,\n        next: (value) => {\n            if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\n                updateFormState({ ...control._formState });\n            }\n        },\n    });\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n        if (props.values && !deepEqual(props.values, _values.current)) {\n            control._reset(props.values, control._options.resetOptions);\n            _values.current = props.values;\n        }\n        else {\n            control._resetDefaultValues();\n        }\n    }, [props.values, control]);\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n        if (!control._state.mount) {\n            control._updateValid();\n            control._state.mount = true;\n        }\n        if (control._state.watch) {\n            control._state.watch = false;\n            control._subjects.state.next({ ...control._formState });\n        }\n        control._removeUnmounted();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control);\n    return _formControl.current;\n}\n\n\n//# sourceMappingURL=index.esm.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1ob29rLWZvcm0vZGlzdC9pbmRleC5lc20ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTBCOztBQUUxQjs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHdCQUF3QiwwREFBbUI7QUFDM0M7QUFDQSxpTkFBaU4sbUJBQW1CO0FBQ3BPO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFlBQVk7QUFDbEMseUJBQXlCLCtCQUErQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxXQUFXLG9CQUFvQjtBQUM1QyxvQkFBb0IscUJBQXFCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qix1REFBZ0I7QUFDN0M7QUFDQSwwS0FBMEsscUJBQXFCO0FBQy9MO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFlBQVk7QUFDbEMseUJBQXlCLCtCQUErQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxXQUFXLG9CQUFvQjtBQUM1QyxvQkFBb0IscUJBQXFCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvQkFBb0I7QUFDaEMsWUFBWSwwREFBbUIsNkJBQTZCLGFBQWE7QUFDekU7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWSxxQkFBcUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLG1EQUFZO0FBQy9CO0FBQ0EsSUFBSSxzREFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxrQ0FBa0M7QUFDL0M7QUFDQTtBQUNBLE9BQU87QUFDUCxhQUFhLGNBQWM7QUFDM0I7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVCQUF1QjtBQUM5QyxpQkFBaUIsMEJBQTBCO0FBQzNDLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtREFBbUQ7QUFDL0QseUNBQXlDLHFEQUFjO0FBQ3ZELHFCQUFxQixtREFBWTtBQUNqQyxpQ0FBaUMsbURBQVk7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsa0JBQWtCLG1EQUFZO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLEtBQUs7QUFDTCxJQUFJLHNEQUFlO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGtFQUFrRTtBQUM5RSxrQkFBa0IsbURBQVk7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsaUNBQWlDLHFEQUFjO0FBQy9DLElBQUksc0RBQWU7QUFDbkI7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSwrQkFBK0I7QUFDNUM7QUFDQTtBQUNBLGlCQUFpQixVQUFVLGFBQWEsWUFBWTtBQUNwRCxhQUFhLGtDQUFrQztBQUMvQyxhQUFhLHlDQUF5QztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0RBQW9EO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMkJBQTJCLG1EQUFZO0FBQ3ZDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxJQUFJLHNEQUFlO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHdEQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2Isb0JBQW9CLHdEQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EsOENBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQSxtQkFBbUIsR0FBRyxTQUFTLDhCQUE4Qix5QkFBeUI7QUFDdEY7QUFDQTtBQUNBLDJCQUEyQixVQUFVO0FBQ3JDLHlCQUF5QixRQUFRO0FBQ2pDLHdCQUF3QixPQUFPO0FBQy9CLHNCQUFzQixLQUFLO0FBQzNCO0FBQ0EsbUJBQW1CLHlDQUF5QztBQUM1RCxtQkFBbUIsc0NBQXNDO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHNCQUFzQixXQUFXO0FBQzlDO0FBQ0E7QUFDQSxvQ0FBb0MsUUFBUTtBQUM1QyxpQkFBaUIscUJBQXFCO0FBQ3RDLGFBQWEsdUNBQXVDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MscURBQWM7QUFDaEQsWUFBWSxzSkFBc0o7QUFDbEs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDBCQUEwQixJQUFJO0FBQzFFLHlCQUF5QjtBQUN6QjtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLFVBQVU7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsaURBQWlELFVBQVU7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsT0FBTztBQUNoRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxJQUFJLHNEQUFlO0FBQ25CO0FBQ0EsS0FBSztBQUNMLHFCQUFxQiwwREFBbUIsQ0FBQyx1REFBYztBQUN2RDtBQUNBLEtBQUssT0FBTywwREFBbUIsV0FBVyxrR0FBa0c7QUFDNUk7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEU7QUFDNUU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixzQkFBc0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSxrREFBa0Q7QUFDbEQ7QUFDQSxXQUFXLEtBQUssR0FBRyw2REFBNkQ7QUFDaEY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxZQUFZLGdIQUFnSDtBQUM1SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQyxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLCtCQUErQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsNERBQTREO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSx1QkFBdUIsd0NBQXdDO0FBQy9ELFVBQVU7QUFDVix3QkFBd0IsVUFBVSxvQkFBb0IsTUFBTSxlQUFlO0FBQzNFO0FBQ0Esd0NBQXdDLGVBQWUsbUJBQW1CLEVBQUU7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFFQUFxRTtBQUNqRixnQ0FBZ0MscURBQWM7QUFDOUMsZ0JBQWdCLG1EQUFZO0FBQzVCLHNCQUFzQixtREFBWTtBQUNsQyxrQkFBa0IsbURBQVk7QUFDOUIsc0JBQXNCLG1EQUFZO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwrQkFBK0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0wseUJBQXlCLHdEQUFpQjtBQUMxQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0ZBQXdGO0FBQ3hGO0FBQ0EsSUFBSSxzREFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix3QkFBd0I7QUFDOUMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSSxzREFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsY0FBYyx3REFBaUI7QUFDL0IsY0FBYyx3REFBaUI7QUFDL0IsaUJBQWlCLHdEQUFpQjtBQUNsQyxnQkFBZ0Isd0RBQWlCO0FBQ2pDLGdCQUFnQix3REFBaUI7QUFDakMsZ0JBQWdCLHdEQUFpQjtBQUNqQyxnQkFBZ0Isd0RBQWlCO0FBQ2pDLGlCQUFpQix3REFBaUI7QUFDbEMsZ0JBQWdCLG9EQUFhO0FBQzdCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0Esa0dBQWtHO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdDQUFnQyx3Q0FBd0M7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxPQUFPO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLHVCQUF1QjtBQUN2QixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0UsVUFBVSxJQUFJO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixvQkFBb0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBLEtBQUs7QUFDTDtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsZ0JBQWdCO0FBQ3RELHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLEtBQUssR0FBRyxTQUFTO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixnQkFBZ0I7QUFDMUMsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxlQUFlO0FBQ3pFO0FBQ0E7QUFDQSxzQkFBc0IsZ0JBQWdCO0FBQ3RDLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZ0JBQWdCO0FBQzlDLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsdUJBQXVCLGVBQWU7QUFDakY7QUFDQSw4REFBOEQsZUFBZTtBQUM3RTtBQUNBO0FBQ0Esd0JBQXdCLFNBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEUscUJBQXFCO0FBQ2pHLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQiwrQ0FBK0MsVUFBVSxJQUFJO0FBQzdEO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQ7QUFDakQsU0FBUztBQUNUO0FBQ0E7QUFDQSwwQ0FBMEMsUUFBUSxVQUFVO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixnQkFBZ0I7QUFDdEMsU0FBUztBQUNUO0FBQ0E7QUFDQSx3Q0FBd0MsSUFBSSxzQkFBc0I7QUFDbEUsU0FBUztBQUNUO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EscURBQXFELE9BQU8sUUFBUTtBQUNwRTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsNkJBQTZCLElBQUk7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBGQUEwRjtBQUMxRjtBQUNBLDJDQUEyQywyQkFBMkI7QUFDdEU7QUFDQSxvQ0FBb0MsZUFBZTtBQUNuRCx5QkFBeUI7QUFDekIscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msc0JBQXNCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxlQUFlO0FBQ2xEO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLFdBQVc7QUFDckMsYUFBYTtBQUNiO0FBQ0EsMEJBQTBCLFdBQVc7QUFDckMsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCLHdFQUF3RTtBQUN4RTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsNENBQTRDLFdBQVc7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix1QkFBdUI7QUFDOUMscUNBQXFDLHdCQUF3QjtBQUM3RCxpQkFBaUIsaUNBQWlDLGdCQUFnQixHQUFHO0FBQ3JFLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IseUJBQXlCLG1EQUFZO0FBQ3JDLG9CQUFvQixtREFBWTtBQUNoQyx5Q0FBeUMscURBQWM7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2Qix5QkFBeUI7QUFDekIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsZ0ZBQWdGLGNBQWM7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHVCQUF1QjtBQUN6RDtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsSUFBSSxzREFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJLHNEQUFlO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyx1QkFBdUI7QUFDbEU7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRWlKO0FBQ2pKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1ob29rLWZvcm0vZGlzdC9pbmRleC5lc20ubWpzP2E1MWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxudmFyIGlzQ2hlY2tCb3hJbnB1dCA9IChlbGVtZW50KSA9PiBlbGVtZW50LnR5cGUgPT09ICdjaGVja2JveCc7XG5cbnZhciBpc0RhdGVPYmplY3QgPSAodmFsdWUpID0+IHZhbHVlIGluc3RhbmNlb2YgRGF0ZTtcblxudmFyIGlzTnVsbE9yVW5kZWZpbmVkID0gKHZhbHVlKSA9PiB2YWx1ZSA9PSBudWxsO1xuXG5jb25zdCBpc09iamVjdFR5cGUgPSAodmFsdWUpID0+IHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCc7XG52YXIgaXNPYmplY3QgPSAodmFsdWUpID0+ICFpc051bGxPclVuZGVmaW5lZCh2YWx1ZSkgJiZcbiAgICAhQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiZcbiAgICBpc09iamVjdFR5cGUodmFsdWUpICYmXG4gICAgIWlzRGF0ZU9iamVjdCh2YWx1ZSk7XG5cbnZhciBnZXRFdmVudFZhbHVlID0gKGV2ZW50KSA9PiBpc09iamVjdChldmVudCkgJiYgZXZlbnQudGFyZ2V0XG4gICAgPyBpc0NoZWNrQm94SW5wdXQoZXZlbnQudGFyZ2V0KVxuICAgICAgICA/IGV2ZW50LnRhcmdldC5jaGVja2VkXG4gICAgICAgIDogZXZlbnQudGFyZ2V0LnZhbHVlXG4gICAgOiBldmVudDtcblxudmFyIGdldE5vZGVQYXJlbnROYW1lID0gKG5hbWUpID0+IG5hbWUuc3Vic3RyaW5nKDAsIG5hbWUuc2VhcmNoKC9cXC5cXGQrKFxcLnwkKS8pKSB8fCBuYW1lO1xuXG52YXIgaXNOYW1lSW5GaWVsZEFycmF5ID0gKG5hbWVzLCBuYW1lKSA9PiBuYW1lcy5oYXMoZ2V0Tm9kZVBhcmVudE5hbWUobmFtZSkpO1xuXG52YXIgaXNQbGFpbk9iamVjdCA9ICh0ZW1wT2JqZWN0KSA9PiB7XG4gICAgY29uc3QgcHJvdG90eXBlQ29weSA9IHRlbXBPYmplY3QuY29uc3RydWN0b3IgJiYgdGVtcE9iamVjdC5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gICAgcmV0dXJuIChpc09iamVjdChwcm90b3R5cGVDb3B5KSAmJiBwcm90b3R5cGVDb3B5Lmhhc093blByb3BlcnR5KCdpc1Byb3RvdHlwZU9mJykpO1xufTtcblxudmFyIGlzV2ViID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2Ygd2luZG93LkhUTUxFbGVtZW50ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgIHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCc7XG5cbmZ1bmN0aW9uIGNsb25lT2JqZWN0KGRhdGEpIHtcbiAgICBsZXQgY29weTtcbiAgICBjb25zdCBpc0FycmF5ID0gQXJyYXkuaXNBcnJheShkYXRhKTtcbiAgICBpZiAoZGF0YSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgY29weSA9IG5ldyBEYXRlKGRhdGEpO1xuICAgIH1cbiAgICBlbHNlIGlmIChkYXRhIGluc3RhbmNlb2YgU2V0KSB7XG4gICAgICAgIGNvcHkgPSBuZXcgU2V0KGRhdGEpO1xuICAgIH1cbiAgICBlbHNlIGlmICghKGlzV2ViICYmIChkYXRhIGluc3RhbmNlb2YgQmxvYiB8fCBkYXRhIGluc3RhbmNlb2YgRmlsZUxpc3QpKSAmJlxuICAgICAgICAoaXNBcnJheSB8fCBpc09iamVjdChkYXRhKSkpIHtcbiAgICAgICAgY29weSA9IGlzQXJyYXkgPyBbXSA6IHt9O1xuICAgICAgICBpZiAoIWlzQXJyYXkgJiYgIWlzUGxhaW5PYmplY3QoZGF0YSkpIHtcbiAgICAgICAgICAgIGNvcHkgPSBkYXRhO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29weVtrZXldID0gY2xvbmVPYmplY3QoZGF0YVtrZXldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbiAgICByZXR1cm4gY29weTtcbn1cblxudmFyIGNvbXBhY3QgPSAodmFsdWUpID0+IEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUuZmlsdGVyKEJvb2xlYW4pIDogW107XG5cbnZhciBpc1VuZGVmaW5lZCA9ICh2YWwpID0+IHZhbCA9PT0gdW5kZWZpbmVkO1xuXG52YXIgZ2V0ID0gKG9iaiwgcGF0aCwgZGVmYXVsdFZhbHVlKSA9PiB7XG4gICAgaWYgKCFwYXRoIHx8ICFpc09iamVjdChvYmopKSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IGNvbXBhY3QocGF0aC5zcGxpdCgvWyxbXFxdLl0rPy8pKS5yZWR1Y2UoKHJlc3VsdCwga2V5KSA9PiBpc051bGxPclVuZGVmaW5lZChyZXN1bHQpID8gcmVzdWx0IDogcmVzdWx0W2tleV0sIG9iaik7XG4gICAgcmV0dXJuIGlzVW5kZWZpbmVkKHJlc3VsdCkgfHwgcmVzdWx0ID09PSBvYmpcbiAgICAgICAgPyBpc1VuZGVmaW5lZChvYmpbcGF0aF0pXG4gICAgICAgICAgICA/IGRlZmF1bHRWYWx1ZVxuICAgICAgICAgICAgOiBvYmpbcGF0aF1cbiAgICAgICAgOiByZXN1bHQ7XG59O1xuXG5jb25zdCBFVkVOVFMgPSB7XG4gICAgQkxVUjogJ2JsdXInLFxuICAgIEZPQ1VTX09VVDogJ2ZvY3Vzb3V0JyxcbiAgICBDSEFOR0U6ICdjaGFuZ2UnLFxufTtcbmNvbnN0IFZBTElEQVRJT05fTU9ERSA9IHtcbiAgICBvbkJsdXI6ICdvbkJsdXInLFxuICAgIG9uQ2hhbmdlOiAnb25DaGFuZ2UnLFxuICAgIG9uU3VibWl0OiAnb25TdWJtaXQnLFxuICAgIG9uVG91Y2hlZDogJ29uVG91Y2hlZCcsXG4gICAgYWxsOiAnYWxsJyxcbn07XG5jb25zdCBJTlBVVF9WQUxJREFUSU9OX1JVTEVTID0ge1xuICAgIG1heDogJ21heCcsXG4gICAgbWluOiAnbWluJyxcbiAgICBtYXhMZW5ndGg6ICdtYXhMZW5ndGgnLFxuICAgIG1pbkxlbmd0aDogJ21pbkxlbmd0aCcsXG4gICAgcGF0dGVybjogJ3BhdHRlcm4nLFxuICAgIHJlcXVpcmVkOiAncmVxdWlyZWQnLFxuICAgIHZhbGlkYXRlOiAndmFsaWRhdGUnLFxufTtcblxuY29uc3QgSG9va0Zvcm1Db250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbi8qKlxuICogVGhpcyBjdXN0b20gaG9vayBhbGxvd3MgeW91IHRvIGFjY2VzcyB0aGUgZm9ybSBjb250ZXh0LiB1c2VGb3JtQ29udGV4dCBpcyBpbnRlbmRlZCB0byBiZSB1c2VkIGluIGRlZXBseSBuZXN0ZWQgc3RydWN0dXJlcywgd2hlcmUgaXQgd291bGQgYmVjb21lIGluY29udmVuaWVudCB0byBwYXNzIHRoZSBjb250ZXh0IGFzIGEgcHJvcC4gVG8gYmUgdXNlZCB3aXRoIHtAbGluayBGb3JtUHJvdmlkZXJ9LlxuICpcbiAqIEByZW1hcmtzXG4gKiBbQVBJXShodHRwczovL3JlYWN0LWhvb2stZm9ybS5jb20vZG9jcy91c2Vmb3JtY29udGV4dCkg4oCiIFtEZW1vXShodHRwczovL2NvZGVzYW5kYm94LmlvL3MvcmVhY3QtaG9vay1mb3JtLXY3LWZvcm0tY29udGV4dC15dHVkaSlcbiAqXG4gKiBAcmV0dXJucyByZXR1cm4gYWxsIHVzZUZvcm0gbWV0aG9kc1xuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c3hcbiAqIGZ1bmN0aW9uIEFwcCgpIHtcbiAqICAgY29uc3QgbWV0aG9kcyA9IHVzZUZvcm0oKTtcbiAqICAgY29uc3Qgb25TdWJtaXQgPSBkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpO1xuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8Rm9ybVByb3ZpZGVyIHsuLi5tZXRob2RzfSA+XG4gKiAgICAgICA8Zm9ybSBvblN1Ym1pdD17bWV0aG9kcy5oYW5kbGVTdWJtaXQob25TdWJtaXQpfT5cbiAqICAgICAgICAgPE5lc3RlZElucHV0IC8+XG4gKiAgICAgICAgIDxpbnB1dCB0eXBlPVwic3VibWl0XCIgLz5cbiAqICAgICAgIDwvZm9ybT5cbiAqICAgICA8L0Zvcm1Qcm92aWRlcj5cbiAqICAgKTtcbiAqIH1cbiAqXG4gKiAgZnVuY3Rpb24gTmVzdGVkSW5wdXQoKSB7XG4gKiAgIGNvbnN0IHsgcmVnaXN0ZXIgfSA9IHVzZUZvcm1Db250ZXh0KCk7IC8vIHJldHJpZXZlIGFsbCBob29rIG1ldGhvZHNcbiAqICAgcmV0dXJuIDxpbnB1dCB7Li4ucmVnaXN0ZXIoXCJ0ZXN0XCIpfSAvPjtcbiAqIH1cbiAqIGBgYFxuICovXG5jb25zdCB1c2VGb3JtQ29udGV4dCA9ICgpID0+IFJlYWN0LnVzZUNvbnRleHQoSG9va0Zvcm1Db250ZXh0KTtcbi8qKlxuICogQSBwcm92aWRlciBjb21wb25lbnQgdGhhdCBwcm9wYWdhdGVzIHRoZSBgdXNlRm9ybWAgbWV0aG9kcyB0byBhbGwgY2hpbGRyZW4gY29tcG9uZW50cyB2aWEgW1JlYWN0IENvbnRleHRdKGh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9jb250ZXh0Lmh0bWwpIEFQSS4gVG8gYmUgdXNlZCB3aXRoIHtAbGluayB1c2VGb3JtQ29udGV4dH0uXG4gKlxuICogQHJlbWFya3NcbiAqIFtBUEldKGh0dHBzOi8vcmVhY3QtaG9vay1mb3JtLmNvbS9kb2NzL3VzZWZvcm1jb250ZXh0KSDigKIgW0RlbW9dKGh0dHBzOi8vY29kZXNhbmRib3guaW8vcy9yZWFjdC1ob29rLWZvcm0tdjctZm9ybS1jb250ZXh0LXl0dWRpKVxuICpcbiAqIEBwYXJhbSBwcm9wcyAtIGFsbCB1c2VGcm9tIG1ldGhvZHNcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHN4XG4gKiBmdW5jdGlvbiBBcHAoKSB7XG4gKiAgIGNvbnN0IG1ldGhvZHMgPSB1c2VGb3JtKCk7XG4gKiAgIGNvbnN0IG9uU3VibWl0ID0gZGF0YSA9PiBjb25zb2xlLmxvZyhkYXRhKTtcbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPEZvcm1Qcm92aWRlciB7Li4ubWV0aG9kc30gPlxuICogICAgICAgPGZvcm0gb25TdWJtaXQ9e21ldGhvZHMuaGFuZGxlU3VibWl0KG9uU3VibWl0KX0+XG4gKiAgICAgICAgIDxOZXN0ZWRJbnB1dCAvPlxuICogICAgICAgICA8aW5wdXQgdHlwZT1cInN1Ym1pdFwiIC8+XG4gKiAgICAgICA8L2Zvcm0+XG4gKiAgICAgPC9Gb3JtUHJvdmlkZXI+XG4gKiAgICk7XG4gKiB9XG4gKlxuICogIGZ1bmN0aW9uIE5lc3RlZElucHV0KCkge1xuICogICBjb25zdCB7IHJlZ2lzdGVyIH0gPSB1c2VGb3JtQ29udGV4dCgpOyAvLyByZXRyaWV2ZSBhbGwgaG9vayBtZXRob2RzXG4gKiAgIHJldHVybiA8aW5wdXQgey4uLnJlZ2lzdGVyKFwidGVzdFwiKX0gLz47XG4gKiB9XG4gKiBgYGBcbiAqL1xuY29uc3QgRm9ybVByb3ZpZGVyID0gKHByb3BzKSA9PiB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgLi4uZGF0YSB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KEhvb2tGb3JtQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZTogZGF0YSB9LCBjaGlsZHJlbikpO1xufTtcblxudmFyIGdldFByb3h5Rm9ybVN0YXRlID0gKGZvcm1TdGF0ZSwgY29udHJvbCwgbG9jYWxQcm94eUZvcm1TdGF0ZSwgaXNSb290ID0gdHJ1ZSkgPT4ge1xuICAgIGNvbnN0IHJlc3VsdCA9IHtcbiAgICAgICAgZGVmYXVsdFZhbHVlczogY29udHJvbC5fZGVmYXVsdFZhbHVlcyxcbiAgICB9O1xuICAgIGZvciAoY29uc3Qga2V5IGluIGZvcm1TdGF0ZSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocmVzdWx0LCBrZXksIHtcbiAgICAgICAgICAgIGdldDogKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IF9rZXkgPSBrZXk7XG4gICAgICAgICAgICAgICAgaWYgKGNvbnRyb2wuX3Byb3h5Rm9ybVN0YXRlW19rZXldICE9PSBWQUxJREFUSU9OX01PREUuYWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2wuX3Byb3h5Rm9ybVN0YXRlW19rZXldID0gIWlzUm9vdCB8fCBWQUxJREFUSU9OX01PREUuYWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsb2NhbFByb3h5Rm9ybVN0YXRlICYmIChsb2NhbFByb3h5Rm9ybVN0YXRlW19rZXldID0gdHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1TdGF0ZVtfa2V5XTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcblxudmFyIGlzRW1wdHlPYmplY3QgPSAodmFsdWUpID0+IGlzT2JqZWN0KHZhbHVlKSAmJiAhT2JqZWN0LmtleXModmFsdWUpLmxlbmd0aDtcblxudmFyIHNob3VsZFJlbmRlckZvcm1TdGF0ZSA9IChmb3JtU3RhdGVEYXRhLCBfcHJveHlGb3JtU3RhdGUsIHVwZGF0ZUZvcm1TdGF0ZSwgaXNSb290KSA9PiB7XG4gICAgdXBkYXRlRm9ybVN0YXRlKGZvcm1TdGF0ZURhdGEpO1xuICAgIGNvbnN0IHsgbmFtZSwgLi4uZm9ybVN0YXRlIH0gPSBmb3JtU3RhdGVEYXRhO1xuICAgIHJldHVybiAoaXNFbXB0eU9iamVjdChmb3JtU3RhdGUpIHx8XG4gICAgICAgIE9iamVjdC5rZXlzKGZvcm1TdGF0ZSkubGVuZ3RoID49IE9iamVjdC5rZXlzKF9wcm94eUZvcm1TdGF0ZSkubGVuZ3RoIHx8XG4gICAgICAgIE9iamVjdC5rZXlzKGZvcm1TdGF0ZSkuZmluZCgoa2V5KSA9PiBfcHJveHlGb3JtU3RhdGVba2V5XSA9PT1cbiAgICAgICAgICAgICghaXNSb290IHx8IFZBTElEQVRJT05fTU9ERS5hbGwpKSk7XG59O1xuXG52YXIgY29udmVydFRvQXJyYXlQYXlsb2FkID0gKHZhbHVlKSA9PiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZSA6IFt2YWx1ZV0pO1xuXG52YXIgc2hvdWxkU3Vic2NyaWJlQnlOYW1lID0gKG5hbWUsIHNpZ25hbE5hbWUsIGV4YWN0KSA9PiBleGFjdCAmJiBzaWduYWxOYW1lXG4gICAgPyBuYW1lID09PSBzaWduYWxOYW1lXG4gICAgOiAhbmFtZSB8fFxuICAgICAgICAhc2lnbmFsTmFtZSB8fFxuICAgICAgICBuYW1lID09PSBzaWduYWxOYW1lIHx8XG4gICAgICAgIGNvbnZlcnRUb0FycmF5UGF5bG9hZChuYW1lKS5zb21lKChjdXJyZW50TmFtZSkgPT4gY3VycmVudE5hbWUgJiZcbiAgICAgICAgICAgIChjdXJyZW50TmFtZS5zdGFydHNXaXRoKHNpZ25hbE5hbWUpIHx8XG4gICAgICAgICAgICAgICAgc2lnbmFsTmFtZS5zdGFydHNXaXRoKGN1cnJlbnROYW1lKSkpO1xuXG5mdW5jdGlvbiB1c2VTdWJzY3JpYmUocHJvcHMpIHtcbiAgICBjb25zdCBfcHJvcHMgPSBSZWFjdC51c2VSZWYocHJvcHMpO1xuICAgIF9wcm9wcy5jdXJyZW50ID0gcHJvcHM7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gIXByb3BzLmRpc2FibGVkICYmXG4gICAgICAgICAgICBfcHJvcHMuY3VycmVudC5zdWJqZWN0ICYmXG4gICAgICAgICAgICBfcHJvcHMuY3VycmVudC5zdWJqZWN0LnN1YnNjcmliZSh7XG4gICAgICAgICAgICAgICAgbmV4dDogX3Byb3BzLmN1cnJlbnQubmV4dCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaXB0aW9uICYmIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9O1xuICAgIH0sIFtwcm9wcy5kaXNhYmxlZF0pO1xufVxuXG4vKipcbiAqIFRoaXMgY3VzdG9tIGhvb2sgYWxsb3dzIHlvdSB0byBzdWJzY3JpYmUgdG8gZWFjaCBmb3JtIHN0YXRlLCBhbmQgaXNvbGF0ZSB0aGUgcmUtcmVuZGVyIGF0IHRoZSBjdXN0b20gaG9vayBsZXZlbC4gSXQgaGFzIGl0cyBzY29wZSBpbiB0ZXJtcyBvZiBmb3JtIHN0YXRlIHN1YnNjcmlwdGlvbiwgc28gaXQgd291bGQgbm90IGFmZmVjdCBvdGhlciB1c2VGb3JtU3RhdGUgYW5kIHVzZUZvcm0uIFVzaW5nIHRoaXMgaG9vayBjYW4gcmVkdWNlIHRoZSByZS1yZW5kZXIgaW1wYWN0IG9uIGxhcmdlIGFuZCBjb21wbGV4IGZvcm0gYXBwbGljYXRpb24uXG4gKlxuICogQHJlbWFya3NcbiAqIFtBUEldKGh0dHBzOi8vcmVhY3QtaG9vay1mb3JtLmNvbS9kb2NzL3VzZWZvcm1zdGF0ZSkg4oCiIFtEZW1vXShodHRwczovL2NvZGVzYW5kYm94LmlvL3MvdXNlZm9ybXN0YXRlLTc1eGx5KVxuICpcbiAqIEBwYXJhbSBwcm9wcyAtIGluY2x1ZGUgb3B0aW9ucyBvbiBzcGVjaWZ5IGZpZWxkcyB0byBzdWJzY3JpYmUuIHtAbGluayBVc2VGb3JtU3RhdGVSZXR1cm59XG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzeFxuICogZnVuY3Rpb24gQXBwKCkge1xuICogICBjb25zdCB7IHJlZ2lzdGVyLCBoYW5kbGVTdWJtaXQsIGNvbnRyb2wgfSA9IHVzZUZvcm0oe1xuICogICAgIGRlZmF1bHRWYWx1ZXM6IHtcbiAqICAgICBmaXJzdE5hbWU6IFwiZmlyc3ROYW1lXCJcbiAqICAgfX0pO1xuICogICBjb25zdCB7IGRpcnR5RmllbGRzIH0gPSB1c2VGb3JtU3RhdGUoe1xuICogICAgIGNvbnRyb2xcbiAqICAgfSk7XG4gKiAgIGNvbnN0IG9uU3VibWl0ID0gKGRhdGEpID0+IGNvbnNvbGUubG9nKGRhdGEpO1xuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8Zm9ybSBvblN1Ym1pdD17aGFuZGxlU3VibWl0KG9uU3VibWl0KX0+XG4gKiAgICAgICA8aW5wdXQgey4uLnJlZ2lzdGVyKFwiZmlyc3ROYW1lXCIpfSBwbGFjZWhvbGRlcj1cIkZpcnN0IE5hbWVcIiAvPlxuICogICAgICAge2RpcnR5RmllbGRzLmZpcnN0TmFtZSAmJiA8cD5GaWVsZCBpcyBkaXJ0eS48L3A+fVxuICogICAgICAgPGlucHV0IHR5cGU9XCJzdWJtaXRcIiAvPlxuICogICAgIDwvZm9ybT5cbiAqICAgKTtcbiAqIH1cbiAqIGBgYFxuICovXG5mdW5jdGlvbiB1c2VGb3JtU3RhdGUocHJvcHMpIHtcbiAgICBjb25zdCBtZXRob2RzID0gdXNlRm9ybUNvbnRleHQoKTtcbiAgICBjb25zdCB7IGNvbnRyb2wgPSBtZXRob2RzLmNvbnRyb2wsIGRpc2FibGVkLCBuYW1lLCBleGFjdCB9ID0gcHJvcHMgfHwge307XG4gICAgY29uc3QgW2Zvcm1TdGF0ZSwgdXBkYXRlRm9ybVN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKGNvbnRyb2wuX2Zvcm1TdGF0ZSk7XG4gICAgY29uc3QgX21vdW50ZWQgPSBSZWFjdC51c2VSZWYodHJ1ZSk7XG4gICAgY29uc3QgX2xvY2FsUHJveHlGb3JtU3RhdGUgPSBSZWFjdC51c2VSZWYoe1xuICAgICAgICBpc0RpcnR5OiBmYWxzZSxcbiAgICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgZGlydHlGaWVsZHM6IGZhbHNlLFxuICAgICAgICB0b3VjaGVkRmllbGRzOiBmYWxzZSxcbiAgICAgICAgaXNWYWxpZGF0aW5nOiBmYWxzZSxcbiAgICAgICAgaXNWYWxpZDogZmFsc2UsXG4gICAgICAgIGVycm9yczogZmFsc2UsXG4gICAgfSk7XG4gICAgY29uc3QgX25hbWUgPSBSZWFjdC51c2VSZWYobmFtZSk7XG4gICAgX25hbWUuY3VycmVudCA9IG5hbWU7XG4gICAgdXNlU3Vic2NyaWJlKHtcbiAgICAgICAgZGlzYWJsZWQsXG4gICAgICAgIG5leHQ6ICh2YWx1ZSkgPT4gX21vdW50ZWQuY3VycmVudCAmJlxuICAgICAgICAgICAgc2hvdWxkU3Vic2NyaWJlQnlOYW1lKF9uYW1lLmN1cnJlbnQsIHZhbHVlLm5hbWUsIGV4YWN0KSAmJlxuICAgICAgICAgICAgc2hvdWxkUmVuZGVyRm9ybVN0YXRlKHZhbHVlLCBfbG9jYWxQcm94eUZvcm1TdGF0ZS5jdXJyZW50LCBjb250cm9sLl91cGRhdGVGb3JtU3RhdGUpICYmXG4gICAgICAgICAgICB1cGRhdGVGb3JtU3RhdGUoe1xuICAgICAgICAgICAgICAgIC4uLmNvbnRyb2wuX2Zvcm1TdGF0ZSxcbiAgICAgICAgICAgICAgICAuLi52YWx1ZSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICBzdWJqZWN0OiBjb250cm9sLl9zdWJqZWN0cy5zdGF0ZSxcbiAgICB9KTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBfbW91bnRlZC5jdXJyZW50ID0gdHJ1ZTtcbiAgICAgICAgX2xvY2FsUHJveHlGb3JtU3RhdGUuY3VycmVudC5pc1ZhbGlkICYmIGNvbnRyb2wuX3VwZGF0ZVZhbGlkKHRydWUpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgX21vdW50ZWQuY3VycmVudCA9IGZhbHNlO1xuICAgICAgICB9O1xuICAgIH0sIFtjb250cm9sXSk7XG4gICAgcmV0dXJuIGdldFByb3h5Rm9ybVN0YXRlKGZvcm1TdGF0ZSwgY29udHJvbCwgX2xvY2FsUHJveHlGb3JtU3RhdGUuY3VycmVudCwgZmFsc2UpO1xufVxuXG52YXIgaXNTdHJpbmcgPSAodmFsdWUpID0+IHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZyc7XG5cbnZhciBnZW5lcmF0ZVdhdGNoT3V0cHV0ID0gKG5hbWVzLCBfbmFtZXMsIGZvcm1WYWx1ZXMsIGlzR2xvYmFsLCBkZWZhdWx0VmFsdWUpID0+IHtcbiAgICBpZiAoaXNTdHJpbmcobmFtZXMpKSB7XG4gICAgICAgIGlzR2xvYmFsICYmIF9uYW1lcy53YXRjaC5hZGQobmFtZXMpO1xuICAgICAgICByZXR1cm4gZ2V0KGZvcm1WYWx1ZXMsIG5hbWVzLCBkZWZhdWx0VmFsdWUpO1xuICAgIH1cbiAgICBpZiAoQXJyYXkuaXNBcnJheShuYW1lcykpIHtcbiAgICAgICAgcmV0dXJuIG5hbWVzLm1hcCgoZmllbGROYW1lKSA9PiAoaXNHbG9iYWwgJiYgX25hbWVzLndhdGNoLmFkZChmaWVsZE5hbWUpLCBnZXQoZm9ybVZhbHVlcywgZmllbGROYW1lKSkpO1xuICAgIH1cbiAgICBpc0dsb2JhbCAmJiAoX25hbWVzLndhdGNoQWxsID0gdHJ1ZSk7XG4gICAgcmV0dXJuIGZvcm1WYWx1ZXM7XG59O1xuXG4vKipcbiAqIEN1c3RvbSBob29rIHRvIHN1YnNjcmliZSB0byBmaWVsZCBjaGFuZ2UgYW5kIGlzb2xhdGUgcmUtcmVuZGVyaW5nIGF0IHRoZSBjb21wb25lbnQgbGV2ZWwuXG4gKlxuICogQHJlbWFya3NcbiAqXG4gKiBbQVBJXShodHRwczovL3JlYWN0LWhvb2stZm9ybS5jb20vZG9jcy91c2V3YXRjaCkg4oCiIFtEZW1vXShodHRwczovL2NvZGVzYW5kYm94LmlvL3MvcmVhY3QtaG9vay1mb3JtLXY3LXRzLXVzZXdhdGNoLWg5aTVlKVxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c3hcbiAqIGNvbnN0IHsgd2F0Y2ggfSA9IHVzZUZvcm0oKTtcbiAqIGNvbnN0IHZhbHVlcyA9IHVzZVdhdGNoKHtcbiAqICAgbmFtZTogXCJmaWVsZE5hbWVcIlxuICogICBjb250cm9sLFxuICogfSlcbiAqIGBgYFxuICovXG5mdW5jdGlvbiB1c2VXYXRjaChwcm9wcykge1xuICAgIGNvbnN0IG1ldGhvZHMgPSB1c2VGb3JtQ29udGV4dCgpO1xuICAgIGNvbnN0IHsgY29udHJvbCA9IG1ldGhvZHMuY29udHJvbCwgbmFtZSwgZGVmYXVsdFZhbHVlLCBkaXNhYmxlZCwgZXhhY3QsIH0gPSBwcm9wcyB8fCB7fTtcbiAgICBjb25zdCBfbmFtZSA9IFJlYWN0LnVzZVJlZihuYW1lKTtcbiAgICBfbmFtZS5jdXJyZW50ID0gbmFtZTtcbiAgICB1c2VTdWJzY3JpYmUoe1xuICAgICAgICBkaXNhYmxlZCxcbiAgICAgICAgc3ViamVjdDogY29udHJvbC5fc3ViamVjdHMudmFsdWVzLFxuICAgICAgICBuZXh0OiAoZm9ybVN0YXRlKSA9PiB7XG4gICAgICAgICAgICBpZiAoc2hvdWxkU3Vic2NyaWJlQnlOYW1lKF9uYW1lLmN1cnJlbnQsIGZvcm1TdGF0ZS5uYW1lLCBleGFjdCkpIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVWYWx1ZShjbG9uZU9iamVjdChnZW5lcmF0ZVdhdGNoT3V0cHV0KF9uYW1lLmN1cnJlbnQsIGNvbnRyb2wuX25hbWVzLCBmb3JtU3RhdGUudmFsdWVzIHx8IGNvbnRyb2wuX2Zvcm1WYWx1ZXMsIGZhbHNlLCBkZWZhdWx0VmFsdWUpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgY29uc3QgW3ZhbHVlLCB1cGRhdGVWYWx1ZV0gPSBSZWFjdC51c2VTdGF0ZShjb250cm9sLl9nZXRXYXRjaChuYW1lLCBkZWZhdWx0VmFsdWUpKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4gY29udHJvbC5fcmVtb3ZlVW5tb3VudGVkKCkpO1xuICAgIHJldHVybiB2YWx1ZTtcbn1cblxudmFyIGlzS2V5ID0gKHZhbHVlKSA9PiAvXlxcdyokLy50ZXN0KHZhbHVlKTtcblxudmFyIHN0cmluZ1RvUGF0aCA9IChpbnB1dCkgPT4gY29tcGFjdChpbnB1dC5yZXBsYWNlKC9bXCJ8J118XFxdL2csICcnKS5zcGxpdCgvXFwufFxcWy8pKTtcblxuZnVuY3Rpb24gc2V0KG9iamVjdCwgcGF0aCwgdmFsdWUpIHtcbiAgICBsZXQgaW5kZXggPSAtMTtcbiAgICBjb25zdCB0ZW1wUGF0aCA9IGlzS2V5KHBhdGgpID8gW3BhdGhdIDogc3RyaW5nVG9QYXRoKHBhdGgpO1xuICAgIGNvbnN0IGxlbmd0aCA9IHRlbXBQYXRoLmxlbmd0aDtcbiAgICBjb25zdCBsYXN0SW5kZXggPSBsZW5ndGggLSAxO1xuICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IHRlbXBQYXRoW2luZGV4XTtcbiAgICAgICAgbGV0IG5ld1ZhbHVlID0gdmFsdWU7XG4gICAgICAgIGlmIChpbmRleCAhPT0gbGFzdEluZGV4KSB7XG4gICAgICAgICAgICBjb25zdCBvYmpWYWx1ZSA9IG9iamVjdFtrZXldO1xuICAgICAgICAgICAgbmV3VmFsdWUgPVxuICAgICAgICAgICAgICAgIGlzT2JqZWN0KG9ialZhbHVlKSB8fCBBcnJheS5pc0FycmF5KG9ialZhbHVlKVxuICAgICAgICAgICAgICAgICAgICA/IG9ialZhbHVlXG4gICAgICAgICAgICAgICAgICAgIDogIWlzTmFOKCt0ZW1wUGF0aFtpbmRleCArIDFdKVxuICAgICAgICAgICAgICAgICAgICAgICAgPyBbXVxuICAgICAgICAgICAgICAgICAgICAgICAgOiB7fTtcbiAgICAgICAgfVxuICAgICAgICBvYmplY3Rba2V5XSA9IG5ld1ZhbHVlO1xuICAgICAgICBvYmplY3QgPSBvYmplY3Rba2V5XTtcbiAgICB9XG4gICAgcmV0dXJuIG9iamVjdDtcbn1cblxuLyoqXG4gKiBDdXN0b20gaG9vayB0byB3b3JrIHdpdGggY29udHJvbGxlZCBjb21wb25lbnQsIHRoaXMgZnVuY3Rpb24gcHJvdmlkZSB5b3Ugd2l0aCBib3RoIGZvcm0gYW5kIGZpZWxkIGxldmVsIHN0YXRlLiBSZS1yZW5kZXIgaXMgaXNvbGF0ZWQgYXQgdGhlIGhvb2sgbGV2ZWwuXG4gKlxuICogQHJlbWFya3NcbiAqIFtBUEldKGh0dHBzOi8vcmVhY3QtaG9vay1mb3JtLmNvbS9kb2NzL3VzZWNvbnRyb2xsZXIpIOKAoiBbRGVtb10oaHR0cHM6Ly9jb2Rlc2FuZGJveC5pby9zL3VzZWNvbnRyb2xsZXItMG84cHgpXG4gKlxuICogQHBhcmFtIHByb3BzIC0gdGhlIHBhdGggbmFtZSB0byB0aGUgZm9ybSBmaWVsZCB2YWx1ZSwgYW5kIHZhbGlkYXRpb24gcnVsZXMuXG4gKlxuICogQHJldHVybnMgZmllbGQgcHJvcGVydGllcywgZmllbGQgYW5kIGZvcm0gc3RhdGUuIHtAbGluayBVc2VDb250cm9sbGVyUmV0dXJufVxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c3hcbiAqIGZ1bmN0aW9uIElucHV0KHByb3BzKSB7XG4gKiAgIGNvbnN0IHsgZmllbGQsIGZpZWxkU3RhdGUsIGZvcm1TdGF0ZSB9ID0gdXNlQ29udHJvbGxlcihwcm9wcyk7XG4gKiAgIHJldHVybiAoXG4gKiAgICAgPGRpdj5cbiAqICAgICAgIDxpbnB1dCB7Li4uZmllbGR9IHBsYWNlaG9sZGVyPXtwcm9wcy5uYW1lfSAvPlxuICogICAgICAgPHA+e2ZpZWxkU3RhdGUuaXNUb3VjaGVkICYmIFwiVG91Y2hlZFwifTwvcD5cbiAqICAgICAgIDxwPntmb3JtU3RhdGUuaXNTdWJtaXR0ZWQgPyBcInN1Ym1pdHRlZFwiIDogXCJcIn08L3A+XG4gKiAgICAgPC9kaXY+XG4gKiAgICk7XG4gKiB9XG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gdXNlQ29udHJvbGxlcihwcm9wcykge1xuICAgIGNvbnN0IG1ldGhvZHMgPSB1c2VGb3JtQ29udGV4dCgpO1xuICAgIGNvbnN0IHsgbmFtZSwgY29udHJvbCA9IG1ldGhvZHMuY29udHJvbCwgc2hvdWxkVW5yZWdpc3RlciB9ID0gcHJvcHM7XG4gICAgY29uc3QgaXNBcnJheUZpZWxkID0gaXNOYW1lSW5GaWVsZEFycmF5KGNvbnRyb2wuX25hbWVzLmFycmF5LCBuYW1lKTtcbiAgICBjb25zdCB2YWx1ZSA9IHVzZVdhdGNoKHtcbiAgICAgICAgY29udHJvbCxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBnZXQoY29udHJvbC5fZm9ybVZhbHVlcywgbmFtZSwgZ2V0KGNvbnRyb2wuX2RlZmF1bHRWYWx1ZXMsIG5hbWUsIHByb3BzLmRlZmF1bHRWYWx1ZSkpLFxuICAgICAgICBleGFjdDogdHJ1ZSxcbiAgICB9KTtcbiAgICBjb25zdCBmb3JtU3RhdGUgPSB1c2VGb3JtU3RhdGUoe1xuICAgICAgICBjb250cm9sLFxuICAgICAgICBuYW1lLFxuICAgIH0pO1xuICAgIGNvbnN0IF9yZWdpc3RlclByb3BzID0gUmVhY3QudXNlUmVmKGNvbnRyb2wucmVnaXN0ZXIobmFtZSwge1xuICAgICAgICAuLi5wcm9wcy5ydWxlcyxcbiAgICAgICAgdmFsdWUsXG4gICAgfSkpO1xuICAgIF9yZWdpc3RlclByb3BzLmN1cnJlbnQgPSBjb250cm9sLnJlZ2lzdGVyKG5hbWUsIHByb3BzLnJ1bGVzKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCBfc2hvdWxkVW5yZWdpc3RlckZpZWxkID0gY29udHJvbC5fb3B0aW9ucy5zaG91bGRVbnJlZ2lzdGVyIHx8IHNob3VsZFVucmVnaXN0ZXI7XG4gICAgICAgIGNvbnN0IHVwZGF0ZU1vdW50ZWQgPSAobmFtZSwgdmFsdWUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZ2V0KGNvbnRyb2wuX2ZpZWxkcywgbmFtZSk7XG4gICAgICAgICAgICBpZiAoZmllbGQpIHtcbiAgICAgICAgICAgICAgICBmaWVsZC5fZi5tb3VudCA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB1cGRhdGVNb3VudGVkKG5hbWUsIHRydWUpO1xuICAgICAgICBpZiAoX3Nob3VsZFVucmVnaXN0ZXJGaWVsZCkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBjbG9uZU9iamVjdChnZXQoY29udHJvbC5fb3B0aW9ucy5kZWZhdWx0VmFsdWVzLCBuYW1lKSk7XG4gICAgICAgICAgICBzZXQoY29udHJvbC5fZGVmYXVsdFZhbHVlcywgbmFtZSwgdmFsdWUpO1xuICAgICAgICAgICAgaWYgKGlzVW5kZWZpbmVkKGdldChjb250cm9sLl9mb3JtVmFsdWVzLCBuYW1lKSkpIHtcbiAgICAgICAgICAgICAgICBzZXQoY29udHJvbC5fZm9ybVZhbHVlcywgbmFtZSwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICAoaXNBcnJheUZpZWxkXG4gICAgICAgICAgICAgICAgPyBfc2hvdWxkVW5yZWdpc3RlckZpZWxkICYmICFjb250cm9sLl9zdGF0ZS5hY3Rpb25cbiAgICAgICAgICAgICAgICA6IF9zaG91bGRVbnJlZ2lzdGVyRmllbGQpXG4gICAgICAgICAgICAgICAgPyBjb250cm9sLnVucmVnaXN0ZXIobmFtZSlcbiAgICAgICAgICAgICAgICA6IHVwZGF0ZU1vdW50ZWQobmFtZSwgZmFsc2UpO1xuICAgICAgICB9O1xuICAgIH0sIFtuYW1lLCBjb250cm9sLCBpc0FycmF5RmllbGQsIHNob3VsZFVucmVnaXN0ZXJdKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBmaWVsZDoge1xuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgICAgb25DaGFuZ2U6IFJlYWN0LnVzZUNhbGxiYWNrKChldmVudCkgPT4gX3JlZ2lzdGVyUHJvcHMuY3VycmVudC5vbkNoYW5nZSh7XG4gICAgICAgICAgICAgICAgdGFyZ2V0OiB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBnZXRFdmVudFZhbHVlKGV2ZW50KSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHR5cGU6IEVWRU5UUy5DSEFOR0UsXG4gICAgICAgICAgICB9KSwgW25hbWVdKSxcbiAgICAgICAgICAgIG9uQmx1cjogUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4gX3JlZ2lzdGVyUHJvcHMuY3VycmVudC5vbkJsdXIoe1xuICAgICAgICAgICAgICAgIHRhcmdldDoge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZ2V0KGNvbnRyb2wuX2Zvcm1WYWx1ZXMsIG5hbWUpLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdHlwZTogRVZFTlRTLkJMVVIsXG4gICAgICAgICAgICB9KSwgW25hbWUsIGNvbnRyb2xdKSxcbiAgICAgICAgICAgIHJlZjogKGVsbSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZ2V0KGNvbnRyb2wuX2ZpZWxkcywgbmFtZSk7XG4gICAgICAgICAgICAgICAgaWYgKGZpZWxkICYmIGVsbSkge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZC5fZi5yZWYgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb2N1czogKCkgPT4gZWxtLmZvY3VzKCksXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Q6ICgpID0+IGVsbS5zZWxlY3QoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEN1c3RvbVZhbGlkaXR5OiAobWVzc2FnZSkgPT4gZWxtLnNldEN1c3RvbVZhbGlkaXR5KG1lc3NhZ2UpLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVwb3J0VmFsaWRpdHk6ICgpID0+IGVsbS5yZXBvcnRWYWxpZGl0eSgpLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIGZvcm1TdGF0ZSxcbiAgICAgICAgZmllbGRTdGF0ZTogT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoe30sIHtcbiAgICAgICAgICAgIGludmFsaWQ6IHtcbiAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIGdldDogKCkgPT4gISFnZXQoZm9ybVN0YXRlLmVycm9ycywgbmFtZSksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaXNEaXJ0eToge1xuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgZ2V0OiAoKSA9PiAhIWdldChmb3JtU3RhdGUuZGlydHlGaWVsZHMsIG5hbWUpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlzVG91Y2hlZDoge1xuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgZ2V0OiAoKSA9PiAhIWdldChmb3JtU3RhdGUudG91Y2hlZEZpZWxkcywgbmFtZSksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIGdldDogKCkgPT4gZ2V0KGZvcm1TdGF0ZS5lcnJvcnMsIG5hbWUpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSksXG4gICAgfTtcbn1cblxuLyoqXG4gKiBDb21wb25lbnQgYmFzZWQgb24gYHVzZUNvbnRyb2xsZXJgIGhvb2sgdG8gd29yayB3aXRoIGNvbnRyb2xsZWQgY29tcG9uZW50LlxuICpcbiAqIEByZW1hcmtzXG4gKiBbQVBJXShodHRwczovL3JlYWN0LWhvb2stZm9ybS5jb20vZG9jcy91c2Vjb250cm9sbGVyL2NvbnRyb2xsZXIpIOKAoiBbRGVtb10oaHR0cHM6Ly9jb2Rlc2FuZGJveC5pby9zL3JlYWN0LWhvb2stZm9ybS12Ni1jb250cm9sbGVyLXRzLWp3eXp3KSDigKIgW1ZpZGVvXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PU4yVU5rX1VDVnlBKVxuICpcbiAqIEBwYXJhbSBwcm9wcyAtIHRoZSBwYXRoIG5hbWUgdG8gdGhlIGZvcm0gZmllbGQgdmFsdWUsIGFuZCB2YWxpZGF0aW9uIHJ1bGVzLlxuICpcbiAqIEByZXR1cm5zIHByb3ZpZGUgZmllbGQgaGFuZGxlciBmdW5jdGlvbnMsIGZpZWxkIGFuZCBmb3JtIHN0YXRlLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c3hcbiAqIGZ1bmN0aW9uIEFwcCgpIHtcbiAqICAgY29uc3QgeyBjb250cm9sIH0gPSB1c2VGb3JtPEZvcm1WYWx1ZXM+KHtcbiAqICAgICBkZWZhdWx0VmFsdWVzOiB7XG4gKiAgICAgICB0ZXN0OiBcIlwiXG4gKiAgICAgfVxuICogICB9KTtcbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPGZvcm0+XG4gKiAgICAgICA8Q29udHJvbGxlclxuICogICAgICAgICBjb250cm9sPXtjb250cm9sfVxuICogICAgICAgICBuYW1lPVwidGVzdFwiXG4gKiAgICAgICAgIHJlbmRlcj17KHsgZmllbGQ6IHsgb25DaGFuZ2UsIG9uQmx1ciwgdmFsdWUsIHJlZiB9LCBmb3JtU3RhdGUsIGZpZWxkU3RhdGUgfSkgPT4gKFxuICogICAgICAgICAgIDw+XG4gKiAgICAgICAgICAgICA8aW5wdXRcbiAqICAgICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfSAvLyBzZW5kIHZhbHVlIHRvIGhvb2sgZm9ybVxuICogICAgICAgICAgICAgICBvbkJsdXI9e29uQmx1cn0gLy8gbm90aWZ5IHdoZW4gaW5wdXQgaXMgdG91Y2hlZFxuICogICAgICAgICAgICAgICB2YWx1ZT17dmFsdWV9IC8vIHJldHVybiB1cGRhdGVkIHZhbHVlXG4gKiAgICAgICAgICAgICAgIHJlZj17cmVmfSAvLyBzZXQgcmVmIGZvciBmb2N1cyBtYW5hZ2VtZW50XG4gKiAgICAgICAgICAgICAvPlxuICogICAgICAgICAgICAgPHA+e2Zvcm1TdGF0ZS5pc1N1Ym1pdHRlZCA/IFwic3VibWl0dGVkXCIgOiBcIlwifTwvcD5cbiAqICAgICAgICAgICAgIDxwPntmaWVsZFN0YXRlLmlzVG91Y2hlZCA/IFwidG91Y2hlZFwiIDogXCJcIn08L3A+XG4gKiAgICAgICAgICAgPC8+XG4gKiAgICAgICAgICl9XG4gKiAgICAgICAvPlxuICogICAgIDwvZm9ybT5cbiAqICAgKTtcbiAqIH1cbiAqIGBgYFxuICovXG5jb25zdCBDb250cm9sbGVyID0gKHByb3BzKSA9PiBwcm9wcy5yZW5kZXIodXNlQ29udHJvbGxlcihwcm9wcykpO1xuXG5jb25zdCBQT1NUX1JFUVVFU1QgPSAncG9zdCc7XG4vKipcbiAqIEZvcm0gY29tcG9uZW50IHRvIG1hbmFnZSBzdWJtaXNzaW9uLlxuICpcbiAqIEBwYXJhbSBwcm9wcyAtIHRvIHNldHVwIHN1Ym1pc3Npb24gZGV0YWlsLiB7QGxpbmsgRm9ybVByb3BzfVxuICpcbiAqIEByZXR1cm5zIGZvcm0gY29tcG9uZW50IG9yIGhlYWRsZXNzIHJlbmRlciBwcm9wLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c3hcbiAqIGZ1bmN0aW9uIEFwcCgpIHtcbiAqICAgY29uc3QgeyBjb250cm9sLCBmb3JtU3RhdGU6IHsgZXJyb3JzIH0gfSA9IHVzZUZvcm0oKTtcbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPEZvcm0gYWN0aW9uPVwiL2FwaVwiIGNvbnRyb2w9e2NvbnRyb2x9PlxuICogICAgICAgPGlucHV0IHsuLi5yZWdpc3RlcihcIm5hbWVcIil9IC8+XG4gKiAgICAgICA8cD57ZXJyb3JzPy5yb290Py5zZXJ2ZXIgJiYgJ1NlcnZlciBlcnJvcid9PC9wPlxuICogICAgICAgPGJ1dHRvbj5TdWJtaXQ8L2J1dHRvbj5cbiAqICAgICA8L0Zvcm0+XG4gKiAgICk7XG4gKiB9XG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gRm9ybShwcm9wcykge1xuICAgIGNvbnN0IG1ldGhvZHMgPSB1c2VGb3JtQ29udGV4dCgpO1xuICAgIGNvbnN0IFttb3VudGVkLCBzZXRNb3VudGVkXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCB7IGNvbnRyb2wgPSBtZXRob2RzLmNvbnRyb2wsIG9uU3VibWl0LCBjaGlsZHJlbiwgYWN0aW9uLCBtZXRob2QgPSBQT1NUX1JFUVVFU1QsIGhlYWRlcnMsIGVuY1R5cGUsIG9uRXJyb3IsIHJlbmRlciwgb25TdWNjZXNzLCB2YWxpZGF0ZVN0YXR1cywgLi4ucmVzdCB9ID0gcHJvcHM7XG4gICAgY29uc3Qgc3VibWl0ID0gYXN5bmMgKGV2ZW50KSA9PiB7XG4gICAgICAgIGxldCBoYXNFcnJvciA9IGZhbHNlO1xuICAgICAgICBsZXQgdHlwZSA9ICcnO1xuICAgICAgICBhd2FpdCBjb250cm9sLmhhbmRsZVN1Ym1pdChhc3luYyAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgICAgIGxldCBmb3JtRGF0YUpzb24gPSAnJztcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgZm9ybURhdGFKc29uID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoX2EpIHsgfVxuICAgICAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIGNvbnRyb2wuX25hbWVzLm1vdW50KSB7XG4gICAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKG5hbWUsIGdldChkYXRhLCBuYW1lKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob25TdWJtaXQpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCBvblN1Ym1pdCh7XG4gICAgICAgICAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICAgICAgICAgIGZvcm1EYXRhLFxuICAgICAgICAgICAgICAgICAgICBmb3JtRGF0YUpzb24sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2hvdWxkU3RyaW5naWZ5U3VibWlzc2lvbkRhdGEgPSBbXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzICYmIGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5jVHlwZSxcbiAgICAgICAgICAgICAgICAgICAgXS5zb21lKCh2YWx1ZSkgPT4gdmFsdWUgJiYgdmFsdWUuaW5jbHVkZXMoJ2pzb24nKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYWN0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uaGVhZGVycyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi4oZW5jVHlwZSA/IHsgJ0NvbnRlbnQtVHlwZSc6IGVuY1R5cGUgfSA6IHt9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBib2R5OiBzaG91bGRTdHJpbmdpZnlTdWJtaXNzaW9uRGF0YSA/IGZvcm1EYXRhSnNvbiA6IGZvcm1EYXRhLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAodmFsaWRhdGVTdGF0dXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICF2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiByZXNwb25zZS5zdGF0dXMgPCAyMDAgfHwgcmVzcG9uc2Uuc3RhdHVzID49IDMwMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0Vycm9yID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uRXJyb3IgJiYgb25FcnJvcih7IHJlc3BvbnNlIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSA9IFN0cmluZyhyZXNwb25zZS5zdGF0dXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzICYmIG9uU3VjY2Vzcyh7IHJlc3BvbnNlIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBoYXNFcnJvciA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIG9uRXJyb3IgJiYgb25FcnJvcih7IGVycm9yIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoZXZlbnQpO1xuICAgICAgICBpZiAoaGFzRXJyb3IgJiYgcHJvcHMuY29udHJvbCkge1xuICAgICAgICAgICAgcHJvcHMuY29udHJvbC5fc3ViamVjdHMuc3RhdGUubmV4dCh7XG4gICAgICAgICAgICAgICAgaXNTdWJtaXRTdWNjZXNzZnVsOiBmYWxzZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcHJvcHMuY29udHJvbC5zZXRFcnJvcigncm9vdC5zZXJ2ZXInLCB7XG4gICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzZXRNb3VudGVkKHRydWUpO1xuICAgIH0sIFtdKTtcbiAgICByZXR1cm4gcmVuZGVyID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIHJlbmRlcih7XG4gICAgICAgIHN1Ym1pdCxcbiAgICB9KSkpIDogKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIsIHsgbm9WYWxpZGF0ZTogbW91bnRlZCwgYWN0aW9uOiBhY3Rpb24sIG1ldGhvZDogbWV0aG9kLCBlbmNUeXBlOiBlbmNUeXBlLCBvblN1Ym1pdDogc3VibWl0LCAuLi5yZXN0IH0sIGNoaWxkcmVuKSk7XG59XG5cbnZhciBhcHBlbmRFcnJvcnMgPSAobmFtZSwgdmFsaWRhdGVBbGxGaWVsZENyaXRlcmlhLCBlcnJvcnMsIHR5cGUsIG1lc3NhZ2UpID0+IHZhbGlkYXRlQWxsRmllbGRDcml0ZXJpYVxuICAgID8ge1xuICAgICAgICAuLi5lcnJvcnNbbmFtZV0sXG4gICAgICAgIHR5cGVzOiB7XG4gICAgICAgICAgICAuLi4oZXJyb3JzW25hbWVdICYmIGVycm9yc1tuYW1lXS50eXBlcyA/IGVycm9yc1tuYW1lXS50eXBlcyA6IHt9KSxcbiAgICAgICAgICAgIFt0eXBlXTogbWVzc2FnZSB8fCB0cnVlLFxuICAgICAgICB9LFxuICAgIH1cbiAgICA6IHt9O1xuXG5jb25zdCBmb2N1c0ZpZWxkQnkgPSAoZmllbGRzLCBjYWxsYmFjaywgZmllbGRzTmFtZXMpID0+IHtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBmaWVsZHNOYW1lcyB8fCBPYmplY3Qua2V5cyhmaWVsZHMpKSB7XG4gICAgICAgIGNvbnN0IGZpZWxkID0gZ2V0KGZpZWxkcywga2V5KTtcbiAgICAgICAgaWYgKGZpZWxkKSB7XG4gICAgICAgICAgICBjb25zdCB7IF9mLCAuLi5jdXJyZW50RmllbGQgfSA9IGZpZWxkO1xuICAgICAgICAgICAgaWYgKF9mICYmIGNhbGxiYWNrKF9mLm5hbWUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKF9mLnJlZi5mb2N1cykge1xuICAgICAgICAgICAgICAgICAgICBfZi5yZWYuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKF9mLnJlZnMgJiYgX2YucmVmc1swXS5mb2N1cykge1xuICAgICAgICAgICAgICAgICAgICBfZi5yZWZzWzBdLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzT2JqZWN0KGN1cnJlbnRGaWVsZCkpIHtcbiAgICAgICAgICAgICAgICBmb2N1c0ZpZWxkQnkoY3VycmVudEZpZWxkLCBjYWxsYmFjayk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG52YXIgZ2VuZXJhdGVJZCA9ICgpID0+IHtcbiAgICBjb25zdCBkID0gdHlwZW9mIHBlcmZvcm1hbmNlID09PSAndW5kZWZpbmVkJyA/IERhdGUubm93KCkgOiBwZXJmb3JtYW5jZS5ub3coKSAqIDEwMDA7XG4gICAgcmV0dXJuICd4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHgnLnJlcGxhY2UoL1t4eV0vZywgKGMpID0+IHtcbiAgICAgICAgY29uc3QgciA9IChNYXRoLnJhbmRvbSgpICogMTYgKyBkKSAlIDE2IHwgMDtcbiAgICAgICAgcmV0dXJuIChjID09ICd4JyA/IHIgOiAociAmIDB4MykgfCAweDgpLnRvU3RyaW5nKDE2KTtcbiAgICB9KTtcbn07XG5cbnZhciBnZXRGb2N1c0ZpZWxkTmFtZSA9IChuYW1lLCBpbmRleCwgb3B0aW9ucyA9IHt9KSA9PiBvcHRpb25zLnNob3VsZEZvY3VzIHx8IGlzVW5kZWZpbmVkKG9wdGlvbnMuc2hvdWxkRm9jdXMpXG4gICAgPyBvcHRpb25zLmZvY3VzTmFtZSB8fFxuICAgICAgICBgJHtuYW1lfS4ke2lzVW5kZWZpbmVkKG9wdGlvbnMuZm9jdXNJbmRleCkgPyBpbmRleCA6IG9wdGlvbnMuZm9jdXNJbmRleH0uYFxuICAgIDogJyc7XG5cbnZhciBnZXRWYWxpZGF0aW9uTW9kZXMgPSAobW9kZSkgPT4gKHtcbiAgICBpc09uU3VibWl0OiAhbW9kZSB8fCBtb2RlID09PSBWQUxJREFUSU9OX01PREUub25TdWJtaXQsXG4gICAgaXNPbkJsdXI6IG1vZGUgPT09IFZBTElEQVRJT05fTU9ERS5vbkJsdXIsXG4gICAgaXNPbkNoYW5nZTogbW9kZSA9PT0gVkFMSURBVElPTl9NT0RFLm9uQ2hhbmdlLFxuICAgIGlzT25BbGw6IG1vZGUgPT09IFZBTElEQVRJT05fTU9ERS5hbGwsXG4gICAgaXNPblRvdWNoOiBtb2RlID09PSBWQUxJREFUSU9OX01PREUub25Ub3VjaGVkLFxufSk7XG5cbnZhciBpc1dhdGNoZWQgPSAobmFtZSwgX25hbWVzLCBpc0JsdXJFdmVudCkgPT4gIWlzQmx1ckV2ZW50ICYmXG4gICAgKF9uYW1lcy53YXRjaEFsbCB8fFxuICAgICAgICBfbmFtZXMud2F0Y2guaGFzKG5hbWUpIHx8XG4gICAgICAgIFsuLi5fbmFtZXMud2F0Y2hdLnNvbWUoKHdhdGNoTmFtZSkgPT4gbmFtZS5zdGFydHNXaXRoKHdhdGNoTmFtZSkgJiZcbiAgICAgICAgICAgIC9eXFwuXFx3Ky8udGVzdChuYW1lLnNsaWNlKHdhdGNoTmFtZS5sZW5ndGgpKSkpO1xuXG52YXIgdXBkYXRlRmllbGRBcnJheVJvb3RFcnJvciA9IChlcnJvcnMsIGVycm9yLCBuYW1lKSA9PiB7XG4gICAgY29uc3QgZmllbGRBcnJheUVycm9ycyA9IGNvbXBhY3QoZ2V0KGVycm9ycywgbmFtZSkpO1xuICAgIHNldChmaWVsZEFycmF5RXJyb3JzLCAncm9vdCcsIGVycm9yW25hbWVdKTtcbiAgICBzZXQoZXJyb3JzLCBuYW1lLCBmaWVsZEFycmF5RXJyb3JzKTtcbiAgICByZXR1cm4gZXJyb3JzO1xufTtcblxudmFyIGlzQm9vbGVhbiA9ICh2YWx1ZSkgPT4gdHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbic7XG5cbnZhciBpc0ZpbGVJbnB1dCA9IChlbGVtZW50KSA9PiBlbGVtZW50LnR5cGUgPT09ICdmaWxlJztcblxudmFyIGlzRnVuY3Rpb24gPSAodmFsdWUpID0+IHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJztcblxudmFyIGlzSFRNTEVsZW1lbnQgPSAodmFsdWUpID0+IHtcbiAgICBpZiAoIWlzV2ViKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3Qgb3duZXIgPSB2YWx1ZSA/IHZhbHVlLm93bmVyRG9jdW1lbnQgOiAwO1xuICAgIHJldHVybiAodmFsdWUgaW5zdGFuY2VvZlxuICAgICAgICAob3duZXIgJiYgb3duZXIuZGVmYXVsdFZpZXcgPyBvd25lci5kZWZhdWx0Vmlldy5IVE1MRWxlbWVudCA6IEhUTUxFbGVtZW50KSk7XG59O1xuXG52YXIgaXNNZXNzYWdlID0gKHZhbHVlKSA9PiBpc1N0cmluZyh2YWx1ZSk7XG5cbnZhciBpc1JhZGlvSW5wdXQgPSAoZWxlbWVudCkgPT4gZWxlbWVudC50eXBlID09PSAncmFkaW8nO1xuXG52YXIgaXNSZWdleCA9ICh2YWx1ZSkgPT4gdmFsdWUgaW5zdGFuY2VvZiBSZWdFeHA7XG5cbmNvbnN0IGRlZmF1bHRSZXN1bHQgPSB7XG4gICAgdmFsdWU6IGZhbHNlLFxuICAgIGlzVmFsaWQ6IGZhbHNlLFxufTtcbmNvbnN0IHZhbGlkUmVzdWx0ID0geyB2YWx1ZTogdHJ1ZSwgaXNWYWxpZDogdHJ1ZSB9O1xudmFyIGdldENoZWNrYm94VmFsdWUgPSAob3B0aW9ucykgPT4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KG9wdGlvbnMpKSB7XG4gICAgICAgIGlmIChvcHRpb25zLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IG9wdGlvbnNcbiAgICAgICAgICAgICAgICAuZmlsdGVyKChvcHRpb24pID0+IG9wdGlvbiAmJiBvcHRpb24uY2hlY2tlZCAmJiAhb3B0aW9uLmRpc2FibGVkKVxuICAgICAgICAgICAgICAgIC5tYXAoKG9wdGlvbikgPT4gb3B0aW9uLnZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiB2YWx1ZXMsIGlzVmFsaWQ6ICEhdmFsdWVzLmxlbmd0aCB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvcHRpb25zWzBdLmNoZWNrZWQgJiYgIW9wdGlvbnNbMF0uZGlzYWJsZWRcbiAgICAgICAgICAgID8gLy8gQHRzLWV4cGVjdC1lcnJvciBleHBlY3RlZCB0byB3b3JrIGluIHRoZSBicm93c2VyXG4gICAgICAgICAgICAgICAgb3B0aW9uc1swXS5hdHRyaWJ1dGVzICYmICFpc1VuZGVmaW5lZChvcHRpb25zWzBdLmF0dHJpYnV0ZXMudmFsdWUpXG4gICAgICAgICAgICAgICAgICAgID8gaXNVbmRlZmluZWQob3B0aW9uc1swXS52YWx1ZSkgfHwgb3B0aW9uc1swXS52YWx1ZSA9PT0gJydcbiAgICAgICAgICAgICAgICAgICAgICAgID8gdmFsaWRSZXN1bHRcbiAgICAgICAgICAgICAgICAgICAgICAgIDogeyB2YWx1ZTogb3B0aW9uc1swXS52YWx1ZSwgaXNWYWxpZDogdHJ1ZSB9XG4gICAgICAgICAgICAgICAgICAgIDogdmFsaWRSZXN1bHRcbiAgICAgICAgICAgIDogZGVmYXVsdFJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIGRlZmF1bHRSZXN1bHQ7XG59O1xuXG5jb25zdCBkZWZhdWx0UmV0dXJuID0ge1xuICAgIGlzVmFsaWQ6IGZhbHNlLFxuICAgIHZhbHVlOiBudWxsLFxufTtcbnZhciBnZXRSYWRpb1ZhbHVlID0gKG9wdGlvbnMpID0+IEFycmF5LmlzQXJyYXkob3B0aW9ucylcbiAgICA/IG9wdGlvbnMucmVkdWNlKChwcmV2aW91cywgb3B0aW9uKSA9PiBvcHRpb24gJiYgb3B0aW9uLmNoZWNrZWQgJiYgIW9wdGlvbi5kaXNhYmxlZFxuICAgICAgICA/IHtcbiAgICAgICAgICAgIGlzVmFsaWQ6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogb3B0aW9uLnZhbHVlLFxuICAgICAgICB9XG4gICAgICAgIDogcHJldmlvdXMsIGRlZmF1bHRSZXR1cm4pXG4gICAgOiBkZWZhdWx0UmV0dXJuO1xuXG5mdW5jdGlvbiBnZXRWYWxpZGF0ZUVycm9yKHJlc3VsdCwgcmVmLCB0eXBlID0gJ3ZhbGlkYXRlJykge1xuICAgIGlmIChpc01lc3NhZ2UocmVzdWx0KSB8fFxuICAgICAgICAoQXJyYXkuaXNBcnJheShyZXN1bHQpICYmIHJlc3VsdC5ldmVyeShpc01lc3NhZ2UpKSB8fFxuICAgICAgICAoaXNCb29sZWFuKHJlc3VsdCkgJiYgIXJlc3VsdCkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICBtZXNzYWdlOiBpc01lc3NhZ2UocmVzdWx0KSA/IHJlc3VsdCA6ICcnLFxuICAgICAgICAgICAgcmVmLFxuICAgICAgICB9O1xuICAgIH1cbn1cblxudmFyIGdldFZhbHVlQW5kTWVzc2FnZSA9ICh2YWxpZGF0aW9uRGF0YSkgPT4gaXNPYmplY3QodmFsaWRhdGlvbkRhdGEpICYmICFpc1JlZ2V4KHZhbGlkYXRpb25EYXRhKVxuICAgID8gdmFsaWRhdGlvbkRhdGFcbiAgICA6IHtcbiAgICAgICAgdmFsdWU6IHZhbGlkYXRpb25EYXRhLFxuICAgICAgICBtZXNzYWdlOiAnJyxcbiAgICB9O1xuXG52YXIgdmFsaWRhdGVGaWVsZCA9IGFzeW5jIChmaWVsZCwgZm9ybVZhbHVlcywgdmFsaWRhdGVBbGxGaWVsZENyaXRlcmlhLCBzaG91bGRVc2VOYXRpdmVWYWxpZGF0aW9uLCBpc0ZpZWxkQXJyYXkpID0+IHtcbiAgICBjb25zdCB7IHJlZiwgcmVmcywgcmVxdWlyZWQsIG1heExlbmd0aCwgbWluTGVuZ3RoLCBtaW4sIG1heCwgcGF0dGVybiwgdmFsaWRhdGUsIG5hbWUsIHZhbHVlQXNOdW1iZXIsIG1vdW50LCBkaXNhYmxlZCwgfSA9IGZpZWxkLl9mO1xuICAgIGNvbnN0IGlucHV0VmFsdWUgPSBnZXQoZm9ybVZhbHVlcywgbmFtZSk7XG4gICAgaWYgKCFtb3VudCB8fCBkaXNhYmxlZCkge1xuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGNvbnN0IGlucHV0UmVmID0gcmVmcyA/IHJlZnNbMF0gOiByZWY7XG4gICAgY29uc3Qgc2V0Q3VzdG9tVmFsaWRpdHkgPSAobWVzc2FnZSkgPT4ge1xuICAgICAgICBpZiAoc2hvdWxkVXNlTmF0aXZlVmFsaWRhdGlvbiAmJiBpbnB1dFJlZi5yZXBvcnRWYWxpZGl0eSkge1xuICAgICAgICAgICAgaW5wdXRSZWYuc2V0Q3VzdG9tVmFsaWRpdHkoaXNCb29sZWFuKG1lc3NhZ2UpID8gJycgOiBtZXNzYWdlIHx8ICcnKTtcbiAgICAgICAgICAgIGlucHV0UmVmLnJlcG9ydFZhbGlkaXR5KCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGVycm9yID0ge307XG4gICAgY29uc3QgaXNSYWRpbyA9IGlzUmFkaW9JbnB1dChyZWYpO1xuICAgIGNvbnN0IGlzQ2hlY2tCb3ggPSBpc0NoZWNrQm94SW5wdXQocmVmKTtcbiAgICBjb25zdCBpc1JhZGlvT3JDaGVja2JveCA9IGlzUmFkaW8gfHwgaXNDaGVja0JveDtcbiAgICBjb25zdCBpc0VtcHR5ID0gKCh2YWx1ZUFzTnVtYmVyIHx8IGlzRmlsZUlucHV0KHJlZikpICYmXG4gICAgICAgIGlzVW5kZWZpbmVkKHJlZi52YWx1ZSkgJiZcbiAgICAgICAgaXNVbmRlZmluZWQoaW5wdXRWYWx1ZSkpIHx8XG4gICAgICAgIChpc0hUTUxFbGVtZW50KHJlZikgJiYgcmVmLnZhbHVlID09PSAnJykgfHxcbiAgICAgICAgaW5wdXRWYWx1ZSA9PT0gJycgfHxcbiAgICAgICAgKEFycmF5LmlzQXJyYXkoaW5wdXRWYWx1ZSkgJiYgIWlucHV0VmFsdWUubGVuZ3RoKTtcbiAgICBjb25zdCBhcHBlbmRFcnJvcnNDdXJyeSA9IGFwcGVuZEVycm9ycy5iaW5kKG51bGwsIG5hbWUsIHZhbGlkYXRlQWxsRmllbGRDcml0ZXJpYSwgZXJyb3IpO1xuICAgIGNvbnN0IGdldE1pbk1heE1lc3NhZ2UgPSAoZXhjZWVkTWF4LCBtYXhMZW5ndGhNZXNzYWdlLCBtaW5MZW5ndGhNZXNzYWdlLCBtYXhUeXBlID0gSU5QVVRfVkFMSURBVElPTl9SVUxFUy5tYXhMZW5ndGgsIG1pblR5cGUgPSBJTlBVVF9WQUxJREFUSU9OX1JVTEVTLm1pbkxlbmd0aCkgPT4ge1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gZXhjZWVkTWF4ID8gbWF4TGVuZ3RoTWVzc2FnZSA6IG1pbkxlbmd0aE1lc3NhZ2U7XG4gICAgICAgIGVycm9yW25hbWVdID0ge1xuICAgICAgICAgICAgdHlwZTogZXhjZWVkTWF4ID8gbWF4VHlwZSA6IG1pblR5cGUsXG4gICAgICAgICAgICBtZXNzYWdlLFxuICAgICAgICAgICAgcmVmLFxuICAgICAgICAgICAgLi4uYXBwZW5kRXJyb3JzQ3VycnkoZXhjZWVkTWF4ID8gbWF4VHlwZSA6IG1pblR5cGUsIG1lc3NhZ2UpLFxuICAgICAgICB9O1xuICAgIH07XG4gICAgaWYgKGlzRmllbGRBcnJheVxuICAgICAgICA/ICFBcnJheS5pc0FycmF5KGlucHV0VmFsdWUpIHx8ICFpbnB1dFZhbHVlLmxlbmd0aFxuICAgICAgICA6IHJlcXVpcmVkICYmXG4gICAgICAgICAgICAoKCFpc1JhZGlvT3JDaGVja2JveCAmJiAoaXNFbXB0eSB8fCBpc051bGxPclVuZGVmaW5lZChpbnB1dFZhbHVlKSkpIHx8XG4gICAgICAgICAgICAgICAgKGlzQm9vbGVhbihpbnB1dFZhbHVlKSAmJiAhaW5wdXRWYWx1ZSkgfHxcbiAgICAgICAgICAgICAgICAoaXNDaGVja0JveCAmJiAhZ2V0Q2hlY2tib3hWYWx1ZShyZWZzKS5pc1ZhbGlkKSB8fFxuICAgICAgICAgICAgICAgIChpc1JhZGlvICYmICFnZXRSYWRpb1ZhbHVlKHJlZnMpLmlzVmFsaWQpKSkge1xuICAgICAgICBjb25zdCB7IHZhbHVlLCBtZXNzYWdlIH0gPSBpc01lc3NhZ2UocmVxdWlyZWQpXG4gICAgICAgICAgICA/IHsgdmFsdWU6ICEhcmVxdWlyZWQsIG1lc3NhZ2U6IHJlcXVpcmVkIH1cbiAgICAgICAgICAgIDogZ2V0VmFsdWVBbmRNZXNzYWdlKHJlcXVpcmVkKTtcbiAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICBlcnJvcltuYW1lXSA9IHtcbiAgICAgICAgICAgICAgICB0eXBlOiBJTlBVVF9WQUxJREFUSU9OX1JVTEVTLnJlcXVpcmVkLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgcmVmOiBpbnB1dFJlZixcbiAgICAgICAgICAgICAgICAuLi5hcHBlbmRFcnJvcnNDdXJyeShJTlBVVF9WQUxJREFUSU9OX1JVTEVTLnJlcXVpcmVkLCBtZXNzYWdlKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAoIXZhbGlkYXRlQWxsRmllbGRDcml0ZXJpYSkge1xuICAgICAgICAgICAgICAgIHNldEN1c3RvbVZhbGlkaXR5KG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoIWlzRW1wdHkgJiYgKCFpc051bGxPclVuZGVmaW5lZChtaW4pIHx8ICFpc051bGxPclVuZGVmaW5lZChtYXgpKSkge1xuICAgICAgICBsZXQgZXhjZWVkTWF4O1xuICAgICAgICBsZXQgZXhjZWVkTWluO1xuICAgICAgICBjb25zdCBtYXhPdXRwdXQgPSBnZXRWYWx1ZUFuZE1lc3NhZ2UobWF4KTtcbiAgICAgICAgY29uc3QgbWluT3V0cHV0ID0gZ2V0VmFsdWVBbmRNZXNzYWdlKG1pbik7XG4gICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQoaW5wdXRWYWx1ZSkgJiYgIWlzTmFOKGlucHV0VmFsdWUpKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZU51bWJlciA9IHJlZi52YWx1ZUFzTnVtYmVyIHx8XG4gICAgICAgICAgICAgICAgKGlucHV0VmFsdWUgPyAraW5wdXRWYWx1ZSA6IGlucHV0VmFsdWUpO1xuICAgICAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChtYXhPdXRwdXQudmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgZXhjZWVkTWF4ID0gdmFsdWVOdW1iZXIgPiBtYXhPdXRwdXQudmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKG1pbk91dHB1dC52YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBleGNlZWRNaW4gPSB2YWx1ZU51bWJlciA8IG1pbk91dHB1dC52YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlRGF0ZSA9IHJlZi52YWx1ZUFzRGF0ZSB8fCBuZXcgRGF0ZShpbnB1dFZhbHVlKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbnZlcnRUaW1lVG9EYXRlID0gKHRpbWUpID0+IG5ldyBEYXRlKG5ldyBEYXRlKCkudG9EYXRlU3RyaW5nKCkgKyAnICcgKyB0aW1lKTtcbiAgICAgICAgICAgIGNvbnN0IGlzVGltZSA9IHJlZi50eXBlID09ICd0aW1lJztcbiAgICAgICAgICAgIGNvbnN0IGlzV2VlayA9IHJlZi50eXBlID09ICd3ZWVrJztcbiAgICAgICAgICAgIGlmIChpc1N0cmluZyhtYXhPdXRwdXQudmFsdWUpICYmIGlucHV0VmFsdWUpIHtcbiAgICAgICAgICAgICAgICBleGNlZWRNYXggPSBpc1RpbWVcbiAgICAgICAgICAgICAgICAgICAgPyBjb252ZXJ0VGltZVRvRGF0ZShpbnB1dFZhbHVlKSA+IGNvbnZlcnRUaW1lVG9EYXRlKG1heE91dHB1dC52YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgOiBpc1dlZWtcbiAgICAgICAgICAgICAgICAgICAgICAgID8gaW5wdXRWYWx1ZSA+IG1heE91dHB1dC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZURhdGUgPiBuZXcgRGF0ZShtYXhPdXRwdXQudmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGlzU3RyaW5nKG1pbk91dHB1dC52YWx1ZSkgJiYgaW5wdXRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGV4Y2VlZE1pbiA9IGlzVGltZVxuICAgICAgICAgICAgICAgICAgICA/IGNvbnZlcnRUaW1lVG9EYXRlKGlucHV0VmFsdWUpIDwgY29udmVydFRpbWVUb0RhdGUobWluT3V0cHV0LnZhbHVlKVxuICAgICAgICAgICAgICAgICAgICA6IGlzV2Vla1xuICAgICAgICAgICAgICAgICAgICAgICAgPyBpbnB1dFZhbHVlIDwgbWluT3V0cHV0LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlRGF0ZSA8IG5ldyBEYXRlKG1pbk91dHB1dC52YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGV4Y2VlZE1heCB8fCBleGNlZWRNaW4pIHtcbiAgICAgICAgICAgIGdldE1pbk1heE1lc3NhZ2UoISFleGNlZWRNYXgsIG1heE91dHB1dC5tZXNzYWdlLCBtaW5PdXRwdXQubWVzc2FnZSwgSU5QVVRfVkFMSURBVElPTl9SVUxFUy5tYXgsIElOUFVUX1ZBTElEQVRJT05fUlVMRVMubWluKTtcbiAgICAgICAgICAgIGlmICghdmFsaWRhdGVBbGxGaWVsZENyaXRlcmlhKSB7XG4gICAgICAgICAgICAgICAgc2V0Q3VzdG9tVmFsaWRpdHkoZXJyb3JbbmFtZV0ubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlmICgobWF4TGVuZ3RoIHx8IG1pbkxlbmd0aCkgJiZcbiAgICAgICAgIWlzRW1wdHkgJiZcbiAgICAgICAgKGlzU3RyaW5nKGlucHV0VmFsdWUpIHx8IChpc0ZpZWxkQXJyYXkgJiYgQXJyYXkuaXNBcnJheShpbnB1dFZhbHVlKSkpKSB7XG4gICAgICAgIGNvbnN0IG1heExlbmd0aE91dHB1dCA9IGdldFZhbHVlQW5kTWVzc2FnZShtYXhMZW5ndGgpO1xuICAgICAgICBjb25zdCBtaW5MZW5ndGhPdXRwdXQgPSBnZXRWYWx1ZUFuZE1lc3NhZ2UobWluTGVuZ3RoKTtcbiAgICAgICAgY29uc3QgZXhjZWVkTWF4ID0gIWlzTnVsbE9yVW5kZWZpbmVkKG1heExlbmd0aE91dHB1dC52YWx1ZSkgJiZcbiAgICAgICAgICAgIGlucHV0VmFsdWUubGVuZ3RoID4gK21heExlbmd0aE91dHB1dC52YWx1ZTtcbiAgICAgICAgY29uc3QgZXhjZWVkTWluID0gIWlzTnVsbE9yVW5kZWZpbmVkKG1pbkxlbmd0aE91dHB1dC52YWx1ZSkgJiZcbiAgICAgICAgICAgIGlucHV0VmFsdWUubGVuZ3RoIDwgK21pbkxlbmd0aE91dHB1dC52YWx1ZTtcbiAgICAgICAgaWYgKGV4Y2VlZE1heCB8fCBleGNlZWRNaW4pIHtcbiAgICAgICAgICAgIGdldE1pbk1heE1lc3NhZ2UoZXhjZWVkTWF4LCBtYXhMZW5ndGhPdXRwdXQubWVzc2FnZSwgbWluTGVuZ3RoT3V0cHV0Lm1lc3NhZ2UpO1xuICAgICAgICAgICAgaWYgKCF2YWxpZGF0ZUFsbEZpZWxkQ3JpdGVyaWEpIHtcbiAgICAgICAgICAgICAgICBzZXRDdXN0b21WYWxpZGl0eShlcnJvcltuYW1lXS5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKHBhdHRlcm4gJiYgIWlzRW1wdHkgJiYgaXNTdHJpbmcoaW5wdXRWYWx1ZSkpIHtcbiAgICAgICAgY29uc3QgeyB2YWx1ZTogcGF0dGVyblZhbHVlLCBtZXNzYWdlIH0gPSBnZXRWYWx1ZUFuZE1lc3NhZ2UocGF0dGVybik7XG4gICAgICAgIGlmIChpc1JlZ2V4KHBhdHRlcm5WYWx1ZSkgJiYgIWlucHV0VmFsdWUubWF0Y2gocGF0dGVyblZhbHVlKSkge1xuICAgICAgICAgICAgZXJyb3JbbmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgdHlwZTogSU5QVVRfVkFMSURBVElPTl9SVUxFUy5wYXR0ZXJuLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgcmVmLFxuICAgICAgICAgICAgICAgIC4uLmFwcGVuZEVycm9yc0N1cnJ5KElOUFVUX1ZBTElEQVRJT05fUlVMRVMucGF0dGVybiwgbWVzc2FnZSksXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKCF2YWxpZGF0ZUFsbEZpZWxkQ3JpdGVyaWEpIHtcbiAgICAgICAgICAgICAgICBzZXRDdXN0b21WYWxpZGl0eShtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKHZhbGlkYXRlKSB7XG4gICAgICAgIGlmIChpc0Z1bmN0aW9uKHZhbGlkYXRlKSkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdmFsaWRhdGUoaW5wdXRWYWx1ZSwgZm9ybVZhbHVlcyk7XG4gICAgICAgICAgICBjb25zdCB2YWxpZGF0ZUVycm9yID0gZ2V0VmFsaWRhdGVFcnJvcihyZXN1bHQsIGlucHV0UmVmKTtcbiAgICAgICAgICAgIGlmICh2YWxpZGF0ZUVycm9yKSB7XG4gICAgICAgICAgICAgICAgZXJyb3JbbmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgICAgIC4uLnZhbGlkYXRlRXJyb3IsXG4gICAgICAgICAgICAgICAgICAgIC4uLmFwcGVuZEVycm9yc0N1cnJ5KElOUFVUX1ZBTElEQVRJT05fUlVMRVMudmFsaWRhdGUsIHZhbGlkYXRlRXJyb3IubWVzc2FnZSksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZiAoIXZhbGlkYXRlQWxsRmllbGRDcml0ZXJpYSkge1xuICAgICAgICAgICAgICAgICAgICBzZXRDdXN0b21WYWxpZGl0eSh2YWxpZGF0ZUVycm9yLm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzT2JqZWN0KHZhbGlkYXRlKSkge1xuICAgICAgICAgICAgbGV0IHZhbGlkYXRpb25SZXN1bHQgPSB7fTtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIHZhbGlkYXRlKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFpc0VtcHR5T2JqZWN0KHZhbGlkYXRpb25SZXN1bHQpICYmICF2YWxpZGF0ZUFsbEZpZWxkQ3JpdGVyaWEpIHtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbGlkYXRlRXJyb3IgPSBnZXRWYWxpZGF0ZUVycm9yKGF3YWl0IHZhbGlkYXRlW2tleV0oaW5wdXRWYWx1ZSwgZm9ybVZhbHVlcyksIGlucHV0UmVmLCBrZXkpO1xuICAgICAgICAgICAgICAgIGlmICh2YWxpZGF0ZUVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbGlkYXRpb25SZXN1bHQgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAuLi52YWxpZGF0ZUVycm9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgLi4uYXBwZW5kRXJyb3JzQ3Vycnkoa2V5LCB2YWxpZGF0ZUVycm9yLm1lc3NhZ2UpLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICBzZXRDdXN0b21WYWxpZGl0eSh2YWxpZGF0ZUVycm9yLm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsaWRhdGVBbGxGaWVsZENyaXRlcmlhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcltuYW1lXSA9IHZhbGlkYXRpb25SZXN1bHQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWlzRW1wdHlPYmplY3QodmFsaWRhdGlvblJlc3VsdCkpIHtcbiAgICAgICAgICAgICAgICBlcnJvcltuYW1lXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgcmVmOiBpbnB1dFJlZixcbiAgICAgICAgICAgICAgICAgICAgLi4udmFsaWRhdGlvblJlc3VsdCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmICghdmFsaWRhdGVBbGxGaWVsZENyaXRlcmlhKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2V0Q3VzdG9tVmFsaWRpdHkodHJ1ZSk7XG4gICAgcmV0dXJuIGVycm9yO1xufTtcblxuZnVuY3Rpb24gYXBwZW5kKGRhdGEsIHZhbHVlKSB7XG4gICAgcmV0dXJuIFsuLi5kYXRhLCAuLi5jb252ZXJ0VG9BcnJheVBheWxvYWQodmFsdWUpXTtcbn1cblxudmFyIGZpbGxFbXB0eUFycmF5ID0gKHZhbHVlKSA9PiBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlLm1hcCgoKSA9PiB1bmRlZmluZWQpIDogdW5kZWZpbmVkO1xuXG5mdW5jdGlvbiBpbnNlcnQoZGF0YSwgaW5kZXgsIHZhbHVlKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgLi4uZGF0YS5zbGljZSgwLCBpbmRleCksXG4gICAgICAgIC4uLmNvbnZlcnRUb0FycmF5UGF5bG9hZCh2YWx1ZSksXG4gICAgICAgIC4uLmRhdGEuc2xpY2UoaW5kZXgpLFxuICAgIF07XG59XG5cbnZhciBtb3ZlQXJyYXlBdCA9IChkYXRhLCBmcm9tLCB0bykgPT4ge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIGlmIChpc1VuZGVmaW5lZChkYXRhW3RvXSkpIHtcbiAgICAgICAgZGF0YVt0b10gPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGRhdGEuc3BsaWNlKHRvLCAwLCBkYXRhLnNwbGljZShmcm9tLCAxKVswXSk7XG4gICAgcmV0dXJuIGRhdGE7XG59O1xuXG5mdW5jdGlvbiBwcmVwZW5kKGRhdGEsIHZhbHVlKSB7XG4gICAgcmV0dXJuIFsuLi5jb252ZXJ0VG9BcnJheVBheWxvYWQodmFsdWUpLCAuLi5jb252ZXJ0VG9BcnJheVBheWxvYWQoZGF0YSldO1xufVxuXG5mdW5jdGlvbiByZW1vdmVBdEluZGV4ZXMoZGF0YSwgaW5kZXhlcykge1xuICAgIGxldCBpID0gMDtcbiAgICBjb25zdCB0ZW1wID0gWy4uLmRhdGFdO1xuICAgIGZvciAoY29uc3QgaW5kZXggb2YgaW5kZXhlcykge1xuICAgICAgICB0ZW1wLnNwbGljZShpbmRleCAtIGksIDEpO1xuICAgICAgICBpKys7XG4gICAgfVxuICAgIHJldHVybiBjb21wYWN0KHRlbXApLmxlbmd0aCA/IHRlbXAgOiBbXTtcbn1cbnZhciByZW1vdmVBcnJheUF0ID0gKGRhdGEsIGluZGV4KSA9PiBpc1VuZGVmaW5lZChpbmRleClcbiAgICA/IFtdXG4gICAgOiByZW1vdmVBdEluZGV4ZXMoZGF0YSwgY29udmVydFRvQXJyYXlQYXlsb2FkKGluZGV4KS5zb3J0KChhLCBiKSA9PiBhIC0gYikpO1xuXG52YXIgc3dhcEFycmF5QXQgPSAoZGF0YSwgaW5kZXhBLCBpbmRleEIpID0+IHtcbiAgICBkYXRhW2luZGV4QV0gPSBbZGF0YVtpbmRleEJdLCAoZGF0YVtpbmRleEJdID0gZGF0YVtpbmRleEFdKV1bMF07XG59O1xuXG5mdW5jdGlvbiBiYXNlR2V0KG9iamVjdCwgdXBkYXRlUGF0aCkge1xuICAgIGNvbnN0IGxlbmd0aCA9IHVwZGF0ZVBhdGguc2xpY2UoMCwgLTEpLmxlbmd0aDtcbiAgICBsZXQgaW5kZXggPSAwO1xuICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICBvYmplY3QgPSBpc1VuZGVmaW5lZChvYmplY3QpID8gaW5kZXgrKyA6IG9iamVjdFt1cGRhdGVQYXRoW2luZGV4KytdXTtcbiAgICB9XG4gICAgcmV0dXJuIG9iamVjdDtcbn1cbmZ1bmN0aW9uIGlzRW1wdHlBcnJheShvYmopIHtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpICYmICFpc1VuZGVmaW5lZChvYmpba2V5XSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIHVuc2V0KG9iamVjdCwgcGF0aCkge1xuICAgIGNvbnN0IHBhdGhzID0gQXJyYXkuaXNBcnJheShwYXRoKVxuICAgICAgICA/IHBhdGhcbiAgICAgICAgOiBpc0tleShwYXRoKVxuICAgICAgICAgICAgPyBbcGF0aF1cbiAgICAgICAgICAgIDogc3RyaW5nVG9QYXRoKHBhdGgpO1xuICAgIGNvbnN0IGNoaWxkT2JqZWN0ID0gcGF0aHMubGVuZ3RoID09PSAxID8gb2JqZWN0IDogYmFzZUdldChvYmplY3QsIHBhdGhzKTtcbiAgICBjb25zdCBpbmRleCA9IHBhdGhzLmxlbmd0aCAtIDE7XG4gICAgY29uc3Qga2V5ID0gcGF0aHNbaW5kZXhdO1xuICAgIGlmIChjaGlsZE9iamVjdCkge1xuICAgICAgICBkZWxldGUgY2hpbGRPYmplY3Rba2V5XTtcbiAgICB9XG4gICAgaWYgKGluZGV4ICE9PSAwICYmXG4gICAgICAgICgoaXNPYmplY3QoY2hpbGRPYmplY3QpICYmIGlzRW1wdHlPYmplY3QoY2hpbGRPYmplY3QpKSB8fFxuICAgICAgICAgICAgKEFycmF5LmlzQXJyYXkoY2hpbGRPYmplY3QpICYmIGlzRW1wdHlBcnJheShjaGlsZE9iamVjdCkpKSkge1xuICAgICAgICB1bnNldChvYmplY3QsIHBhdGhzLnNsaWNlKDAsIC0xKSk7XG4gICAgfVxuICAgIHJldHVybiBvYmplY3Q7XG59XG5cbnZhciB1cGRhdGVBdCA9IChmaWVsZFZhbHVlcywgaW5kZXgsIHZhbHVlKSA9PiB7XG4gICAgZmllbGRWYWx1ZXNbaW5kZXhdID0gdmFsdWU7XG4gICAgcmV0dXJuIGZpZWxkVmFsdWVzO1xufTtcblxuLyoqXG4gKiBBIGN1c3RvbSBob29rIHRoYXQgZXhwb3NlcyBjb252ZW5pZW50IG1ldGhvZHMgdG8gcGVyZm9ybSBvcGVyYXRpb25zIHdpdGggYSBsaXN0IG9mIGR5bmFtaWMgaW5wdXRzIHRoYXQgbmVlZCB0byBiZSBhcHBlbmRlZCwgdXBkYXRlZCwgcmVtb3ZlZCBldGMuIOKAoiBbRGVtb10oaHR0cHM6Ly9jb2Rlc2FuZGJveC5pby9zL3JlYWN0LWhvb2stZm9ybS11c2VmaWVsZGFycmF5LXNzdWduKSDigKIgW1ZpZGVvXShodHRwczovL3lvdXR1LmJlLzRNcmJmR1NGWTJBKVxuICpcbiAqIEByZW1hcmtzXG4gKiBbQVBJXShodHRwczovL3JlYWN0LWhvb2stZm9ybS5jb20vZG9jcy91c2VmaWVsZGFycmF5KSDigKIgW0RlbW9dKGh0dHBzOi8vY29kZXNhbmRib3guaW8vcy9yZWFjdC1ob29rLWZvcm0tdXNlZmllbGRhcnJheS1zc3VnbilcbiAqXG4gKiBAcGFyYW0gcHJvcHMgLSB1c2VGaWVsZEFycmF5IHByb3BzXG4gKlxuICogQHJldHVybnMgbWV0aG9kcyAtIGZ1bmN0aW9ucyB0byBtYW5pcHVsYXRlIHdpdGggdGhlIEZpZWxkIEFycmF5cyAoZHluYW1pYyBpbnB1dHMpIHtAbGluayBVc2VGaWVsZEFycmF5UmV0dXJufVxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c3hcbiAqIGZ1bmN0aW9uIEFwcCgpIHtcbiAqICAgY29uc3QgeyByZWdpc3RlciwgY29udHJvbCwgaGFuZGxlU3VibWl0LCByZXNldCwgdHJpZ2dlciwgc2V0RXJyb3IgfSA9IHVzZUZvcm0oe1xuICogICAgIGRlZmF1bHRWYWx1ZXM6IHtcbiAqICAgICAgIHRlc3Q6IFtdXG4gKiAgICAgfVxuICogICB9KTtcbiAqICAgY29uc3QgeyBmaWVsZHMsIGFwcGVuZCB9ID0gdXNlRmllbGRBcnJheSh7XG4gKiAgICAgY29udHJvbCxcbiAqICAgICBuYW1lOiBcInRlc3RcIlxuICogICB9KTtcbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPGZvcm0gb25TdWJtaXQ9e2hhbmRsZVN1Ym1pdChkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpKX0+XG4gKiAgICAgICB7ZmllbGRzLm1hcCgoaXRlbSwgaW5kZXgpID0+IChcbiAqICAgICAgICAgIDxpbnB1dCBrZXk9e2l0ZW0uaWR9IHsuLi5yZWdpc3RlcihgdGVzdC4ke2luZGV4fS5maXJzdE5hbWVgKX0gIC8+XG4gKiAgICAgICApKX1cbiAqICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIG9uQ2xpY2s9eygpID0+IGFwcGVuZCh7IGZpcnN0TmFtZTogXCJiaWxsXCIgfSl9PlxuICogICAgICAgICBhcHBlbmRcbiAqICAgICAgIDwvYnV0dG9uPlxuICogICAgICAgPGlucHV0IHR5cGU9XCJzdWJtaXRcIiAvPlxuICogICAgIDwvZm9ybT5cbiAqICAgKTtcbiAqIH1cbiAqIGBgYFxuICovXG5mdW5jdGlvbiB1c2VGaWVsZEFycmF5KHByb3BzKSB7XG4gICAgY29uc3QgbWV0aG9kcyA9IHVzZUZvcm1Db250ZXh0KCk7XG4gICAgY29uc3QgeyBjb250cm9sID0gbWV0aG9kcy5jb250cm9sLCBuYW1lLCBrZXlOYW1lID0gJ2lkJywgc2hvdWxkVW5yZWdpc3RlciwgfSA9IHByb3BzO1xuICAgIGNvbnN0IFtmaWVsZHMsIHNldEZpZWxkc10gPSBSZWFjdC51c2VTdGF0ZShjb250cm9sLl9nZXRGaWVsZEFycmF5KG5hbWUpKTtcbiAgICBjb25zdCBpZHMgPSBSZWFjdC51c2VSZWYoY29udHJvbC5fZ2V0RmllbGRBcnJheShuYW1lKS5tYXAoZ2VuZXJhdGVJZCkpO1xuICAgIGNvbnN0IF9maWVsZElkcyA9IFJlYWN0LnVzZVJlZihmaWVsZHMpO1xuICAgIGNvbnN0IF9uYW1lID0gUmVhY3QudXNlUmVmKG5hbWUpO1xuICAgIGNvbnN0IF9hY3Rpb25lZCA9IFJlYWN0LnVzZVJlZihmYWxzZSk7XG4gICAgX25hbWUuY3VycmVudCA9IG5hbWU7XG4gICAgX2ZpZWxkSWRzLmN1cnJlbnQgPSBmaWVsZHM7XG4gICAgY29udHJvbC5fbmFtZXMuYXJyYXkuYWRkKG5hbWUpO1xuICAgIHByb3BzLnJ1bGVzICYmXG4gICAgICAgIGNvbnRyb2wucmVnaXN0ZXIobmFtZSwgcHJvcHMucnVsZXMpO1xuICAgIHVzZVN1YnNjcmliZSh7XG4gICAgICAgIG5leHQ6ICh7IHZhbHVlcywgbmFtZTogZmllbGRBcnJheU5hbWUsIH0pID0+IHtcbiAgICAgICAgICAgIGlmIChmaWVsZEFycmF5TmFtZSA9PT0gX25hbWUuY3VycmVudCB8fCAhZmllbGRBcnJheU5hbWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZFZhbHVlcyA9IGdldCh2YWx1ZXMsIF9uYW1lLmN1cnJlbnQpO1xuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGZpZWxkVmFsdWVzKSkge1xuICAgICAgICAgICAgICAgICAgICBzZXRGaWVsZHMoZmllbGRWYWx1ZXMpO1xuICAgICAgICAgICAgICAgICAgICBpZHMuY3VycmVudCA9IGZpZWxkVmFsdWVzLm1hcChnZW5lcmF0ZUlkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHN1YmplY3Q6IGNvbnRyb2wuX3N1YmplY3RzLmFycmF5LFxuICAgIH0pO1xuICAgIGNvbnN0IHVwZGF0ZVZhbHVlcyA9IFJlYWN0LnVzZUNhbGxiYWNrKCh1cGRhdGVkRmllbGRBcnJheVZhbHVlcykgPT4ge1xuICAgICAgICBfYWN0aW9uZWQuY3VycmVudCA9IHRydWU7XG4gICAgICAgIGNvbnRyb2wuX3VwZGF0ZUZpZWxkQXJyYXkobmFtZSwgdXBkYXRlZEZpZWxkQXJyYXlWYWx1ZXMpO1xuICAgIH0sIFtjb250cm9sLCBuYW1lXSk7XG4gICAgY29uc3QgYXBwZW5kJDEgPSAodmFsdWUsIG9wdGlvbnMpID0+IHtcbiAgICAgICAgY29uc3QgYXBwZW5kVmFsdWUgPSBjb252ZXJ0VG9BcnJheVBheWxvYWQoY2xvbmVPYmplY3QodmFsdWUpKTtcbiAgICAgICAgY29uc3QgdXBkYXRlZEZpZWxkQXJyYXlWYWx1ZXMgPSBhcHBlbmQoY29udHJvbC5fZ2V0RmllbGRBcnJheShuYW1lKSwgYXBwZW5kVmFsdWUpO1xuICAgICAgICBjb250cm9sLl9uYW1lcy5mb2N1cyA9IGdldEZvY3VzRmllbGROYW1lKG5hbWUsIHVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzLmxlbmd0aCAtIDEsIG9wdGlvbnMpO1xuICAgICAgICBpZHMuY3VycmVudCA9IGFwcGVuZChpZHMuY3VycmVudCwgYXBwZW5kVmFsdWUubWFwKGdlbmVyYXRlSWQpKTtcbiAgICAgICAgdXBkYXRlVmFsdWVzKHVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzKTtcbiAgICAgICAgc2V0RmllbGRzKHVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzKTtcbiAgICAgICAgY29udHJvbC5fdXBkYXRlRmllbGRBcnJheShuYW1lLCB1cGRhdGVkRmllbGRBcnJheVZhbHVlcywgYXBwZW5kLCB7XG4gICAgICAgICAgICBhcmdBOiBmaWxsRW1wdHlBcnJheSh2YWx1ZSksXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgY29uc3QgcHJlcGVuZCQxID0gKHZhbHVlLCBvcHRpb25zKSA9PiB7XG4gICAgICAgIGNvbnN0IHByZXBlbmRWYWx1ZSA9IGNvbnZlcnRUb0FycmF5UGF5bG9hZChjbG9uZU9iamVjdCh2YWx1ZSkpO1xuICAgICAgICBjb25zdCB1cGRhdGVkRmllbGRBcnJheVZhbHVlcyA9IHByZXBlbmQoY29udHJvbC5fZ2V0RmllbGRBcnJheShuYW1lKSwgcHJlcGVuZFZhbHVlKTtcbiAgICAgICAgY29udHJvbC5fbmFtZXMuZm9jdXMgPSBnZXRGb2N1c0ZpZWxkTmFtZShuYW1lLCAwLCBvcHRpb25zKTtcbiAgICAgICAgaWRzLmN1cnJlbnQgPSBwcmVwZW5kKGlkcy5jdXJyZW50LCBwcmVwZW5kVmFsdWUubWFwKGdlbmVyYXRlSWQpKTtcbiAgICAgICAgdXBkYXRlVmFsdWVzKHVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzKTtcbiAgICAgICAgc2V0RmllbGRzKHVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzKTtcbiAgICAgICAgY29udHJvbC5fdXBkYXRlRmllbGRBcnJheShuYW1lLCB1cGRhdGVkRmllbGRBcnJheVZhbHVlcywgcHJlcGVuZCwge1xuICAgICAgICAgICAgYXJnQTogZmlsbEVtcHR5QXJyYXkodmFsdWUpLFxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIGNvbnN0IHJlbW92ZSA9IChpbmRleCkgPT4ge1xuICAgICAgICBjb25zdCB1cGRhdGVkRmllbGRBcnJheVZhbHVlcyA9IHJlbW92ZUFycmF5QXQoY29udHJvbC5fZ2V0RmllbGRBcnJheShuYW1lKSwgaW5kZXgpO1xuICAgICAgICBpZHMuY3VycmVudCA9IHJlbW92ZUFycmF5QXQoaWRzLmN1cnJlbnQsIGluZGV4KTtcbiAgICAgICAgdXBkYXRlVmFsdWVzKHVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzKTtcbiAgICAgICAgc2V0RmllbGRzKHVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzKTtcbiAgICAgICAgY29udHJvbC5fdXBkYXRlRmllbGRBcnJheShuYW1lLCB1cGRhdGVkRmllbGRBcnJheVZhbHVlcywgcmVtb3ZlQXJyYXlBdCwge1xuICAgICAgICAgICAgYXJnQTogaW5kZXgsXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgY29uc3QgaW5zZXJ0JDEgPSAoaW5kZXgsIHZhbHVlLCBvcHRpb25zKSA9PiB7XG4gICAgICAgIGNvbnN0IGluc2VydFZhbHVlID0gY29udmVydFRvQXJyYXlQYXlsb2FkKGNsb25lT2JqZWN0KHZhbHVlKSk7XG4gICAgICAgIGNvbnN0IHVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzID0gaW5zZXJ0KGNvbnRyb2wuX2dldEZpZWxkQXJyYXkobmFtZSksIGluZGV4LCBpbnNlcnRWYWx1ZSk7XG4gICAgICAgIGNvbnRyb2wuX25hbWVzLmZvY3VzID0gZ2V0Rm9jdXNGaWVsZE5hbWUobmFtZSwgaW5kZXgsIG9wdGlvbnMpO1xuICAgICAgICBpZHMuY3VycmVudCA9IGluc2VydChpZHMuY3VycmVudCwgaW5kZXgsIGluc2VydFZhbHVlLm1hcChnZW5lcmF0ZUlkKSk7XG4gICAgICAgIHVwZGF0ZVZhbHVlcyh1cGRhdGVkRmllbGRBcnJheVZhbHVlcyk7XG4gICAgICAgIHNldEZpZWxkcyh1cGRhdGVkRmllbGRBcnJheVZhbHVlcyk7XG4gICAgICAgIGNvbnRyb2wuX3VwZGF0ZUZpZWxkQXJyYXkobmFtZSwgdXBkYXRlZEZpZWxkQXJyYXlWYWx1ZXMsIGluc2VydCwge1xuICAgICAgICAgICAgYXJnQTogaW5kZXgsXG4gICAgICAgICAgICBhcmdCOiBmaWxsRW1wdHlBcnJheSh2YWx1ZSksXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgY29uc3Qgc3dhcCA9IChpbmRleEEsIGluZGV4QikgPT4ge1xuICAgICAgICBjb25zdCB1cGRhdGVkRmllbGRBcnJheVZhbHVlcyA9IGNvbnRyb2wuX2dldEZpZWxkQXJyYXkobmFtZSk7XG4gICAgICAgIHN3YXBBcnJheUF0KHVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzLCBpbmRleEEsIGluZGV4Qik7XG4gICAgICAgIHN3YXBBcnJheUF0KGlkcy5jdXJyZW50LCBpbmRleEEsIGluZGV4Qik7XG4gICAgICAgIHVwZGF0ZVZhbHVlcyh1cGRhdGVkRmllbGRBcnJheVZhbHVlcyk7XG4gICAgICAgIHNldEZpZWxkcyh1cGRhdGVkRmllbGRBcnJheVZhbHVlcyk7XG4gICAgICAgIGNvbnRyb2wuX3VwZGF0ZUZpZWxkQXJyYXkobmFtZSwgdXBkYXRlZEZpZWxkQXJyYXlWYWx1ZXMsIHN3YXBBcnJheUF0LCB7XG4gICAgICAgICAgICBhcmdBOiBpbmRleEEsXG4gICAgICAgICAgICBhcmdCOiBpbmRleEIsXG4gICAgICAgIH0sIGZhbHNlKTtcbiAgICB9O1xuICAgIGNvbnN0IG1vdmUgPSAoZnJvbSwgdG8pID0+IHtcbiAgICAgICAgY29uc3QgdXBkYXRlZEZpZWxkQXJyYXlWYWx1ZXMgPSBjb250cm9sLl9nZXRGaWVsZEFycmF5KG5hbWUpO1xuICAgICAgICBtb3ZlQXJyYXlBdCh1cGRhdGVkRmllbGRBcnJheVZhbHVlcywgZnJvbSwgdG8pO1xuICAgICAgICBtb3ZlQXJyYXlBdChpZHMuY3VycmVudCwgZnJvbSwgdG8pO1xuICAgICAgICB1cGRhdGVWYWx1ZXModXBkYXRlZEZpZWxkQXJyYXlWYWx1ZXMpO1xuICAgICAgICBzZXRGaWVsZHModXBkYXRlZEZpZWxkQXJyYXlWYWx1ZXMpO1xuICAgICAgICBjb250cm9sLl91cGRhdGVGaWVsZEFycmF5KG5hbWUsIHVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzLCBtb3ZlQXJyYXlBdCwge1xuICAgICAgICAgICAgYXJnQTogZnJvbSxcbiAgICAgICAgICAgIGFyZ0I6IHRvLFxuICAgICAgICB9LCBmYWxzZSk7XG4gICAgfTtcbiAgICBjb25zdCB1cGRhdGUgPSAoaW5kZXgsIHZhbHVlKSA9PiB7XG4gICAgICAgIGNvbnN0IHVwZGF0ZVZhbHVlID0gY2xvbmVPYmplY3QodmFsdWUpO1xuICAgICAgICBjb25zdCB1cGRhdGVkRmllbGRBcnJheVZhbHVlcyA9IHVwZGF0ZUF0KGNvbnRyb2wuX2dldEZpZWxkQXJyYXkobmFtZSksIGluZGV4LCB1cGRhdGVWYWx1ZSk7XG4gICAgICAgIGlkcy5jdXJyZW50ID0gWy4uLnVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzXS5tYXAoKGl0ZW0sIGkpID0+ICFpdGVtIHx8IGkgPT09IGluZGV4ID8gZ2VuZXJhdGVJZCgpIDogaWRzLmN1cnJlbnRbaV0pO1xuICAgICAgICB1cGRhdGVWYWx1ZXModXBkYXRlZEZpZWxkQXJyYXlWYWx1ZXMpO1xuICAgICAgICBzZXRGaWVsZHMoWy4uLnVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzXSk7XG4gICAgICAgIGNvbnRyb2wuX3VwZGF0ZUZpZWxkQXJyYXkobmFtZSwgdXBkYXRlZEZpZWxkQXJyYXlWYWx1ZXMsIHVwZGF0ZUF0LCB7XG4gICAgICAgICAgICBhcmdBOiBpbmRleCxcbiAgICAgICAgICAgIGFyZ0I6IHVwZGF0ZVZhbHVlLFxuICAgICAgICB9LCB0cnVlLCBmYWxzZSk7XG4gICAgfTtcbiAgICBjb25zdCByZXBsYWNlID0gKHZhbHVlKSA9PiB7XG4gICAgICAgIGNvbnN0IHVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzID0gY29udmVydFRvQXJyYXlQYXlsb2FkKGNsb25lT2JqZWN0KHZhbHVlKSk7XG4gICAgICAgIGlkcy5jdXJyZW50ID0gdXBkYXRlZEZpZWxkQXJyYXlWYWx1ZXMubWFwKGdlbmVyYXRlSWQpO1xuICAgICAgICB1cGRhdGVWYWx1ZXMoWy4uLnVwZGF0ZWRGaWVsZEFycmF5VmFsdWVzXSk7XG4gICAgICAgIHNldEZpZWxkcyhbLi4udXBkYXRlZEZpZWxkQXJyYXlWYWx1ZXNdKTtcbiAgICAgICAgY29udHJvbC5fdXBkYXRlRmllbGRBcnJheShuYW1lLCBbLi4udXBkYXRlZEZpZWxkQXJyYXlWYWx1ZXNdLCAoZGF0YSkgPT4gZGF0YSwge30sIHRydWUsIGZhbHNlKTtcbiAgICB9O1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnRyb2wuX3N0YXRlLmFjdGlvbiA9IGZhbHNlO1xuICAgICAgICBpc1dhdGNoZWQobmFtZSwgY29udHJvbC5fbmFtZXMpICYmXG4gICAgICAgICAgICBjb250cm9sLl9zdWJqZWN0cy5zdGF0ZS5uZXh0KHtcbiAgICAgICAgICAgICAgICAuLi5jb250cm9sLl9mb3JtU3RhdGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgaWYgKF9hY3Rpb25lZC5jdXJyZW50ICYmXG4gICAgICAgICAgICAoIWdldFZhbGlkYXRpb25Nb2Rlcyhjb250cm9sLl9vcHRpb25zLm1vZGUpLmlzT25TdWJtaXQgfHxcbiAgICAgICAgICAgICAgICBjb250cm9sLl9mb3JtU3RhdGUuaXNTdWJtaXR0ZWQpKSB7XG4gICAgICAgICAgICBpZiAoY29udHJvbC5fb3B0aW9ucy5yZXNvbHZlcikge1xuICAgICAgICAgICAgICAgIGNvbnRyb2wuX2V4ZWN1dGVTY2hlbWEoW25hbWVdKS50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXJyb3IgPSBnZXQocmVzdWx0LmVycm9ycywgbmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nRXJyb3IgPSBnZXQoY29udHJvbC5fZm9ybVN0YXRlLmVycm9ycywgbmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChleGlzdGluZ0Vycm9yXG4gICAgICAgICAgICAgICAgICAgICAgICA/ICghZXJyb3IgJiYgZXhpc3RpbmdFcnJvci50eXBlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChlcnJvciAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZXhpc3RpbmdFcnJvci50eXBlICE9PSBlcnJvci50eXBlIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGlzdGluZ0Vycm9yLm1lc3NhZ2UgIT09IGVycm9yLm1lc3NhZ2UpKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBlcnJvciAmJiBlcnJvci50eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gc2V0KGNvbnRyb2wuX2Zvcm1TdGF0ZS5lcnJvcnMsIG5hbWUsIGVycm9yKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdW5zZXQoY29udHJvbC5fZm9ybVN0YXRlLmVycm9ycywgbmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sLl9zdWJqZWN0cy5zdGF0ZS5uZXh0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcnM6IGNvbnRyb2wuX2Zvcm1TdGF0ZS5lcnJvcnMsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSBnZXQoY29udHJvbC5fZmllbGRzLCBuYW1lKTtcbiAgICAgICAgICAgICAgICBpZiAoZmllbGQgJiYgZmllbGQuX2YpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVGaWVsZChmaWVsZCwgY29udHJvbC5fZm9ybVZhbHVlcywgY29udHJvbC5fb3B0aW9ucy5jcml0ZXJpYU1vZGUgPT09IFZBTElEQVRJT05fTU9ERS5hbGwsIGNvbnRyb2wuX29wdGlvbnMuc2hvdWxkVXNlTmF0aXZlVmFsaWRhdGlvbiwgdHJ1ZSkudGhlbigoZXJyb3IpID0+ICFpc0VtcHR5T2JqZWN0KGVycm9yKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbC5fc3ViamVjdHMuc3RhdGUubmV4dCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JzOiB1cGRhdGVGaWVsZEFycmF5Um9vdEVycm9yKGNvbnRyb2wuX2Zvcm1TdGF0ZS5lcnJvcnMsIGVycm9yLCBuYW1lKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29udHJvbC5fc3ViamVjdHMudmFsdWVzLm5leHQoe1xuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIHZhbHVlczogeyAuLi5jb250cm9sLl9mb3JtVmFsdWVzIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBjb250cm9sLl9uYW1lcy5mb2N1cyAmJlxuICAgICAgICAgICAgZm9jdXNGaWVsZEJ5KGNvbnRyb2wuX2ZpZWxkcywgKGtleSkgPT4gISFrZXkgJiYga2V5LnN0YXJ0c1dpdGgoY29udHJvbC5fbmFtZXMuZm9jdXMgfHwgJycpKTtcbiAgICAgICAgY29udHJvbC5fbmFtZXMuZm9jdXMgPSAnJztcbiAgICAgICAgY29udHJvbC5fdXBkYXRlVmFsaWQoKTtcbiAgICAgICAgX2FjdGlvbmVkLmN1cnJlbnQgPSBmYWxzZTtcbiAgICB9LCBbZmllbGRzLCBuYW1lLCBjb250cm9sXSk7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgIWdldChjb250cm9sLl9mb3JtVmFsdWVzLCBuYW1lKSAmJiBjb250cm9sLl91cGRhdGVGaWVsZEFycmF5KG5hbWUpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgKGNvbnRyb2wuX29wdGlvbnMuc2hvdWxkVW5yZWdpc3RlciB8fCBzaG91bGRVbnJlZ2lzdGVyKSAmJlxuICAgICAgICAgICAgICAgIGNvbnRyb2wudW5yZWdpc3RlcihuYW1lKTtcbiAgICAgICAgfTtcbiAgICB9LCBbbmFtZSwgY29udHJvbCwga2V5TmFtZSwgc2hvdWxkVW5yZWdpc3Rlcl0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIHN3YXA6IFJlYWN0LnVzZUNhbGxiYWNrKHN3YXAsIFt1cGRhdGVWYWx1ZXMsIG5hbWUsIGNvbnRyb2xdKSxcbiAgICAgICAgbW92ZTogUmVhY3QudXNlQ2FsbGJhY2sobW92ZSwgW3VwZGF0ZVZhbHVlcywgbmFtZSwgY29udHJvbF0pLFxuICAgICAgICBwcmVwZW5kOiBSZWFjdC51c2VDYWxsYmFjayhwcmVwZW5kJDEsIFt1cGRhdGVWYWx1ZXMsIG5hbWUsIGNvbnRyb2xdKSxcbiAgICAgICAgYXBwZW5kOiBSZWFjdC51c2VDYWxsYmFjayhhcHBlbmQkMSwgW3VwZGF0ZVZhbHVlcywgbmFtZSwgY29udHJvbF0pLFxuICAgICAgICByZW1vdmU6IFJlYWN0LnVzZUNhbGxiYWNrKHJlbW92ZSwgW3VwZGF0ZVZhbHVlcywgbmFtZSwgY29udHJvbF0pLFxuICAgICAgICBpbnNlcnQ6IFJlYWN0LnVzZUNhbGxiYWNrKGluc2VydCQxLCBbdXBkYXRlVmFsdWVzLCBuYW1lLCBjb250cm9sXSksXG4gICAgICAgIHVwZGF0ZTogUmVhY3QudXNlQ2FsbGJhY2sodXBkYXRlLCBbdXBkYXRlVmFsdWVzLCBuYW1lLCBjb250cm9sXSksXG4gICAgICAgIHJlcGxhY2U6IFJlYWN0LnVzZUNhbGxiYWNrKHJlcGxhY2UsIFt1cGRhdGVWYWx1ZXMsIG5hbWUsIGNvbnRyb2xdKSxcbiAgICAgICAgZmllbGRzOiBSZWFjdC51c2VNZW1vKCgpID0+IGZpZWxkcy5tYXAoKGZpZWxkLCBpbmRleCkgPT4gKHtcbiAgICAgICAgICAgIC4uLmZpZWxkLFxuICAgICAgICAgICAgW2tleU5hbWVdOiBpZHMuY3VycmVudFtpbmRleF0gfHwgZ2VuZXJhdGVJZCgpLFxuICAgICAgICB9KSksIFtmaWVsZHMsIGtleU5hbWVdKSxcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVTdWJqZWN0KCkge1xuICAgIGxldCBfb2JzZXJ2ZXJzID0gW107XG4gICAgY29uc3QgbmV4dCA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICBmb3IgKGNvbnN0IG9ic2VydmVyIG9mIF9vYnNlcnZlcnMpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQgJiYgb2JzZXJ2ZXIubmV4dCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHN1YnNjcmliZSA9IChvYnNlcnZlcikgPT4ge1xuICAgICAgICBfb2JzZXJ2ZXJzLnB1c2gob2JzZXJ2ZXIpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdW5zdWJzY3JpYmU6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBfb2JzZXJ2ZXJzID0gX29ic2VydmVycy5maWx0ZXIoKG8pID0+IG8gIT09IG9ic2VydmVyKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfTtcbiAgICBjb25zdCB1bnN1YnNjcmliZSA9ICgpID0+IHtcbiAgICAgICAgX29ic2VydmVycyA9IFtdO1xuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0IG9ic2VydmVycygpIHtcbiAgICAgICAgICAgIHJldHVybiBfb2JzZXJ2ZXJzO1xuICAgICAgICB9LFxuICAgICAgICBuZXh0LFxuICAgICAgICBzdWJzY3JpYmUsXG4gICAgICAgIHVuc3Vic2NyaWJlLFxuICAgIH07XG59XG5cbnZhciBpc1ByaW1pdGl2ZSA9ICh2YWx1ZSkgPT4gaXNOdWxsT3JVbmRlZmluZWQodmFsdWUpIHx8ICFpc09iamVjdFR5cGUodmFsdWUpO1xuXG5mdW5jdGlvbiBkZWVwRXF1YWwob2JqZWN0MSwgb2JqZWN0Mikge1xuICAgIGlmIChpc1ByaW1pdGl2ZShvYmplY3QxKSB8fCBpc1ByaW1pdGl2ZShvYmplY3QyKSkge1xuICAgICAgICByZXR1cm4gb2JqZWN0MSA9PT0gb2JqZWN0MjtcbiAgICB9XG4gICAgaWYgKGlzRGF0ZU9iamVjdChvYmplY3QxKSAmJiBpc0RhdGVPYmplY3Qob2JqZWN0MikpIHtcbiAgICAgICAgcmV0dXJuIG9iamVjdDEuZ2V0VGltZSgpID09PSBvYmplY3QyLmdldFRpbWUoKTtcbiAgICB9XG4gICAgY29uc3Qga2V5czEgPSBPYmplY3Qua2V5cyhvYmplY3QxKTtcbiAgICBjb25zdCBrZXlzMiA9IE9iamVjdC5rZXlzKG9iamVjdDIpO1xuICAgIGlmIChrZXlzMS5sZW5ndGggIT09IGtleXMyLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAoY29uc3Qga2V5IG9mIGtleXMxKSB7XG4gICAgICAgIGNvbnN0IHZhbDEgPSBvYmplY3QxW2tleV07XG4gICAgICAgIGlmICgha2V5czIuaW5jbHVkZXMoa2V5KSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChrZXkgIT09ICdyZWYnKSB7XG4gICAgICAgICAgICBjb25zdCB2YWwyID0gb2JqZWN0MltrZXldO1xuICAgICAgICAgICAgaWYgKChpc0RhdGVPYmplY3QodmFsMSkgJiYgaXNEYXRlT2JqZWN0KHZhbDIpKSB8fFxuICAgICAgICAgICAgICAgIChpc09iamVjdCh2YWwxKSAmJiBpc09iamVjdCh2YWwyKSkgfHxcbiAgICAgICAgICAgICAgICAoQXJyYXkuaXNBcnJheSh2YWwxKSAmJiBBcnJheS5pc0FycmF5KHZhbDIpKVxuICAgICAgICAgICAgICAgID8gIWRlZXBFcXVhbCh2YWwxLCB2YWwyKVxuICAgICAgICAgICAgICAgIDogdmFsMSAhPT0gdmFsMikge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxudmFyIGlzTXVsdGlwbGVTZWxlY3QgPSAoZWxlbWVudCkgPT4gZWxlbWVudC50eXBlID09PSBgc2VsZWN0LW11bHRpcGxlYDtcblxudmFyIGlzUmFkaW9PckNoZWNrYm94ID0gKHJlZikgPT4gaXNSYWRpb0lucHV0KHJlZikgfHwgaXNDaGVja0JveElucHV0KHJlZik7XG5cbnZhciBsaXZlID0gKHJlZikgPT4gaXNIVE1MRWxlbWVudChyZWYpICYmIHJlZi5pc0Nvbm5lY3RlZDtcblxudmFyIG9iamVjdEhhc0Z1bmN0aW9uID0gKGRhdGEpID0+IHtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBkYXRhKSB7XG4gICAgICAgIGlmIChpc0Z1bmN0aW9uKGRhdGFba2V5XSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn07XG5cbmZ1bmN0aW9uIG1hcmtGaWVsZHNEaXJ0eShkYXRhLCBmaWVsZHMgPSB7fSkge1xuICAgIGNvbnN0IGlzUGFyZW50Tm9kZUFycmF5ID0gQXJyYXkuaXNBcnJheShkYXRhKTtcbiAgICBpZiAoaXNPYmplY3QoZGF0YSkgfHwgaXNQYXJlbnROb2RlQXJyYXkpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gZGF0YSkge1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YVtrZXldKSB8fFxuICAgICAgICAgICAgICAgIChpc09iamVjdChkYXRhW2tleV0pICYmICFvYmplY3RIYXNGdW5jdGlvbihkYXRhW2tleV0pKSkge1xuICAgICAgICAgICAgICAgIGZpZWxkc1trZXldID0gQXJyYXkuaXNBcnJheShkYXRhW2tleV0pID8gW10gOiB7fTtcbiAgICAgICAgICAgICAgICBtYXJrRmllbGRzRGlydHkoZGF0YVtrZXldLCBmaWVsZHNba2V5XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICghaXNOdWxsT3JVbmRlZmluZWQoZGF0YVtrZXldKSkge1xuICAgICAgICAgICAgICAgIGZpZWxkc1trZXldID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmllbGRzO1xufVxuZnVuY3Rpb24gZ2V0RGlydHlGaWVsZHNGcm9tRGVmYXVsdFZhbHVlcyhkYXRhLCBmb3JtVmFsdWVzLCBkaXJ0eUZpZWxkc0Zyb21WYWx1ZXMpIHtcbiAgICBjb25zdCBpc1BhcmVudE5vZGVBcnJheSA9IEFycmF5LmlzQXJyYXkoZGF0YSk7XG4gICAgaWYgKGlzT2JqZWN0KGRhdGEpIHx8IGlzUGFyZW50Tm9kZUFycmF5KSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIGRhdGEpIHtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGFba2V5XSkgfHxcbiAgICAgICAgICAgICAgICAoaXNPYmplY3QoZGF0YVtrZXldKSAmJiAhb2JqZWN0SGFzRnVuY3Rpb24oZGF0YVtrZXldKSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNVbmRlZmluZWQoZm9ybVZhbHVlcykgfHxcbiAgICAgICAgICAgICAgICAgICAgaXNQcmltaXRpdmUoZGlydHlGaWVsZHNGcm9tVmFsdWVzW2tleV0pKSB7XG4gICAgICAgICAgICAgICAgICAgIGRpcnR5RmllbGRzRnJvbVZhbHVlc1trZXldID0gQXJyYXkuaXNBcnJheShkYXRhW2tleV0pXG4gICAgICAgICAgICAgICAgICAgICAgICA/IG1hcmtGaWVsZHNEaXJ0eShkYXRhW2tleV0sIFtdKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiB7IC4uLm1hcmtGaWVsZHNEaXJ0eShkYXRhW2tleV0pIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBnZXREaXJ0eUZpZWxkc0Zyb21EZWZhdWx0VmFsdWVzKGRhdGFba2V5XSwgaXNOdWxsT3JVbmRlZmluZWQoZm9ybVZhbHVlcykgPyB7fSA6IGZvcm1WYWx1ZXNba2V5XSwgZGlydHlGaWVsZHNGcm9tVmFsdWVzW2tleV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGRpcnR5RmllbGRzRnJvbVZhbHVlc1trZXldID0gIWRlZXBFcXVhbChkYXRhW2tleV0sIGZvcm1WYWx1ZXNba2V5XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRpcnR5RmllbGRzRnJvbVZhbHVlcztcbn1cbnZhciBnZXREaXJ0eUZpZWxkcyA9IChkZWZhdWx0VmFsdWVzLCBmb3JtVmFsdWVzKSA9PiBnZXREaXJ0eUZpZWxkc0Zyb21EZWZhdWx0VmFsdWVzKGRlZmF1bHRWYWx1ZXMsIGZvcm1WYWx1ZXMsIG1hcmtGaWVsZHNEaXJ0eShmb3JtVmFsdWVzKSk7XG5cbnZhciBnZXRGaWVsZFZhbHVlQXMgPSAodmFsdWUsIHsgdmFsdWVBc051bWJlciwgdmFsdWVBc0RhdGUsIHNldFZhbHVlQXMgfSkgPT4gaXNVbmRlZmluZWQodmFsdWUpXG4gICAgPyB2YWx1ZVxuICAgIDogdmFsdWVBc051bWJlclxuICAgICAgICA/IHZhbHVlID09PSAnJ1xuICAgICAgICAgICAgPyBOYU5cbiAgICAgICAgICAgIDogdmFsdWVcbiAgICAgICAgICAgICAgICA/ICt2YWx1ZVxuICAgICAgICAgICAgICAgIDogdmFsdWVcbiAgICAgICAgOiB2YWx1ZUFzRGF0ZSAmJiBpc1N0cmluZyh2YWx1ZSlcbiAgICAgICAgICAgID8gbmV3IERhdGUodmFsdWUpXG4gICAgICAgICAgICA6IHNldFZhbHVlQXNcbiAgICAgICAgICAgICAgICA/IHNldFZhbHVlQXModmFsdWUpXG4gICAgICAgICAgICAgICAgOiB2YWx1ZTtcblxuZnVuY3Rpb24gZ2V0RmllbGRWYWx1ZShfZikge1xuICAgIGNvbnN0IHJlZiA9IF9mLnJlZjtcbiAgICBpZiAoX2YucmVmcyA/IF9mLnJlZnMuZXZlcnkoKHJlZikgPT4gcmVmLmRpc2FibGVkKSA6IHJlZi5kaXNhYmxlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChpc0ZpbGVJbnB1dChyZWYpKSB7XG4gICAgICAgIHJldHVybiByZWYuZmlsZXM7XG4gICAgfVxuICAgIGlmIChpc1JhZGlvSW5wdXQocmVmKSkge1xuICAgICAgICByZXR1cm4gZ2V0UmFkaW9WYWx1ZShfZi5yZWZzKS52YWx1ZTtcbiAgICB9XG4gICAgaWYgKGlzTXVsdGlwbGVTZWxlY3QocmVmKSkge1xuICAgICAgICByZXR1cm4gWy4uLnJlZi5zZWxlY3RlZE9wdGlvbnNdLm1hcCgoeyB2YWx1ZSB9KSA9PiB2YWx1ZSk7XG4gICAgfVxuICAgIGlmIChpc0NoZWNrQm94SW5wdXQocmVmKSkge1xuICAgICAgICByZXR1cm4gZ2V0Q2hlY2tib3hWYWx1ZShfZi5yZWZzKS52YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGdldEZpZWxkVmFsdWVBcyhpc1VuZGVmaW5lZChyZWYudmFsdWUpID8gX2YucmVmLnZhbHVlIDogcmVmLnZhbHVlLCBfZik7XG59XG5cbnZhciBnZXRSZXNvbHZlck9wdGlvbnMgPSAoZmllbGRzTmFtZXMsIF9maWVsZHMsIGNyaXRlcmlhTW9kZSwgc2hvdWxkVXNlTmF0aXZlVmFsaWRhdGlvbikgPT4ge1xuICAgIGNvbnN0IGZpZWxkcyA9IHt9O1xuICAgIGZvciAoY29uc3QgbmFtZSBvZiBmaWVsZHNOYW1lcykge1xuICAgICAgICBjb25zdCBmaWVsZCA9IGdldChfZmllbGRzLCBuYW1lKTtcbiAgICAgICAgZmllbGQgJiYgc2V0KGZpZWxkcywgbmFtZSwgZmllbGQuX2YpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBjcml0ZXJpYU1vZGUsXG4gICAgICAgIG5hbWVzOiBbLi4uZmllbGRzTmFtZXNdLFxuICAgICAgICBmaWVsZHMsXG4gICAgICAgIHNob3VsZFVzZU5hdGl2ZVZhbGlkYXRpb24sXG4gICAgfTtcbn07XG5cbnZhciBnZXRSdWxlVmFsdWUgPSAocnVsZSkgPT4gaXNVbmRlZmluZWQocnVsZSlcbiAgICA/IHJ1bGVcbiAgICA6IGlzUmVnZXgocnVsZSlcbiAgICAgICAgPyBydWxlLnNvdXJjZVxuICAgICAgICA6IGlzT2JqZWN0KHJ1bGUpXG4gICAgICAgICAgICA/IGlzUmVnZXgocnVsZS52YWx1ZSlcbiAgICAgICAgICAgICAgICA/IHJ1bGUudmFsdWUuc291cmNlXG4gICAgICAgICAgICAgICAgOiBydWxlLnZhbHVlXG4gICAgICAgICAgICA6IHJ1bGU7XG5cbnZhciBoYXNWYWxpZGF0aW9uID0gKG9wdGlvbnMpID0+IG9wdGlvbnMubW91bnQgJiZcbiAgICAob3B0aW9ucy5yZXF1aXJlZCB8fFxuICAgICAgICBvcHRpb25zLm1pbiB8fFxuICAgICAgICBvcHRpb25zLm1heCB8fFxuICAgICAgICBvcHRpb25zLm1heExlbmd0aCB8fFxuICAgICAgICBvcHRpb25zLm1pbkxlbmd0aCB8fFxuICAgICAgICBvcHRpb25zLnBhdHRlcm4gfHxcbiAgICAgICAgb3B0aW9ucy52YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIHNjaGVtYUVycm9yTG9va3VwKGVycm9ycywgX2ZpZWxkcywgbmFtZSkge1xuICAgIGNvbnN0IGVycm9yID0gZ2V0KGVycm9ycywgbmFtZSk7XG4gICAgaWYgKGVycm9yIHx8IGlzS2V5KG5hbWUpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBlcnJvcixcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IG5hbWVzID0gbmFtZS5zcGxpdCgnLicpO1xuICAgIHdoaWxlIChuYW1lcy5sZW5ndGgpIHtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gbmFtZXMuam9pbignLicpO1xuICAgICAgICBjb25zdCBmaWVsZCA9IGdldChfZmllbGRzLCBmaWVsZE5hbWUpO1xuICAgICAgICBjb25zdCBmb3VuZEVycm9yID0gZ2V0KGVycm9ycywgZmllbGROYW1lKTtcbiAgICAgICAgaWYgKGZpZWxkICYmICFBcnJheS5pc0FycmF5KGZpZWxkKSAmJiBuYW1lICE9PSBmaWVsZE5hbWUpIHtcbiAgICAgICAgICAgIHJldHVybiB7IG5hbWUgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZm91bmRFcnJvciAmJiBmb3VuZEVycm9yLnR5cGUpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbmFtZTogZmllbGROYW1lLFxuICAgICAgICAgICAgICAgIGVycm9yOiBmb3VuZEVycm9yLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBuYW1lcy5wb3AoKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZSxcbiAgICB9O1xufVxuXG52YXIgc2tpcFZhbGlkYXRpb24gPSAoaXNCbHVyRXZlbnQsIGlzVG91Y2hlZCwgaXNTdWJtaXR0ZWQsIHJlVmFsaWRhdGVNb2RlLCBtb2RlKSA9PiB7XG4gICAgaWYgKG1vZGUuaXNPbkFsbCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGVsc2UgaWYgKCFpc1N1Ym1pdHRlZCAmJiBtb2RlLmlzT25Ub3VjaCkge1xuICAgICAgICByZXR1cm4gIShpc1RvdWNoZWQgfHwgaXNCbHVyRXZlbnQpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc1N1Ym1pdHRlZCA/IHJlVmFsaWRhdGVNb2RlLmlzT25CbHVyIDogbW9kZS5pc09uQmx1cikge1xuICAgICAgICByZXR1cm4gIWlzQmx1ckV2ZW50O1xuICAgIH1cbiAgICBlbHNlIGlmIChpc1N1Ym1pdHRlZCA/IHJlVmFsaWRhdGVNb2RlLmlzT25DaGFuZ2UgOiBtb2RlLmlzT25DaGFuZ2UpIHtcbiAgICAgICAgcmV0dXJuIGlzQmx1ckV2ZW50O1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG5cbnZhciB1bnNldEVtcHR5QXJyYXkgPSAocmVmLCBuYW1lKSA9PiAhY29tcGFjdChnZXQocmVmLCBuYW1lKSkubGVuZ3RoICYmIHVuc2V0KHJlZiwgbmFtZSk7XG5cbmNvbnN0IGRlZmF1bHRPcHRpb25zID0ge1xuICAgIG1vZGU6IFZBTElEQVRJT05fTU9ERS5vblN1Ym1pdCxcbiAgICByZVZhbGlkYXRlTW9kZTogVkFMSURBVElPTl9NT0RFLm9uQ2hhbmdlLFxuICAgIHNob3VsZEZvY3VzRXJyb3I6IHRydWUsXG59O1xuZnVuY3Rpb24gY3JlYXRlRm9ybUNvbnRyb2wocHJvcHMgPSB7fSwgZmx1c2hSb290UmVuZGVyKSB7XG4gICAgbGV0IF9vcHRpb25zID0ge1xuICAgICAgICAuLi5kZWZhdWx0T3B0aW9ucyxcbiAgICAgICAgLi4ucHJvcHMsXG4gICAgfTtcbiAgICBsZXQgX2Zvcm1TdGF0ZSA9IHtcbiAgICAgICAgc3VibWl0Q291bnQ6IDAsXG4gICAgICAgIGlzRGlydHk6IGZhbHNlLFxuICAgICAgICBpc0xvYWRpbmc6IGlzRnVuY3Rpb24oX29wdGlvbnMuZGVmYXVsdFZhbHVlcyksXG4gICAgICAgIGlzVmFsaWRhdGluZzogZmFsc2UsXG4gICAgICAgIGlzU3VibWl0dGVkOiBmYWxzZSxcbiAgICAgICAgaXNTdWJtaXR0aW5nOiBmYWxzZSxcbiAgICAgICAgaXNTdWJtaXRTdWNjZXNzZnVsOiBmYWxzZSxcbiAgICAgICAgaXNWYWxpZDogZmFsc2UsXG4gICAgICAgIHRvdWNoZWRGaWVsZHM6IHt9LFxuICAgICAgICBkaXJ0eUZpZWxkczoge30sXG4gICAgICAgIGVycm9yczoge30sXG4gICAgfTtcbiAgICBsZXQgX2ZpZWxkcyA9IHt9O1xuICAgIGxldCBfZGVmYXVsdFZhbHVlcyA9IGlzT2JqZWN0KF9vcHRpb25zLmRlZmF1bHRWYWx1ZXMpIHx8IGlzT2JqZWN0KF9vcHRpb25zLnZhbHVlcylcbiAgICAgICAgPyBjbG9uZU9iamVjdChfb3B0aW9ucy5kZWZhdWx0VmFsdWVzIHx8IF9vcHRpb25zLnZhbHVlcykgfHwge31cbiAgICAgICAgOiB7fTtcbiAgICBsZXQgX2Zvcm1WYWx1ZXMgPSBfb3B0aW9ucy5zaG91bGRVbnJlZ2lzdGVyXG4gICAgICAgID8ge31cbiAgICAgICAgOiBjbG9uZU9iamVjdChfZGVmYXVsdFZhbHVlcyk7XG4gICAgbGV0IF9zdGF0ZSA9IHtcbiAgICAgICAgYWN0aW9uOiBmYWxzZSxcbiAgICAgICAgbW91bnQ6IGZhbHNlLFxuICAgICAgICB3YXRjaDogZmFsc2UsXG4gICAgfTtcbiAgICBsZXQgX25hbWVzID0ge1xuICAgICAgICBtb3VudDogbmV3IFNldCgpLFxuICAgICAgICB1bk1vdW50OiBuZXcgU2V0KCksXG4gICAgICAgIGFycmF5OiBuZXcgU2V0KCksXG4gICAgICAgIHdhdGNoOiBuZXcgU2V0KCksXG4gICAgfTtcbiAgICBsZXQgZGVsYXlFcnJvckNhbGxiYWNrO1xuICAgIGxldCB0aW1lciA9IDA7XG4gICAgY29uc3QgX3Byb3h5Rm9ybVN0YXRlID0ge1xuICAgICAgICBpc0RpcnR5OiBmYWxzZSxcbiAgICAgICAgZGlydHlGaWVsZHM6IGZhbHNlLFxuICAgICAgICB0b3VjaGVkRmllbGRzOiBmYWxzZSxcbiAgICAgICAgaXNWYWxpZGF0aW5nOiBmYWxzZSxcbiAgICAgICAgaXNWYWxpZDogZmFsc2UsXG4gICAgICAgIGVycm9yczogZmFsc2UsXG4gICAgfTtcbiAgICBjb25zdCBfc3ViamVjdHMgPSB7XG4gICAgICAgIHZhbHVlczogY3JlYXRlU3ViamVjdCgpLFxuICAgICAgICBhcnJheTogY3JlYXRlU3ViamVjdCgpLFxuICAgICAgICBzdGF0ZTogY3JlYXRlU3ViamVjdCgpLFxuICAgIH07XG4gICAgY29uc3Qgc2hvdWxkQ2FwdHVyZURpcnR5RmllbGRzID0gcHJvcHMucmVzZXRPcHRpb25zICYmIHByb3BzLnJlc2V0T3B0aW9ucy5rZWVwRGlydHlWYWx1ZXM7XG4gICAgY29uc3QgdmFsaWRhdGlvbk1vZGVCZWZvcmVTdWJtaXQgPSBnZXRWYWxpZGF0aW9uTW9kZXMoX29wdGlvbnMubW9kZSk7XG4gICAgY29uc3QgdmFsaWRhdGlvbk1vZGVBZnRlclN1Ym1pdCA9IGdldFZhbGlkYXRpb25Nb2Rlcyhfb3B0aW9ucy5yZVZhbGlkYXRlTW9kZSk7XG4gICAgY29uc3Qgc2hvdWxkRGlzcGxheUFsbEFzc29jaWF0ZWRFcnJvcnMgPSBfb3B0aW9ucy5jcml0ZXJpYU1vZGUgPT09IFZBTElEQVRJT05fTU9ERS5hbGw7XG4gICAgY29uc3QgZGVib3VuY2UgPSAoY2FsbGJhY2spID0+ICh3YWl0KSA9PiB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgIHRpbWVyID0gc2V0VGltZW91dChjYWxsYmFjaywgd2FpdCk7XG4gICAgfTtcbiAgICBjb25zdCBfdXBkYXRlVmFsaWQgPSBhc3luYyAoc2hvdWxkVXBkYXRlVmFsaWQpID0+IHtcbiAgICAgICAgaWYgKF9wcm94eUZvcm1TdGF0ZS5pc1ZhbGlkIHx8IHNob3VsZFVwZGF0ZVZhbGlkKSB7XG4gICAgICAgICAgICBjb25zdCBpc1ZhbGlkID0gX29wdGlvbnMucmVzb2x2ZXJcbiAgICAgICAgICAgICAgICA/IGlzRW1wdHlPYmplY3QoKGF3YWl0IF9leGVjdXRlU2NoZW1hKCkpLmVycm9ycylcbiAgICAgICAgICAgICAgICA6IGF3YWl0IGV4ZWN1dGVCdWlsdEluVmFsaWRhdGlvbihfZmllbGRzLCB0cnVlKTtcbiAgICAgICAgICAgIGlmIChpc1ZhbGlkICE9PSBfZm9ybVN0YXRlLmlzVmFsaWQpIHtcbiAgICAgICAgICAgICAgICBfc3ViamVjdHMuc3RhdGUubmV4dCh7XG4gICAgICAgICAgICAgICAgICAgIGlzVmFsaWQsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IF91cGRhdGVJc1ZhbGlkYXRpbmcgPSAodmFsdWUpID0+IF9wcm94eUZvcm1TdGF0ZS5pc1ZhbGlkYXRpbmcgJiZcbiAgICAgICAgX3N1YmplY3RzLnN0YXRlLm5leHQoe1xuICAgICAgICAgICAgaXNWYWxpZGF0aW5nOiB2YWx1ZSxcbiAgICAgICAgfSk7XG4gICAgY29uc3QgX3VwZGF0ZUZpZWxkQXJyYXkgPSAobmFtZSwgdmFsdWVzID0gW10sIG1ldGhvZCwgYXJncywgc2hvdWxkU2V0VmFsdWVzID0gdHJ1ZSwgc2hvdWxkVXBkYXRlRmllbGRzQW5kU3RhdGUgPSB0cnVlKSA9PiB7XG4gICAgICAgIGlmIChhcmdzICYmIG1ldGhvZCkge1xuICAgICAgICAgICAgX3N0YXRlLmFjdGlvbiA9IHRydWU7XG4gICAgICAgICAgICBpZiAoc2hvdWxkVXBkYXRlRmllbGRzQW5kU3RhdGUgJiYgQXJyYXkuaXNBcnJheShnZXQoX2ZpZWxkcywgbmFtZSkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRWYWx1ZXMgPSBtZXRob2QoZ2V0KF9maWVsZHMsIG5hbWUpLCBhcmdzLmFyZ0EsIGFyZ3MuYXJnQik7XG4gICAgICAgICAgICAgICAgc2hvdWxkU2V0VmFsdWVzICYmIHNldChfZmllbGRzLCBuYW1lLCBmaWVsZFZhbHVlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2hvdWxkVXBkYXRlRmllbGRzQW5kU3RhdGUgJiZcbiAgICAgICAgICAgICAgICBBcnJheS5pc0FycmF5KGdldChfZm9ybVN0YXRlLmVycm9ycywgbmFtZSkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXJyb3JzID0gbWV0aG9kKGdldChfZm9ybVN0YXRlLmVycm9ycywgbmFtZSksIGFyZ3MuYXJnQSwgYXJncy5hcmdCKTtcbiAgICAgICAgICAgICAgICBzaG91bGRTZXRWYWx1ZXMgJiYgc2V0KF9mb3JtU3RhdGUuZXJyb3JzLCBuYW1lLCBlcnJvcnMpO1xuICAgICAgICAgICAgICAgIHVuc2V0RW1wdHlBcnJheShfZm9ybVN0YXRlLmVycm9ycywgbmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoX3Byb3h5Rm9ybVN0YXRlLnRvdWNoZWRGaWVsZHMgJiZcbiAgICAgICAgICAgICAgICBzaG91bGRVcGRhdGVGaWVsZHNBbmRTdGF0ZSAmJlxuICAgICAgICAgICAgICAgIEFycmF5LmlzQXJyYXkoZ2V0KF9mb3JtU3RhdGUudG91Y2hlZEZpZWxkcywgbmFtZSkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdG91Y2hlZEZpZWxkcyA9IG1ldGhvZChnZXQoX2Zvcm1TdGF0ZS50b3VjaGVkRmllbGRzLCBuYW1lKSwgYXJncy5hcmdBLCBhcmdzLmFyZ0IpO1xuICAgICAgICAgICAgICAgIHNob3VsZFNldFZhbHVlcyAmJiBzZXQoX2Zvcm1TdGF0ZS50b3VjaGVkRmllbGRzLCBuYW1lLCB0b3VjaGVkRmllbGRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfcHJveHlGb3JtU3RhdGUuZGlydHlGaWVsZHMpIHtcbiAgICAgICAgICAgICAgICBfZm9ybVN0YXRlLmRpcnR5RmllbGRzID0gZ2V0RGlydHlGaWVsZHMoX2RlZmF1bHRWYWx1ZXMsIF9mb3JtVmFsdWVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9zdWJqZWN0cy5zdGF0ZS5uZXh0KHtcbiAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgIGlzRGlydHk6IF9nZXREaXJ0eShuYW1lLCB2YWx1ZXMpLFxuICAgICAgICAgICAgICAgIGRpcnR5RmllbGRzOiBfZm9ybVN0YXRlLmRpcnR5RmllbGRzLFxuICAgICAgICAgICAgICAgIGVycm9yczogX2Zvcm1TdGF0ZS5lcnJvcnMsXG4gICAgICAgICAgICAgICAgaXNWYWxpZDogX2Zvcm1TdGF0ZS5pc1ZhbGlkLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZXQoX2Zvcm1WYWx1ZXMsIG5hbWUsIHZhbHVlcyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHVwZGF0ZUVycm9ycyA9IChuYW1lLCBlcnJvcikgPT4ge1xuICAgICAgICBzZXQoX2Zvcm1TdGF0ZS5lcnJvcnMsIG5hbWUsIGVycm9yKTtcbiAgICAgICAgX3N1YmplY3RzLnN0YXRlLm5leHQoe1xuICAgICAgICAgICAgZXJyb3JzOiBfZm9ybVN0YXRlLmVycm9ycyxcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBjb25zdCB1cGRhdGVWYWxpZEFuZFZhbHVlID0gKG5hbWUsIHNob3VsZFNraXBTZXRWYWx1ZUFzLCB2YWx1ZSwgcmVmKSA9PiB7XG4gICAgICAgIGNvbnN0IGZpZWxkID0gZ2V0KF9maWVsZHMsIG5hbWUpO1xuICAgICAgICBpZiAoZmllbGQpIHtcbiAgICAgICAgICAgIGNvbnN0IGRlZmF1bHRWYWx1ZSA9IGdldChfZm9ybVZhbHVlcywgbmFtZSwgaXNVbmRlZmluZWQodmFsdWUpID8gZ2V0KF9kZWZhdWx0VmFsdWVzLCBuYW1lKSA6IHZhbHVlKTtcbiAgICAgICAgICAgIGlzVW5kZWZpbmVkKGRlZmF1bHRWYWx1ZSkgfHxcbiAgICAgICAgICAgICAgICAocmVmICYmIHJlZi5kZWZhdWx0Q2hlY2tlZCkgfHxcbiAgICAgICAgICAgICAgICBzaG91bGRTa2lwU2V0VmFsdWVBc1xuICAgICAgICAgICAgICAgID8gc2V0KF9mb3JtVmFsdWVzLCBuYW1lLCBzaG91bGRTa2lwU2V0VmFsdWVBcyA/IGRlZmF1bHRWYWx1ZSA6IGdldEZpZWxkVmFsdWUoZmllbGQuX2YpKVxuICAgICAgICAgICAgICAgIDogc2V0RmllbGRWYWx1ZShuYW1lLCBkZWZhdWx0VmFsdWUpO1xuICAgICAgICAgICAgX3N0YXRlLm1vdW50ICYmIF91cGRhdGVWYWxpZCgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCB1cGRhdGVUb3VjaEFuZERpcnR5ID0gKG5hbWUsIGZpZWxkVmFsdWUsIGlzQmx1ckV2ZW50LCBzaG91bGREaXJ0eSwgc2hvdWxkUmVuZGVyKSA9PiB7XG4gICAgICAgIGxldCBzaG91bGRVcGRhdGVGaWVsZCA9IGZhbHNlO1xuICAgICAgICBsZXQgaXNQcmV2aW91c0RpcnR5ID0gZmFsc2U7XG4gICAgICAgIGNvbnN0IG91dHB1dCA9IHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgIH07XG4gICAgICAgIGlmICghaXNCbHVyRXZlbnQgfHwgc2hvdWxkRGlydHkpIHtcbiAgICAgICAgICAgIGlmIChfcHJveHlGb3JtU3RhdGUuaXNEaXJ0eSkge1xuICAgICAgICAgICAgICAgIGlzUHJldmlvdXNEaXJ0eSA9IF9mb3JtU3RhdGUuaXNEaXJ0eTtcbiAgICAgICAgICAgICAgICBfZm9ybVN0YXRlLmlzRGlydHkgPSBvdXRwdXQuaXNEaXJ0eSA9IF9nZXREaXJ0eSgpO1xuICAgICAgICAgICAgICAgIHNob3VsZFVwZGF0ZUZpZWxkID0gaXNQcmV2aW91c0RpcnR5ICE9PSBvdXRwdXQuaXNEaXJ0eTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGlzQ3VycmVudEZpZWxkUHJpc3RpbmUgPSBkZWVwRXF1YWwoZ2V0KF9kZWZhdWx0VmFsdWVzLCBuYW1lKSwgZmllbGRWYWx1ZSk7XG4gICAgICAgICAgICBpc1ByZXZpb3VzRGlydHkgPSBnZXQoX2Zvcm1TdGF0ZS5kaXJ0eUZpZWxkcywgbmFtZSk7XG4gICAgICAgICAgICBpc0N1cnJlbnRGaWVsZFByaXN0aW5lXG4gICAgICAgICAgICAgICAgPyB1bnNldChfZm9ybVN0YXRlLmRpcnR5RmllbGRzLCBuYW1lKVxuICAgICAgICAgICAgICAgIDogc2V0KF9mb3JtU3RhdGUuZGlydHlGaWVsZHMsIG5hbWUsIHRydWUpO1xuICAgICAgICAgICAgb3V0cHV0LmRpcnR5RmllbGRzID0gX2Zvcm1TdGF0ZS5kaXJ0eUZpZWxkcztcbiAgICAgICAgICAgIHNob3VsZFVwZGF0ZUZpZWxkID1cbiAgICAgICAgICAgICAgICBzaG91bGRVcGRhdGVGaWVsZCB8fFxuICAgICAgICAgICAgICAgICAgICAoX3Byb3h5Rm9ybVN0YXRlLmRpcnR5RmllbGRzICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1ByZXZpb3VzRGlydHkgIT09ICFpc0N1cnJlbnRGaWVsZFByaXN0aW5lKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNCbHVyRXZlbnQpIHtcbiAgICAgICAgICAgIGNvbnN0IGlzUHJldmlvdXNGaWVsZFRvdWNoZWQgPSBnZXQoX2Zvcm1TdGF0ZS50b3VjaGVkRmllbGRzLCBuYW1lKTtcbiAgICAgICAgICAgIGlmICghaXNQcmV2aW91c0ZpZWxkVG91Y2hlZCkge1xuICAgICAgICAgICAgICAgIHNldChfZm9ybVN0YXRlLnRvdWNoZWRGaWVsZHMsIG5hbWUsIGlzQmx1ckV2ZW50KTtcbiAgICAgICAgICAgICAgICBvdXRwdXQudG91Y2hlZEZpZWxkcyA9IF9mb3JtU3RhdGUudG91Y2hlZEZpZWxkcztcbiAgICAgICAgICAgICAgICBzaG91bGRVcGRhdGVGaWVsZCA9XG4gICAgICAgICAgICAgICAgICAgIHNob3VsZFVwZGF0ZUZpZWxkIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAoX3Byb3h5Rm9ybVN0YXRlLnRvdWNoZWRGaWVsZHMgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1ByZXZpb3VzRmllbGRUb3VjaGVkICE9PSBpc0JsdXJFdmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc2hvdWxkVXBkYXRlRmllbGQgJiYgc2hvdWxkUmVuZGVyICYmIF9zdWJqZWN0cy5zdGF0ZS5uZXh0KG91dHB1dCk7XG4gICAgICAgIHJldHVybiBzaG91bGRVcGRhdGVGaWVsZCA/IG91dHB1dCA6IHt9O1xuICAgIH07XG4gICAgY29uc3Qgc2hvdWxkUmVuZGVyQnlFcnJvciA9IChuYW1lLCBpc1ZhbGlkLCBlcnJvciwgZmllbGRTdGF0ZSkgPT4ge1xuICAgICAgICBjb25zdCBwcmV2aW91c0ZpZWxkRXJyb3IgPSBnZXQoX2Zvcm1TdGF0ZS5lcnJvcnMsIG5hbWUpO1xuICAgICAgICBjb25zdCBzaG91bGRVcGRhdGVWYWxpZCA9IF9wcm94eUZvcm1TdGF0ZS5pc1ZhbGlkICYmXG4gICAgICAgICAgICBpc0Jvb2xlYW4oaXNWYWxpZCkgJiZcbiAgICAgICAgICAgIF9mb3JtU3RhdGUuaXNWYWxpZCAhPT0gaXNWYWxpZDtcbiAgICAgICAgaWYgKHByb3BzLmRlbGF5RXJyb3IgJiYgZXJyb3IpIHtcbiAgICAgICAgICAgIGRlbGF5RXJyb3JDYWxsYmFjayA9IGRlYm91bmNlKCgpID0+IHVwZGF0ZUVycm9ycyhuYW1lLCBlcnJvcikpO1xuICAgICAgICAgICAgZGVsYXlFcnJvckNhbGxiYWNrKHByb3BzLmRlbGF5RXJyb3IpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgIGRlbGF5RXJyb3JDYWxsYmFjayA9IG51bGw7XG4gICAgICAgICAgICBlcnJvclxuICAgICAgICAgICAgICAgID8gc2V0KF9mb3JtU3RhdGUuZXJyb3JzLCBuYW1lLCBlcnJvcilcbiAgICAgICAgICAgICAgICA6IHVuc2V0KF9mb3JtU3RhdGUuZXJyb3JzLCBuYW1lKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKGVycm9yID8gIWRlZXBFcXVhbChwcmV2aW91c0ZpZWxkRXJyb3IsIGVycm9yKSA6IHByZXZpb3VzRmllbGRFcnJvcikgfHxcbiAgICAgICAgICAgICFpc0VtcHR5T2JqZWN0KGZpZWxkU3RhdGUpIHx8XG4gICAgICAgICAgICBzaG91bGRVcGRhdGVWYWxpZCkge1xuICAgICAgICAgICAgY29uc3QgdXBkYXRlZEZvcm1TdGF0ZSA9IHtcbiAgICAgICAgICAgICAgICAuLi5maWVsZFN0YXRlLFxuICAgICAgICAgICAgICAgIC4uLihzaG91bGRVcGRhdGVWYWxpZCAmJiBpc0Jvb2xlYW4oaXNWYWxpZCkgPyB7IGlzVmFsaWQgfSA6IHt9KSxcbiAgICAgICAgICAgICAgICBlcnJvcnM6IF9mb3JtU3RhdGUuZXJyb3JzLFxuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgX2Zvcm1TdGF0ZSA9IHtcbiAgICAgICAgICAgICAgICAuLi5fZm9ybVN0YXRlLFxuICAgICAgICAgICAgICAgIC4uLnVwZGF0ZWRGb3JtU3RhdGUsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgX3N1YmplY3RzLnN0YXRlLm5leHQodXBkYXRlZEZvcm1TdGF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgX3VwZGF0ZUlzVmFsaWRhdGluZyhmYWxzZSk7XG4gICAgfTtcbiAgICBjb25zdCBfZXhlY3V0ZVNjaGVtYSA9IGFzeW5jIChuYW1lKSA9PiBfb3B0aW9ucy5yZXNvbHZlcihfZm9ybVZhbHVlcywgX29wdGlvbnMuY29udGV4dCwgZ2V0UmVzb2x2ZXJPcHRpb25zKG5hbWUgfHwgX25hbWVzLm1vdW50LCBfZmllbGRzLCBfb3B0aW9ucy5jcml0ZXJpYU1vZGUsIF9vcHRpb25zLnNob3VsZFVzZU5hdGl2ZVZhbGlkYXRpb24pKTtcbiAgICBjb25zdCBleGVjdXRlU2NoZW1hQW5kVXBkYXRlU3RhdGUgPSBhc3luYyAobmFtZXMpID0+IHtcbiAgICAgICAgY29uc3QgeyBlcnJvcnMgfSA9IGF3YWl0IF9leGVjdXRlU2NoZW1hKCk7XG4gICAgICAgIGlmIChuYW1lcykge1xuICAgICAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIG5hbWVzKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXJyb3IgPSBnZXQoZXJyb3JzLCBuYW1lKTtcbiAgICAgICAgICAgICAgICBlcnJvclxuICAgICAgICAgICAgICAgICAgICA/IHNldChfZm9ybVN0YXRlLmVycm9ycywgbmFtZSwgZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIDogdW5zZXQoX2Zvcm1TdGF0ZS5lcnJvcnMsIG5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgX2Zvcm1TdGF0ZS5lcnJvcnMgPSBlcnJvcnM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVycm9ycztcbiAgICB9O1xuICAgIGNvbnN0IGV4ZWN1dGVCdWlsdEluVmFsaWRhdGlvbiA9IGFzeW5jIChmaWVsZHMsIHNob3VsZE9ubHlDaGVja1ZhbGlkLCBjb250ZXh0ID0ge1xuICAgICAgICB2YWxpZDogdHJ1ZSxcbiAgICB9KSA9PiB7XG4gICAgICAgIGZvciAoY29uc3QgbmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZmllbGRzW25hbWVdO1xuICAgICAgICAgICAgaWYgKGZpZWxkKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBfZiwgLi4uZmllbGRWYWx1ZSB9ID0gZmllbGQ7XG4gICAgICAgICAgICAgICAgaWYgKF9mKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzRmllbGRBcnJheVJvb3QgPSBfbmFtZXMuYXJyYXkuaGFzKF9mLm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZEVycm9yID0gYXdhaXQgdmFsaWRhdGVGaWVsZChmaWVsZCwgX2Zvcm1WYWx1ZXMsIHNob3VsZERpc3BsYXlBbGxBc3NvY2lhdGVkRXJyb3JzLCBfb3B0aW9ucy5zaG91bGRVc2VOYXRpdmVWYWxpZGF0aW9uICYmICFzaG91bGRPbmx5Q2hlY2tWYWxpZCwgaXNGaWVsZEFycmF5Um9vdCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWVsZEVycm9yW19mLm5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0LnZhbGlkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2hvdWxkT25seUNoZWNrVmFsaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAhc2hvdWxkT25seUNoZWNrVmFsaWQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIChnZXQoZmllbGRFcnJvciwgX2YubmFtZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGlzRmllbGRBcnJheVJvb3RcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB1cGRhdGVGaWVsZEFycmF5Um9vdEVycm9yKF9mb3JtU3RhdGUuZXJyb3JzLCBmaWVsZEVycm9yLCBfZi5uYW1lKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHNldChfZm9ybVN0YXRlLmVycm9ycywgX2YubmFtZSwgZmllbGRFcnJvcltfZi5uYW1lXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHVuc2V0KF9mb3JtU3RhdGUuZXJyb3JzLCBfZi5uYW1lKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZpZWxkVmFsdWUgJiZcbiAgICAgICAgICAgICAgICAgICAgKGF3YWl0IGV4ZWN1dGVCdWlsdEluVmFsaWRhdGlvbihmaWVsZFZhbHVlLCBzaG91bGRPbmx5Q2hlY2tWYWxpZCwgY29udGV4dCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb250ZXh0LnZhbGlkO1xuICAgIH07XG4gICAgY29uc3QgX3JlbW92ZVVubW91bnRlZCA9ICgpID0+IHtcbiAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIF9uYW1lcy51bk1vdW50KSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZCA9IGdldChfZmllbGRzLCBuYW1lKTtcbiAgICAgICAgICAgIGZpZWxkICYmXG4gICAgICAgICAgICAgICAgKGZpZWxkLl9mLnJlZnNcbiAgICAgICAgICAgICAgICAgICAgPyBmaWVsZC5fZi5yZWZzLmV2ZXJ5KChyZWYpID0+ICFsaXZlKHJlZikpXG4gICAgICAgICAgICAgICAgICAgIDogIWxpdmUoZmllbGQuX2YucmVmKSkgJiZcbiAgICAgICAgICAgICAgICB1bnJlZ2lzdGVyKG5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIF9uYW1lcy51bk1vdW50ID0gbmV3IFNldCgpO1xuICAgIH07XG4gICAgY29uc3QgX2dldERpcnR5ID0gKG5hbWUsIGRhdGEpID0+IChuYW1lICYmIGRhdGEgJiYgc2V0KF9mb3JtVmFsdWVzLCBuYW1lLCBkYXRhKSxcbiAgICAgICAgIWRlZXBFcXVhbChnZXRWYWx1ZXMoKSwgX2RlZmF1bHRWYWx1ZXMpKTtcbiAgICBjb25zdCBfZ2V0V2F0Y2ggPSAobmFtZXMsIGRlZmF1bHRWYWx1ZSwgaXNHbG9iYWwpID0+IGdlbmVyYXRlV2F0Y2hPdXRwdXQobmFtZXMsIF9uYW1lcywge1xuICAgICAgICAuLi4oX3N0YXRlLm1vdW50XG4gICAgICAgICAgICA/IF9mb3JtVmFsdWVzXG4gICAgICAgICAgICA6IGlzVW5kZWZpbmVkKGRlZmF1bHRWYWx1ZSlcbiAgICAgICAgICAgICAgICA/IF9kZWZhdWx0VmFsdWVzXG4gICAgICAgICAgICAgICAgOiBpc1N0cmluZyhuYW1lcylcbiAgICAgICAgICAgICAgICAgICAgPyB7IFtuYW1lc106IGRlZmF1bHRWYWx1ZSB9XG4gICAgICAgICAgICAgICAgICAgIDogZGVmYXVsdFZhbHVlKSxcbiAgICB9LCBpc0dsb2JhbCwgZGVmYXVsdFZhbHVlKTtcbiAgICBjb25zdCBfZ2V0RmllbGRBcnJheSA9IChuYW1lKSA9PiBjb21wYWN0KGdldChfc3RhdGUubW91bnQgPyBfZm9ybVZhbHVlcyA6IF9kZWZhdWx0VmFsdWVzLCBuYW1lLCBwcm9wcy5zaG91bGRVbnJlZ2lzdGVyID8gZ2V0KF9kZWZhdWx0VmFsdWVzLCBuYW1lLCBbXSkgOiBbXSkpO1xuICAgIGNvbnN0IHNldEZpZWxkVmFsdWUgPSAobmFtZSwgdmFsdWUsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICAgICAgICBjb25zdCBmaWVsZCA9IGdldChfZmllbGRzLCBuYW1lKTtcbiAgICAgICAgbGV0IGZpZWxkVmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgaWYgKGZpZWxkKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZFJlZmVyZW5jZSA9IGZpZWxkLl9mO1xuICAgICAgICAgICAgaWYgKGZpZWxkUmVmZXJlbmNlKSB7XG4gICAgICAgICAgICAgICAgIWZpZWxkUmVmZXJlbmNlLmRpc2FibGVkICYmXG4gICAgICAgICAgICAgICAgICAgIHNldChfZm9ybVZhbHVlcywgbmFtZSwgZ2V0RmllbGRWYWx1ZUFzKHZhbHVlLCBmaWVsZFJlZmVyZW5jZSkpO1xuICAgICAgICAgICAgICAgIGZpZWxkVmFsdWUgPVxuICAgICAgICAgICAgICAgICAgICBpc0hUTUxFbGVtZW50KGZpZWxkUmVmZXJlbmNlLnJlZikgJiYgaXNOdWxsT3JVbmRlZmluZWQodmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICA/ICcnXG4gICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlO1xuICAgICAgICAgICAgICAgIGlmIChpc011bHRpcGxlU2VsZWN0KGZpZWxkUmVmZXJlbmNlLnJlZikpIHtcbiAgICAgICAgICAgICAgICAgICAgWy4uLmZpZWxkUmVmZXJlbmNlLnJlZi5vcHRpb25zXS5mb3JFYWNoKChvcHRpb25SZWYpID0+IChvcHRpb25SZWYuc2VsZWN0ZWQgPSBmaWVsZFZhbHVlLmluY2x1ZGVzKG9wdGlvblJlZi52YWx1ZSkpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZmllbGRSZWZlcmVuY2UucmVmcykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNDaGVja0JveElucHV0KGZpZWxkUmVmZXJlbmNlLnJlZikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkUmVmZXJlbmNlLnJlZnMubGVuZ3RoID4gMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gZmllbGRSZWZlcmVuY2UucmVmcy5mb3JFYWNoKChjaGVja2JveFJlZikgPT4gKCFjaGVja2JveFJlZi5kZWZhdWx0Q2hlY2tlZCB8fCAhY2hlY2tib3hSZWYuZGlzYWJsZWQpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjaGVja2JveFJlZi5jaGVja2VkID0gQXJyYXkuaXNBcnJheShmaWVsZFZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAhIWZpZWxkVmFsdWUuZmluZCgoZGF0YSkgPT4gZGF0YSA9PT0gY2hlY2tib3hSZWYudmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGZpZWxkVmFsdWUgPT09IGNoZWNrYm94UmVmLnZhbHVlKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGZpZWxkUmVmZXJlbmNlLnJlZnNbMF0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGZpZWxkUmVmZXJlbmNlLnJlZnNbMF0uY2hlY2tlZCA9ICEhZmllbGRWYWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWVsZFJlZmVyZW5jZS5yZWZzLmZvckVhY2goKHJhZGlvUmVmKSA9PiAocmFkaW9SZWYuY2hlY2tlZCA9IHJhZGlvUmVmLnZhbHVlID09PSBmaWVsZFZhbHVlKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoaXNGaWxlSW5wdXQoZmllbGRSZWZlcmVuY2UucmVmKSkge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZFJlZmVyZW5jZS5yZWYudmFsdWUgPSAnJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZpZWxkUmVmZXJlbmNlLnJlZi52YWx1ZSA9IGZpZWxkVmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIGlmICghZmllbGRSZWZlcmVuY2UucmVmLnR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9zdWJqZWN0cy52YWx1ZXMubmV4dCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXM6IHsgLi4uX2Zvcm1WYWx1ZXMgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIChvcHRpb25zLnNob3VsZERpcnR5IHx8IG9wdGlvbnMuc2hvdWxkVG91Y2gpICYmXG4gICAgICAgICAgICB1cGRhdGVUb3VjaEFuZERpcnR5KG5hbWUsIGZpZWxkVmFsdWUsIG9wdGlvbnMuc2hvdWxkVG91Y2gsIG9wdGlvbnMuc2hvdWxkRGlydHksIHRydWUpO1xuICAgICAgICBvcHRpb25zLnNob3VsZFZhbGlkYXRlICYmIHRyaWdnZXIobmFtZSk7XG4gICAgfTtcbiAgICBjb25zdCBzZXRWYWx1ZXMgPSAobmFtZSwgdmFsdWUsIG9wdGlvbnMpID0+IHtcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZEtleSBpbiB2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGRWYWx1ZSA9IHZhbHVlW2ZpZWxkS2V5XTtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkTmFtZSA9IGAke25hbWV9LiR7ZmllbGRLZXl9YDtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZ2V0KF9maWVsZHMsIGZpZWxkTmFtZSk7XG4gICAgICAgICAgICAoX25hbWVzLmFycmF5LmhhcyhuYW1lKSB8fFxuICAgICAgICAgICAgICAgICFpc1ByaW1pdGl2ZShmaWVsZFZhbHVlKSB8fFxuICAgICAgICAgICAgICAgIChmaWVsZCAmJiAhZmllbGQuX2YpKSAmJlxuICAgICAgICAgICAgICAgICFpc0RhdGVPYmplY3QoZmllbGRWYWx1ZSlcbiAgICAgICAgICAgICAgICA/IHNldFZhbHVlcyhmaWVsZE5hbWUsIGZpZWxkVmFsdWUsIG9wdGlvbnMpXG4gICAgICAgICAgICAgICAgOiBzZXRGaWVsZFZhbHVlKGZpZWxkTmFtZSwgZmllbGRWYWx1ZSwgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHNldFZhbHVlID0gKG5hbWUsIHZhbHVlLCBvcHRpb25zID0ge30pID0+IHtcbiAgICAgICAgY29uc3QgZmllbGQgPSBnZXQoX2ZpZWxkcywgbmFtZSk7XG4gICAgICAgIGNvbnN0IGlzRmllbGRBcnJheSA9IF9uYW1lcy5hcnJheS5oYXMobmFtZSk7XG4gICAgICAgIGNvbnN0IGNsb25lVmFsdWUgPSBjbG9uZU9iamVjdCh2YWx1ZSk7XG4gICAgICAgIHNldChfZm9ybVZhbHVlcywgbmFtZSwgY2xvbmVWYWx1ZSk7XG4gICAgICAgIGlmIChpc0ZpZWxkQXJyYXkpIHtcbiAgICAgICAgICAgIF9zdWJqZWN0cy5hcnJheS5uZXh0KHtcbiAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgIHZhbHVlczogeyAuLi5fZm9ybVZhbHVlcyB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoKF9wcm94eUZvcm1TdGF0ZS5pc0RpcnR5IHx8IF9wcm94eUZvcm1TdGF0ZS5kaXJ0eUZpZWxkcykgJiZcbiAgICAgICAgICAgICAgICBvcHRpb25zLnNob3VsZERpcnR5KSB7XG4gICAgICAgICAgICAgICAgX3N1YmplY3RzLnN0YXRlLm5leHQoe1xuICAgICAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgICAgICBkaXJ0eUZpZWxkczogZ2V0RGlydHlGaWVsZHMoX2RlZmF1bHRWYWx1ZXMsIF9mb3JtVmFsdWVzKSxcbiAgICAgICAgICAgICAgICAgICAgaXNEaXJ0eTogX2dldERpcnR5KG5hbWUsIGNsb25lVmFsdWUpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZmllbGQgJiYgIWZpZWxkLl9mICYmICFpc051bGxPclVuZGVmaW5lZChjbG9uZVZhbHVlKVxuICAgICAgICAgICAgICAgID8gc2V0VmFsdWVzKG5hbWUsIGNsb25lVmFsdWUsIG9wdGlvbnMpXG4gICAgICAgICAgICAgICAgOiBzZXRGaWVsZFZhbHVlKG5hbWUsIGNsb25lVmFsdWUsIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGlzV2F0Y2hlZChuYW1lLCBfbmFtZXMpICYmIF9zdWJqZWN0cy5zdGF0ZS5uZXh0KHsgLi4uX2Zvcm1TdGF0ZSB9KTtcbiAgICAgICAgX3N1YmplY3RzLnZhbHVlcy5uZXh0KHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICB2YWx1ZXM6IHsgLi4uX2Zvcm1WYWx1ZXMgfSxcbiAgICAgICAgfSk7XG4gICAgICAgICFfc3RhdGUubW91bnQgJiYgZmx1c2hSb290UmVuZGVyKCk7XG4gICAgfTtcbiAgICBjb25zdCBvbkNoYW5nZSA9IGFzeW5jIChldmVudCkgPT4ge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgIGxldCBuYW1lID0gdGFyZ2V0Lm5hbWU7XG4gICAgICAgIGxldCBpc0ZpZWxkVmFsdWVVcGRhdGVkID0gdHJ1ZTtcbiAgICAgICAgY29uc3QgZmllbGQgPSBnZXQoX2ZpZWxkcywgbmFtZSk7XG4gICAgICAgIGNvbnN0IGdldEN1cnJlbnRGaWVsZFZhbHVlID0gKCkgPT4gdGFyZ2V0LnR5cGUgPyBnZXRGaWVsZFZhbHVlKGZpZWxkLl9mKSA6IGdldEV2ZW50VmFsdWUoZXZlbnQpO1xuICAgICAgICBpZiAoZmllbGQpIHtcbiAgICAgICAgICAgIGxldCBlcnJvcjtcbiAgICAgICAgICAgIGxldCBpc1ZhbGlkO1xuICAgICAgICAgICAgY29uc3QgZmllbGRWYWx1ZSA9IGdldEN1cnJlbnRGaWVsZFZhbHVlKCk7XG4gICAgICAgICAgICBjb25zdCBpc0JsdXJFdmVudCA9IGV2ZW50LnR5cGUgPT09IEVWRU5UUy5CTFVSIHx8IGV2ZW50LnR5cGUgPT09IEVWRU5UUy5GT0NVU19PVVQ7XG4gICAgICAgICAgICBjb25zdCBzaG91bGRTa2lwVmFsaWRhdGlvbiA9ICghaGFzVmFsaWRhdGlvbihmaWVsZC5fZikgJiZcbiAgICAgICAgICAgICAgICAhX29wdGlvbnMucmVzb2x2ZXIgJiZcbiAgICAgICAgICAgICAgICAhZ2V0KF9mb3JtU3RhdGUuZXJyb3JzLCBuYW1lKSAmJlxuICAgICAgICAgICAgICAgICFmaWVsZC5fZi5kZXBzKSB8fFxuICAgICAgICAgICAgICAgIHNraXBWYWxpZGF0aW9uKGlzQmx1ckV2ZW50LCBnZXQoX2Zvcm1TdGF0ZS50b3VjaGVkRmllbGRzLCBuYW1lKSwgX2Zvcm1TdGF0ZS5pc1N1Ym1pdHRlZCwgdmFsaWRhdGlvbk1vZGVBZnRlclN1Ym1pdCwgdmFsaWRhdGlvbk1vZGVCZWZvcmVTdWJtaXQpO1xuICAgICAgICAgICAgY29uc3Qgd2F0Y2hlZCA9IGlzV2F0Y2hlZChuYW1lLCBfbmFtZXMsIGlzQmx1ckV2ZW50KTtcbiAgICAgICAgICAgIHNldChfZm9ybVZhbHVlcywgbmFtZSwgZmllbGRWYWx1ZSk7XG4gICAgICAgICAgICBpZiAoaXNCbHVyRXZlbnQpIHtcbiAgICAgICAgICAgICAgICBmaWVsZC5fZi5vbkJsdXIgJiYgZmllbGQuX2Yub25CbHVyKGV2ZW50KTtcbiAgICAgICAgICAgICAgICBkZWxheUVycm9yQ2FsbGJhY2sgJiYgZGVsYXlFcnJvckNhbGxiYWNrKDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZmllbGQuX2Yub25DaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICBmaWVsZC5fZi5vbkNoYW5nZShldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBmaWVsZFN0YXRlID0gdXBkYXRlVG91Y2hBbmREaXJ0eShuYW1lLCBmaWVsZFZhbHVlLCBpc0JsdXJFdmVudCwgZmFsc2UpO1xuICAgICAgICAgICAgY29uc3Qgc2hvdWxkUmVuZGVyID0gIWlzRW1wdHlPYmplY3QoZmllbGRTdGF0ZSkgfHwgd2F0Y2hlZDtcbiAgICAgICAgICAgICFpc0JsdXJFdmVudCAmJlxuICAgICAgICAgICAgICAgIF9zdWJqZWN0cy52YWx1ZXMubmV4dCh7XG4gICAgICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IGV2ZW50LnR5cGUsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlczogeyAuLi5fZm9ybVZhbHVlcyB9LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHNob3VsZFNraXBWYWxpZGF0aW9uKSB7XG4gICAgICAgICAgICAgICAgX3Byb3h5Rm9ybVN0YXRlLmlzVmFsaWQgJiYgX3VwZGF0ZVZhbGlkKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChzaG91bGRSZW5kZXIgJiZcbiAgICAgICAgICAgICAgICAgICAgX3N1YmplY3RzLnN0YXRlLm5leHQoeyBuYW1lLCAuLi4od2F0Y2hlZCA/IHt9IDogZmllbGRTdGF0ZSkgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgIWlzQmx1ckV2ZW50ICYmIHdhdGNoZWQgJiYgX3N1YmplY3RzLnN0YXRlLm5leHQoeyAuLi5fZm9ybVN0YXRlIH0pO1xuICAgICAgICAgICAgX3VwZGF0ZUlzVmFsaWRhdGluZyh0cnVlKTtcbiAgICAgICAgICAgIGlmIChfb3B0aW9ucy5yZXNvbHZlcikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgZXJyb3JzIH0gPSBhd2FpdCBfZXhlY3V0ZVNjaGVtYShbbmFtZV0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHByZXZpb3VzRXJyb3JMb29rdXBSZXN1bHQgPSBzY2hlbWFFcnJvckxvb2t1cChfZm9ybVN0YXRlLmVycm9ycywgX2ZpZWxkcywgbmFtZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgZXJyb3JMb29rdXBSZXN1bHQgPSBzY2hlbWFFcnJvckxvb2t1cChlcnJvcnMsIF9maWVsZHMsIHByZXZpb3VzRXJyb3JMb29rdXBSZXN1bHQubmFtZSB8fCBuYW1lKTtcbiAgICAgICAgICAgICAgICBlcnJvciA9IGVycm9yTG9va3VwUmVzdWx0LmVycm9yO1xuICAgICAgICAgICAgICAgIG5hbWUgPSBlcnJvckxvb2t1cFJlc3VsdC5uYW1lO1xuICAgICAgICAgICAgICAgIGlzVmFsaWQgPSBpc0VtcHR5T2JqZWN0KGVycm9ycyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBlcnJvciA9IChhd2FpdCB2YWxpZGF0ZUZpZWxkKGZpZWxkLCBfZm9ybVZhbHVlcywgc2hvdWxkRGlzcGxheUFsbEFzc29jaWF0ZWRFcnJvcnMsIF9vcHRpb25zLnNob3VsZFVzZU5hdGl2ZVZhbGlkYXRpb24pKVtuYW1lXTtcbiAgICAgICAgICAgICAgICBpc0ZpZWxkVmFsdWVVcGRhdGVkID1cbiAgICAgICAgICAgICAgICAgICAgaXNOYU4oZmllbGRWYWx1ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkVmFsdWUgPT09IGdldChfZm9ybVZhbHVlcywgbmFtZSwgZmllbGRWYWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKGlzRmllbGRWYWx1ZVVwZGF0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpc1ZhbGlkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoX3Byb3h5Rm9ybVN0YXRlLmlzVmFsaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzVmFsaWQgPSBhd2FpdCBleGVjdXRlQnVpbHRJblZhbGlkYXRpb24oX2ZpZWxkcywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaXNGaWVsZFZhbHVlVXBkYXRlZCkge1xuICAgICAgICAgICAgICAgIGZpZWxkLl9mLmRlcHMgJiZcbiAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcihmaWVsZC5fZi5kZXBzKTtcbiAgICAgICAgICAgICAgICBzaG91bGRSZW5kZXJCeUVycm9yKG5hbWUsIGlzVmFsaWQsIGVycm9yLCBmaWVsZFN0YXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgdHJpZ2dlciA9IGFzeW5jIChuYW1lLCBvcHRpb25zID0ge30pID0+IHtcbiAgICAgICAgbGV0IGlzVmFsaWQ7XG4gICAgICAgIGxldCB2YWxpZGF0aW9uUmVzdWx0O1xuICAgICAgICBjb25zdCBmaWVsZE5hbWVzID0gY29udmVydFRvQXJyYXlQYXlsb2FkKG5hbWUpO1xuICAgICAgICBfdXBkYXRlSXNWYWxpZGF0aW5nKHRydWUpO1xuICAgICAgICBpZiAoX29wdGlvbnMucmVzb2x2ZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGVycm9ycyA9IGF3YWl0IGV4ZWN1dGVTY2hlbWFBbmRVcGRhdGVTdGF0ZShpc1VuZGVmaW5lZChuYW1lKSA/IG5hbWUgOiBmaWVsZE5hbWVzKTtcbiAgICAgICAgICAgIGlzVmFsaWQgPSBpc0VtcHR5T2JqZWN0KGVycm9ycyk7XG4gICAgICAgICAgICB2YWxpZGF0aW9uUmVzdWx0ID0gbmFtZVxuICAgICAgICAgICAgICAgID8gIWZpZWxkTmFtZXMuc29tZSgobmFtZSkgPT4gZ2V0KGVycm9ycywgbmFtZSkpXG4gICAgICAgICAgICAgICAgOiBpc1ZhbGlkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG5hbWUpIHtcbiAgICAgICAgICAgIHZhbGlkYXRpb25SZXN1bHQgPSAoYXdhaXQgUHJvbWlzZS5hbGwoZmllbGROYW1lcy5tYXAoYXN5bmMgKGZpZWxkTmFtZSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZ2V0KF9maWVsZHMsIGZpZWxkTmFtZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGV4ZWN1dGVCdWlsdEluVmFsaWRhdGlvbihmaWVsZCAmJiBmaWVsZC5fZiA/IHsgW2ZpZWxkTmFtZV06IGZpZWxkIH0gOiBmaWVsZCk7XG4gICAgICAgICAgICB9KSkpLmV2ZXJ5KEJvb2xlYW4pO1xuICAgICAgICAgICAgISghdmFsaWRhdGlvblJlc3VsdCAmJiAhX2Zvcm1TdGF0ZS5pc1ZhbGlkKSAmJiBfdXBkYXRlVmFsaWQoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhbGlkYXRpb25SZXN1bHQgPSBpc1ZhbGlkID0gYXdhaXQgZXhlY3V0ZUJ1aWx0SW5WYWxpZGF0aW9uKF9maWVsZHMpO1xuICAgICAgICB9XG4gICAgICAgIF9zdWJqZWN0cy5zdGF0ZS5uZXh0KHtcbiAgICAgICAgICAgIC4uLighaXNTdHJpbmcobmFtZSkgfHxcbiAgICAgICAgICAgICAgICAoX3Byb3h5Rm9ybVN0YXRlLmlzVmFsaWQgJiYgaXNWYWxpZCAhPT0gX2Zvcm1TdGF0ZS5pc1ZhbGlkKVxuICAgICAgICAgICAgICAgID8ge31cbiAgICAgICAgICAgICAgICA6IHsgbmFtZSB9KSxcbiAgICAgICAgICAgIC4uLihfb3B0aW9ucy5yZXNvbHZlciB8fCAhbmFtZSA/IHsgaXNWYWxpZCB9IDoge30pLFxuICAgICAgICAgICAgZXJyb3JzOiBfZm9ybVN0YXRlLmVycm9ycyxcbiAgICAgICAgICAgIGlzVmFsaWRhdGluZzogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgICAgICBvcHRpb25zLnNob3VsZEZvY3VzICYmXG4gICAgICAgICAgICAhdmFsaWRhdGlvblJlc3VsdCAmJlxuICAgICAgICAgICAgZm9jdXNGaWVsZEJ5KF9maWVsZHMsIChrZXkpID0+IGtleSAmJiBnZXQoX2Zvcm1TdGF0ZS5lcnJvcnMsIGtleSksIG5hbWUgPyBmaWVsZE5hbWVzIDogX25hbWVzLm1vdW50KTtcbiAgICAgICAgcmV0dXJuIHZhbGlkYXRpb25SZXN1bHQ7XG4gICAgfTtcbiAgICBjb25zdCBnZXRWYWx1ZXMgPSAoZmllbGROYW1lcykgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZXMgPSB7XG4gICAgICAgICAgICAuLi5fZGVmYXVsdFZhbHVlcyxcbiAgICAgICAgICAgIC4uLihfc3RhdGUubW91bnQgPyBfZm9ybVZhbHVlcyA6IHt9KSxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIGlzVW5kZWZpbmVkKGZpZWxkTmFtZXMpXG4gICAgICAgICAgICA/IHZhbHVlc1xuICAgICAgICAgICAgOiBpc1N0cmluZyhmaWVsZE5hbWVzKVxuICAgICAgICAgICAgICAgID8gZ2V0KHZhbHVlcywgZmllbGROYW1lcylcbiAgICAgICAgICAgICAgICA6IGZpZWxkTmFtZXMubWFwKChuYW1lKSA9PiBnZXQodmFsdWVzLCBuYW1lKSk7XG4gICAgfTtcbiAgICBjb25zdCBnZXRGaWVsZFN0YXRlID0gKG5hbWUsIGZvcm1TdGF0ZSkgPT4gKHtcbiAgICAgICAgaW52YWxpZDogISFnZXQoKGZvcm1TdGF0ZSB8fCBfZm9ybVN0YXRlKS5lcnJvcnMsIG5hbWUpLFxuICAgICAgICBpc0RpcnR5OiAhIWdldCgoZm9ybVN0YXRlIHx8IF9mb3JtU3RhdGUpLmRpcnR5RmllbGRzLCBuYW1lKSxcbiAgICAgICAgaXNUb3VjaGVkOiAhIWdldCgoZm9ybVN0YXRlIHx8IF9mb3JtU3RhdGUpLnRvdWNoZWRGaWVsZHMsIG5hbWUpLFxuICAgICAgICBlcnJvcjogZ2V0KChmb3JtU3RhdGUgfHwgX2Zvcm1TdGF0ZSkuZXJyb3JzLCBuYW1lKSxcbiAgICB9KTtcbiAgICBjb25zdCBjbGVhckVycm9ycyA9IChuYW1lKSA9PiB7XG4gICAgICAgIG5hbWUgJiZcbiAgICAgICAgICAgIGNvbnZlcnRUb0FycmF5UGF5bG9hZChuYW1lKS5mb3JFYWNoKChpbnB1dE5hbWUpID0+IHVuc2V0KF9mb3JtU3RhdGUuZXJyb3JzLCBpbnB1dE5hbWUpKTtcbiAgICAgICAgX3N1YmplY3RzLnN0YXRlLm5leHQoe1xuICAgICAgICAgICAgZXJyb3JzOiBuYW1lID8gX2Zvcm1TdGF0ZS5lcnJvcnMgOiB7fSxcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBjb25zdCBzZXRFcnJvciA9IChuYW1lLCBlcnJvciwgb3B0aW9ucykgPT4ge1xuICAgICAgICBjb25zdCByZWYgPSAoZ2V0KF9maWVsZHMsIG5hbWUsIHsgX2Y6IHt9IH0pLl9mIHx8IHt9KS5yZWY7XG4gICAgICAgIHNldChfZm9ybVN0YXRlLmVycm9ycywgbmFtZSwge1xuICAgICAgICAgICAgLi4uZXJyb3IsXG4gICAgICAgICAgICByZWYsXG4gICAgICAgIH0pO1xuICAgICAgICBfc3ViamVjdHMuc3RhdGUubmV4dCh7XG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgZXJyb3JzOiBfZm9ybVN0YXRlLmVycm9ycyxcbiAgICAgICAgICAgIGlzVmFsaWQ6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICAgICAgb3B0aW9ucyAmJiBvcHRpb25zLnNob3VsZEZvY3VzICYmIHJlZiAmJiByZWYuZm9jdXMgJiYgcmVmLmZvY3VzKCk7XG4gICAgfTtcbiAgICBjb25zdCB3YXRjaCA9IChuYW1lLCBkZWZhdWx0VmFsdWUpID0+IGlzRnVuY3Rpb24obmFtZSlcbiAgICAgICAgPyBfc3ViamVjdHMudmFsdWVzLnN1YnNjcmliZSh7XG4gICAgICAgICAgICBuZXh0OiAocGF5bG9hZCkgPT4gbmFtZShfZ2V0V2F0Y2godW5kZWZpbmVkLCBkZWZhdWx0VmFsdWUpLCBwYXlsb2FkKSxcbiAgICAgICAgfSlcbiAgICAgICAgOiBfZ2V0V2F0Y2gobmFtZSwgZGVmYXVsdFZhbHVlLCB0cnVlKTtcbiAgICBjb25zdCB1bnJlZ2lzdGVyID0gKG5hbWUsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBvZiBuYW1lID8gY29udmVydFRvQXJyYXlQYXlsb2FkKG5hbWUpIDogX25hbWVzLm1vdW50KSB7XG4gICAgICAgICAgICBfbmFtZXMubW91bnQuZGVsZXRlKGZpZWxkTmFtZSk7XG4gICAgICAgICAgICBfbmFtZXMuYXJyYXkuZGVsZXRlKGZpZWxkTmFtZSk7XG4gICAgICAgICAgICBpZiAoIW9wdGlvbnMua2VlcFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgdW5zZXQoX2ZpZWxkcywgZmllbGROYW1lKTtcbiAgICAgICAgICAgICAgICB1bnNldChfZm9ybVZhbHVlcywgZmllbGROYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICFvcHRpb25zLmtlZXBFcnJvciAmJiB1bnNldChfZm9ybVN0YXRlLmVycm9ycywgZmllbGROYW1lKTtcbiAgICAgICAgICAgICFvcHRpb25zLmtlZXBEaXJ0eSAmJiB1bnNldChfZm9ybVN0YXRlLmRpcnR5RmllbGRzLCBmaWVsZE5hbWUpO1xuICAgICAgICAgICAgIW9wdGlvbnMua2VlcFRvdWNoZWQgJiYgdW5zZXQoX2Zvcm1TdGF0ZS50b3VjaGVkRmllbGRzLCBmaWVsZE5hbWUpO1xuICAgICAgICAgICAgIV9vcHRpb25zLnNob3VsZFVucmVnaXN0ZXIgJiZcbiAgICAgICAgICAgICAgICAhb3B0aW9ucy5rZWVwRGVmYXVsdFZhbHVlICYmXG4gICAgICAgICAgICAgICAgdW5zZXQoX2RlZmF1bHRWYWx1ZXMsIGZpZWxkTmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgX3N1YmplY3RzLnZhbHVlcy5uZXh0KHtcbiAgICAgICAgICAgIHZhbHVlczogeyAuLi5fZm9ybVZhbHVlcyB9LFxuICAgICAgICB9KTtcbiAgICAgICAgX3N1YmplY3RzLnN0YXRlLm5leHQoe1xuICAgICAgICAgICAgLi4uX2Zvcm1TdGF0ZSxcbiAgICAgICAgICAgIC4uLighb3B0aW9ucy5rZWVwRGlydHkgPyB7fSA6IHsgaXNEaXJ0eTogX2dldERpcnR5KCkgfSksXG4gICAgICAgIH0pO1xuICAgICAgICAhb3B0aW9ucy5rZWVwSXNWYWxpZCAmJiBfdXBkYXRlVmFsaWQoKTtcbiAgICB9O1xuICAgIGNvbnN0IHJlZ2lzdGVyID0gKG5hbWUsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICAgICAgICBsZXQgZmllbGQgPSBnZXQoX2ZpZWxkcywgbmFtZSk7XG4gICAgICAgIGNvbnN0IGRpc2FibGVkSXNEZWZpbmVkID0gaXNCb29sZWFuKG9wdGlvbnMuZGlzYWJsZWQpO1xuICAgICAgICBzZXQoX2ZpZWxkcywgbmFtZSwge1xuICAgICAgICAgICAgLi4uKGZpZWxkIHx8IHt9KSxcbiAgICAgICAgICAgIF9mOiB7XG4gICAgICAgICAgICAgICAgLi4uKGZpZWxkICYmIGZpZWxkLl9mID8gZmllbGQuX2YgOiB7IHJlZjogeyBuYW1lIH0gfSksXG4gICAgICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgICAgICBtb3VudDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIF9uYW1lcy5tb3VudC5hZGQobmFtZSk7XG4gICAgICAgIGZpZWxkXG4gICAgICAgICAgICA/IGRpc2FibGVkSXNEZWZpbmVkICYmXG4gICAgICAgICAgICAgICAgc2V0KF9mb3JtVmFsdWVzLCBuYW1lLCBvcHRpb25zLmRpc2FibGVkXG4gICAgICAgICAgICAgICAgICAgID8gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgIDogZ2V0KF9mb3JtVmFsdWVzLCBuYW1lLCBnZXRGaWVsZFZhbHVlKGZpZWxkLl9mKSkpXG4gICAgICAgICAgICA6IHVwZGF0ZVZhbGlkQW5kVmFsdWUobmFtZSwgdHJ1ZSwgb3B0aW9ucy52YWx1ZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi4oZGlzYWJsZWRJc0RlZmluZWQgPyB7IGRpc2FibGVkOiBvcHRpb25zLmRpc2FibGVkIH0gOiB7fSksXG4gICAgICAgICAgICAuLi4oX29wdGlvbnMucHJvZ3Jlc3NpdmVcbiAgICAgICAgICAgICAgICA/IHtcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6ICEhb3B0aW9ucy5yZXF1aXJlZCxcbiAgICAgICAgICAgICAgICAgICAgbWluOiBnZXRSdWxlVmFsdWUob3B0aW9ucy5taW4pLFxuICAgICAgICAgICAgICAgICAgICBtYXg6IGdldFJ1bGVWYWx1ZShvcHRpb25zLm1heCksXG4gICAgICAgICAgICAgICAgICAgIG1pbkxlbmd0aDogZ2V0UnVsZVZhbHVlKG9wdGlvbnMubWluTGVuZ3RoKSxcbiAgICAgICAgICAgICAgICAgICAgbWF4TGVuZ3RoOiBnZXRSdWxlVmFsdWUob3B0aW9ucy5tYXhMZW5ndGgpLFxuICAgICAgICAgICAgICAgICAgICBwYXR0ZXJuOiBnZXRSdWxlVmFsdWUob3B0aW9ucy5wYXR0ZXJuKSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgOiB7fSksXG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgb25DaGFuZ2UsXG4gICAgICAgICAgICBvbkJsdXI6IG9uQ2hhbmdlLFxuICAgICAgICAgICAgcmVmOiAocmVmKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlZikge1xuICAgICAgICAgICAgICAgICAgICByZWdpc3RlcihuYW1lLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICAgICAgZmllbGQgPSBnZXQoX2ZpZWxkcywgbmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkUmVmID0gaXNVbmRlZmluZWQocmVmLnZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgPyByZWYucXVlcnlTZWxlY3RvckFsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gcmVmLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0LHNlbGVjdCx0ZXh0YXJlYScpWzBdIHx8IHJlZlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogcmVmXG4gICAgICAgICAgICAgICAgICAgICAgICA6IHJlZjtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmFkaW9PckNoZWNrYm94ID0gaXNSYWRpb09yQ2hlY2tib3goZmllbGRSZWYpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZWZzID0gZmllbGQuX2YucmVmcyB8fCBbXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJhZGlvT3JDaGVja2JveFxuICAgICAgICAgICAgICAgICAgICAgICAgPyByZWZzLmZpbmQoKG9wdGlvbikgPT4gb3B0aW9uID09PSBmaWVsZFJlZilcbiAgICAgICAgICAgICAgICAgICAgICAgIDogZmllbGRSZWYgPT09IGZpZWxkLl9mLnJlZikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHNldChfZmllbGRzLCBuYW1lLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfZjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLmZpZWxkLl9mLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLihyYWRpb09yQ2hlY2tib3hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWZzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4ucmVmcy5maWx0ZXIobGl2ZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRSZWYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uKEFycmF5LmlzQXJyYXkoZ2V0KF9kZWZhdWx0VmFsdWVzLCBuYW1lKSkgPyBbe31dIDogW10pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZjogeyB0eXBlOiBmaWVsZFJlZi50eXBlLCBuYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB7IHJlZjogZmllbGRSZWYgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlVmFsaWRBbmRWYWx1ZShuYW1lLCBmYWxzZSwgdW5kZWZpbmVkLCBmaWVsZFJlZik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZCA9IGdldChfZmllbGRzLCBuYW1lLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWVsZC5fZikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQuX2YubW91bnQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAoX29wdGlvbnMuc2hvdWxkVW5yZWdpc3RlciB8fCBvcHRpb25zLnNob3VsZFVucmVnaXN0ZXIpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAhKGlzTmFtZUluRmllbGRBcnJheShfbmFtZXMuYXJyYXksIG5hbWUpICYmIF9zdGF0ZS5hY3Rpb24pICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBfbmFtZXMudW5Nb3VudC5hZGQobmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIGNvbnN0IF9mb2N1c0Vycm9yID0gKCkgPT4gX29wdGlvbnMuc2hvdWxkRm9jdXNFcnJvciAmJlxuICAgICAgICBmb2N1c0ZpZWxkQnkoX2ZpZWxkcywgKGtleSkgPT4ga2V5ICYmIGdldChfZm9ybVN0YXRlLmVycm9ycywga2V5KSwgX25hbWVzLm1vdW50KTtcbiAgICBjb25zdCBoYW5kbGVTdWJtaXQgPSAob25WYWxpZCwgb25JbnZhbGlkKSA9PiBhc3luYyAoZSkgPT4ge1xuICAgICAgICBpZiAoZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCAmJiBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBlLnBlcnNpc3QgJiYgZS5wZXJzaXN0KCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGZpZWxkVmFsdWVzID0gY2xvbmVPYmplY3QoX2Zvcm1WYWx1ZXMpO1xuICAgICAgICBfc3ViamVjdHMuc3RhdGUubmV4dCh7XG4gICAgICAgICAgICBpc1N1Ym1pdHRpbmc6IHRydWUsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoX29wdGlvbnMucmVzb2x2ZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZXJyb3JzLCB2YWx1ZXMgfSA9IGF3YWl0IF9leGVjdXRlU2NoZW1hKCk7XG4gICAgICAgICAgICBfZm9ybVN0YXRlLmVycm9ycyA9IGVycm9ycztcbiAgICAgICAgICAgIGZpZWxkVmFsdWVzID0gdmFsdWVzO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYXdhaXQgZXhlY3V0ZUJ1aWx0SW5WYWxpZGF0aW9uKF9maWVsZHMpO1xuICAgICAgICB9XG4gICAgICAgIHVuc2V0KF9mb3JtU3RhdGUuZXJyb3JzLCAncm9vdCcpO1xuICAgICAgICBpZiAoaXNFbXB0eU9iamVjdChfZm9ybVN0YXRlLmVycm9ycykpIHtcbiAgICAgICAgICAgIF9zdWJqZWN0cy5zdGF0ZS5uZXh0KHtcbiAgICAgICAgICAgICAgICBlcnJvcnM6IHt9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBhd2FpdCBvblZhbGlkKGZpZWxkVmFsdWVzLCBlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChvbkludmFsaWQpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCBvbkludmFsaWQoeyAuLi5fZm9ybVN0YXRlLmVycm9ycyB9LCBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9mb2N1c0Vycm9yKCk7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KF9mb2N1c0Vycm9yKTtcbiAgICAgICAgfVxuICAgICAgICBfc3ViamVjdHMuc3RhdGUubmV4dCh7XG4gICAgICAgICAgICBpc1N1Ym1pdHRlZDogdHJ1ZSxcbiAgICAgICAgICAgIGlzU3VibWl0dGluZzogZmFsc2UsXG4gICAgICAgICAgICBpc1N1Ym1pdFN1Y2Nlc3NmdWw6IGlzRW1wdHlPYmplY3QoX2Zvcm1TdGF0ZS5lcnJvcnMpLFxuICAgICAgICAgICAgc3VibWl0Q291bnQ6IF9mb3JtU3RhdGUuc3VibWl0Q291bnQgKyAxLFxuICAgICAgICAgICAgZXJyb3JzOiBfZm9ybVN0YXRlLmVycm9ycyxcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBjb25zdCByZXNldEZpZWxkID0gKG5hbWUsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICAgICAgICBpZiAoZ2V0KF9maWVsZHMsIG5hbWUpKSB7XG4gICAgICAgICAgICBpZiAoaXNVbmRlZmluZWQob3B0aW9ucy5kZWZhdWx0VmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgc2V0VmFsdWUobmFtZSwgZ2V0KF9kZWZhdWx0VmFsdWVzLCBuYW1lKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXRWYWx1ZShuYW1lLCBvcHRpb25zLmRlZmF1bHRWYWx1ZSk7XG4gICAgICAgICAgICAgICAgc2V0KF9kZWZhdWx0VmFsdWVzLCBuYW1lLCBvcHRpb25zLmRlZmF1bHRWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIW9wdGlvbnMua2VlcFRvdWNoZWQpIHtcbiAgICAgICAgICAgICAgICB1bnNldChfZm9ybVN0YXRlLnRvdWNoZWRGaWVsZHMsIG5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFvcHRpb25zLmtlZXBEaXJ0eSkge1xuICAgICAgICAgICAgICAgIHVuc2V0KF9mb3JtU3RhdGUuZGlydHlGaWVsZHMsIG5hbWUpO1xuICAgICAgICAgICAgICAgIF9mb3JtU3RhdGUuaXNEaXJ0eSA9IG9wdGlvbnMuZGVmYXVsdFZhbHVlXG4gICAgICAgICAgICAgICAgICAgID8gX2dldERpcnR5KG5hbWUsIGdldChfZGVmYXVsdFZhbHVlcywgbmFtZSkpXG4gICAgICAgICAgICAgICAgICAgIDogX2dldERpcnR5KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIW9wdGlvbnMua2VlcEVycm9yKSB7XG4gICAgICAgICAgICAgICAgdW5zZXQoX2Zvcm1TdGF0ZS5lcnJvcnMsIG5hbWUpO1xuICAgICAgICAgICAgICAgIF9wcm94eUZvcm1TdGF0ZS5pc1ZhbGlkICYmIF91cGRhdGVWYWxpZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3N1YmplY3RzLnN0YXRlLm5leHQoeyAuLi5fZm9ybVN0YXRlIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCBfcmVzZXQgPSAoZm9ybVZhbHVlcywga2VlcFN0YXRlT3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgICAgIGNvbnN0IHVwZGF0ZWRWYWx1ZXMgPSBmb3JtVmFsdWVzIHx8IF9kZWZhdWx0VmFsdWVzO1xuICAgICAgICBjb25zdCBjbG9uZVVwZGF0ZWRWYWx1ZXMgPSBjbG9uZU9iamVjdCh1cGRhdGVkVmFsdWVzKTtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gZm9ybVZhbHVlcyAmJiAhaXNFbXB0eU9iamVjdChmb3JtVmFsdWVzKVxuICAgICAgICAgICAgPyBjbG9uZVVwZGF0ZWRWYWx1ZXNcbiAgICAgICAgICAgIDogX2RlZmF1bHRWYWx1ZXM7XG4gICAgICAgIGlmICgha2VlcFN0YXRlT3B0aW9ucy5rZWVwRGVmYXVsdFZhbHVlcykge1xuICAgICAgICAgICAgX2RlZmF1bHRWYWx1ZXMgPSB1cGRhdGVkVmFsdWVzO1xuICAgICAgICB9XG4gICAgICAgIGlmICgha2VlcFN0YXRlT3B0aW9ucy5rZWVwVmFsdWVzKSB7XG4gICAgICAgICAgICBpZiAoa2VlcFN0YXRlT3B0aW9ucy5rZWVwRGlydHlWYWx1ZXMgfHwgc2hvdWxkQ2FwdHVyZURpcnR5RmllbGRzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgb2YgX25hbWVzLm1vdW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGdldChfZm9ybVN0YXRlLmRpcnR5RmllbGRzLCBmaWVsZE5hbWUpXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHNldCh2YWx1ZXMsIGZpZWxkTmFtZSwgZ2V0KF9mb3JtVmFsdWVzLCBmaWVsZE5hbWUpKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBzZXRWYWx1ZShmaWVsZE5hbWUsIGdldCh2YWx1ZXMsIGZpZWxkTmFtZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChpc1dlYiAmJiBpc1VuZGVmaW5lZChmb3JtVmFsdWVzKSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IG5hbWUgb2YgX25hbWVzLm1vdW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IGdldChfZmllbGRzLCBuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmaWVsZCAmJiBmaWVsZC5fZikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkUmVmZXJlbmNlID0gQXJyYXkuaXNBcnJheShmaWVsZC5fZi5yZWZzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGZpZWxkLl9mLnJlZnNbMF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBmaWVsZC5fZi5yZWY7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzSFRNTEVsZW1lbnQoZmllbGRSZWZlcmVuY2UpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZvcm0gPSBmaWVsZFJlZmVyZW5jZS5jbG9zZXN0KCdmb3JtJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmb3JtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtLnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfZmllbGRzID0ge307XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfZm9ybVZhbHVlcyA9IHByb3BzLnNob3VsZFVucmVnaXN0ZXJcbiAgICAgICAgICAgICAgICA/IGtlZXBTdGF0ZU9wdGlvbnMua2VlcERlZmF1bHRWYWx1ZXNcbiAgICAgICAgICAgICAgICAgICAgPyBjbG9uZU9iamVjdChfZGVmYXVsdFZhbHVlcylcbiAgICAgICAgICAgICAgICAgICAgOiB7fVxuICAgICAgICAgICAgICAgIDogY2xvbmVPYmplY3QodmFsdWVzKTtcbiAgICAgICAgICAgIF9zdWJqZWN0cy5hcnJheS5uZXh0KHtcbiAgICAgICAgICAgICAgICB2YWx1ZXM6IHsgLi4udmFsdWVzIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIF9zdWJqZWN0cy52YWx1ZXMubmV4dCh7XG4gICAgICAgICAgICAgICAgdmFsdWVzOiB7IC4uLnZhbHVlcyB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgX25hbWVzID0ge1xuICAgICAgICAgICAgbW91bnQ6IG5ldyBTZXQoKSxcbiAgICAgICAgICAgIHVuTW91bnQ6IG5ldyBTZXQoKSxcbiAgICAgICAgICAgIGFycmF5OiBuZXcgU2V0KCksXG4gICAgICAgICAgICB3YXRjaDogbmV3IFNldCgpLFxuICAgICAgICAgICAgd2F0Y2hBbGw6IGZhbHNlLFxuICAgICAgICAgICAgZm9jdXM6ICcnLFxuICAgICAgICB9O1xuICAgICAgICAhX3N0YXRlLm1vdW50ICYmIGZsdXNoUm9vdFJlbmRlcigpO1xuICAgICAgICBfc3RhdGUubW91bnQgPSAhX3Byb3h5Rm9ybVN0YXRlLmlzVmFsaWQgfHwgISFrZWVwU3RhdGVPcHRpb25zLmtlZXBJc1ZhbGlkO1xuICAgICAgICBfc3RhdGUud2F0Y2ggPSAhIXByb3BzLnNob3VsZFVucmVnaXN0ZXI7XG4gICAgICAgIF9zdWJqZWN0cy5zdGF0ZS5uZXh0KHtcbiAgICAgICAgICAgIHN1Ym1pdENvdW50OiBrZWVwU3RhdGVPcHRpb25zLmtlZXBTdWJtaXRDb3VudFxuICAgICAgICAgICAgICAgID8gX2Zvcm1TdGF0ZS5zdWJtaXRDb3VudFxuICAgICAgICAgICAgICAgIDogMCxcbiAgICAgICAgICAgIGlzRGlydHk6IGtlZXBTdGF0ZU9wdGlvbnMua2VlcERpcnR5XG4gICAgICAgICAgICAgICAgPyBfZm9ybVN0YXRlLmlzRGlydHlcbiAgICAgICAgICAgICAgICA6ICEhKGtlZXBTdGF0ZU9wdGlvbnMua2VlcERlZmF1bHRWYWx1ZXMgJiZcbiAgICAgICAgICAgICAgICAgICAgIWRlZXBFcXVhbChmb3JtVmFsdWVzLCBfZGVmYXVsdFZhbHVlcykpLFxuICAgICAgICAgICAgaXNTdWJtaXR0ZWQ6IGtlZXBTdGF0ZU9wdGlvbnMua2VlcElzU3VibWl0dGVkXG4gICAgICAgICAgICAgICAgPyBfZm9ybVN0YXRlLmlzU3VibWl0dGVkXG4gICAgICAgICAgICAgICAgOiBmYWxzZSxcbiAgICAgICAgICAgIGRpcnR5RmllbGRzOiBrZWVwU3RhdGVPcHRpb25zLmtlZXBEaXJ0eVZhbHVlc1xuICAgICAgICAgICAgICAgID8gX2Zvcm1TdGF0ZS5kaXJ0eUZpZWxkc1xuICAgICAgICAgICAgICAgIDoga2VlcFN0YXRlT3B0aW9ucy5rZWVwRGVmYXVsdFZhbHVlcyAmJiBmb3JtVmFsdWVzXG4gICAgICAgICAgICAgICAgICAgID8gZ2V0RGlydHlGaWVsZHMoX2RlZmF1bHRWYWx1ZXMsIGZvcm1WYWx1ZXMpXG4gICAgICAgICAgICAgICAgICAgIDoge30sXG4gICAgICAgICAgICB0b3VjaGVkRmllbGRzOiBrZWVwU3RhdGVPcHRpb25zLmtlZXBUb3VjaGVkXG4gICAgICAgICAgICAgICAgPyBfZm9ybVN0YXRlLnRvdWNoZWRGaWVsZHNcbiAgICAgICAgICAgICAgICA6IHt9LFxuICAgICAgICAgICAgZXJyb3JzOiBrZWVwU3RhdGVPcHRpb25zLmtlZXBFcnJvcnMgPyBfZm9ybVN0YXRlLmVycm9ycyA6IHt9LFxuICAgICAgICAgICAgaXNTdWJtaXR0aW5nOiBmYWxzZSxcbiAgICAgICAgICAgIGlzU3VibWl0U3VjY2Vzc2Z1bDogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgY29uc3QgcmVzZXQgPSAoZm9ybVZhbHVlcywga2VlcFN0YXRlT3B0aW9ucykgPT4gX3Jlc2V0KGlzRnVuY3Rpb24oZm9ybVZhbHVlcylcbiAgICAgICAgPyBmb3JtVmFsdWVzKF9mb3JtVmFsdWVzKVxuICAgICAgICA6IGZvcm1WYWx1ZXMsIGtlZXBTdGF0ZU9wdGlvbnMpO1xuICAgIGNvbnN0IHNldEZvY3VzID0gKG5hbWUsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICAgICAgICBjb25zdCBmaWVsZCA9IGdldChfZmllbGRzLCBuYW1lKTtcbiAgICAgICAgY29uc3QgZmllbGRSZWZlcmVuY2UgPSBmaWVsZCAmJiBmaWVsZC5fZjtcbiAgICAgICAgaWYgKGZpZWxkUmVmZXJlbmNlKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZFJlZiA9IGZpZWxkUmVmZXJlbmNlLnJlZnNcbiAgICAgICAgICAgICAgICA/IGZpZWxkUmVmZXJlbmNlLnJlZnNbMF1cbiAgICAgICAgICAgICAgICA6IGZpZWxkUmVmZXJlbmNlLnJlZjtcbiAgICAgICAgICAgIGlmIChmaWVsZFJlZi5mb2N1cykge1xuICAgICAgICAgICAgICAgIGZpZWxkUmVmLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5zaG91bGRTZWxlY3QgJiYgZmllbGRSZWYuc2VsZWN0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IF91cGRhdGVGb3JtU3RhdGUgPSAodXBkYXRlZEZvcm1TdGF0ZSkgPT4ge1xuICAgICAgICBfZm9ybVN0YXRlID0ge1xuICAgICAgICAgICAgLi4uX2Zvcm1TdGF0ZSxcbiAgICAgICAgICAgIC4uLnVwZGF0ZWRGb3JtU3RhdGUsXG4gICAgICAgIH07XG4gICAgfTtcbiAgICBjb25zdCBfcmVzZXREZWZhdWx0VmFsdWVzID0gKCkgPT4gaXNGdW5jdGlvbihfb3B0aW9ucy5kZWZhdWx0VmFsdWVzKSAmJlxuICAgICAgICBfb3B0aW9ucy5kZWZhdWx0VmFsdWVzKCkudGhlbigodmFsdWVzKSA9PiB7XG4gICAgICAgICAgICByZXNldCh2YWx1ZXMsIF9vcHRpb25zLnJlc2V0T3B0aW9ucyk7XG4gICAgICAgICAgICBfc3ViamVjdHMuc3RhdGUubmV4dCh7XG4gICAgICAgICAgICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBjb250cm9sOiB7XG4gICAgICAgICAgICByZWdpc3RlcixcbiAgICAgICAgICAgIHVucmVnaXN0ZXIsXG4gICAgICAgICAgICBnZXRGaWVsZFN0YXRlLFxuICAgICAgICAgICAgaGFuZGxlU3VibWl0LFxuICAgICAgICAgICAgc2V0RXJyb3IsXG4gICAgICAgICAgICBfZXhlY3V0ZVNjaGVtYSxcbiAgICAgICAgICAgIF9nZXRXYXRjaCxcbiAgICAgICAgICAgIF9nZXREaXJ0eSxcbiAgICAgICAgICAgIF91cGRhdGVWYWxpZCxcbiAgICAgICAgICAgIF9yZW1vdmVVbm1vdW50ZWQsXG4gICAgICAgICAgICBfdXBkYXRlRmllbGRBcnJheSxcbiAgICAgICAgICAgIF9nZXRGaWVsZEFycmF5LFxuICAgICAgICAgICAgX3Jlc2V0LFxuICAgICAgICAgICAgX3Jlc2V0RGVmYXVsdFZhbHVlcyxcbiAgICAgICAgICAgIF91cGRhdGVGb3JtU3RhdGUsXG4gICAgICAgICAgICBfc3ViamVjdHMsXG4gICAgICAgICAgICBfcHJveHlGb3JtU3RhdGUsXG4gICAgICAgICAgICBnZXQgX2ZpZWxkcygpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2ZpZWxkcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgX2Zvcm1WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9mb3JtVmFsdWVzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBfc3RhdGUoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9zdGF0ZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXQgX3N0YXRlKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgX3N0YXRlID0gdmFsdWU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IF9kZWZhdWx0VmFsdWVzKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfZGVmYXVsdFZhbHVlcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgX25hbWVzKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfbmFtZXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0IF9uYW1lcyh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIF9uYW1lcyA9IHZhbHVlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBfZm9ybVN0YXRlKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfZm9ybVN0YXRlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldCBfZm9ybVN0YXRlKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgX2Zvcm1TdGF0ZSA9IHZhbHVlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBfb3B0aW9ucygpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX29wdGlvbnM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0IF9vcHRpb25zKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgX29wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgIC4uLl9vcHRpb25zLFxuICAgICAgICAgICAgICAgICAgICAuLi52YWx1ZSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgdHJpZ2dlcixcbiAgICAgICAgcmVnaXN0ZXIsXG4gICAgICAgIGhhbmRsZVN1Ym1pdCxcbiAgICAgICAgd2F0Y2gsXG4gICAgICAgIHNldFZhbHVlLFxuICAgICAgICBnZXRWYWx1ZXMsXG4gICAgICAgIHJlc2V0LFxuICAgICAgICByZXNldEZpZWxkLFxuICAgICAgICBjbGVhckVycm9ycyxcbiAgICAgICAgdW5yZWdpc3RlcixcbiAgICAgICAgc2V0RXJyb3IsXG4gICAgICAgIHNldEZvY3VzLFxuICAgICAgICBnZXRGaWVsZFN0YXRlLFxuICAgIH07XG59XG5cbi8qKlxuICogQ3VzdG9tIGhvb2sgdG8gbWFuYWdlIHRoZSBlbnRpcmUgZm9ybS5cbiAqXG4gKiBAcmVtYXJrc1xuICogW0FQSV0oaHR0cHM6Ly9yZWFjdC1ob29rLWZvcm0uY29tL2RvY3MvdXNlZm9ybSkg4oCiIFtEZW1vXShodHRwczovL2NvZGVzYW5kYm94LmlvL3MvcmVhY3QtaG9vay1mb3JtLWdldC1zdGFydGVkLXRzLTVrc21tKSDigKIgW1ZpZGVvXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PVJrWHY0QVhYQ180KVxuICpcbiAqIEBwYXJhbSBwcm9wcyAtIGZvcm0gY29uZmlndXJhdGlvbiBhbmQgdmFsaWRhdGlvbiBwYXJhbWV0ZXJzLlxuICpcbiAqIEByZXR1cm5zIG1ldGhvZHMgLSBpbmRpdmlkdWFsIGZ1bmN0aW9ucyB0byBtYW5hZ2UgdGhlIGZvcm0gc3RhdGUuIHtAbGluayBVc2VGb3JtUmV0dXJufVxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c3hcbiAqIGZ1bmN0aW9uIEFwcCgpIHtcbiAqICAgY29uc3QgeyByZWdpc3RlciwgaGFuZGxlU3VibWl0LCB3YXRjaCwgZm9ybVN0YXRlOiB7IGVycm9ycyB9IH0gPSB1c2VGb3JtKCk7XG4gKiAgIGNvbnN0IG9uU3VibWl0ID0gZGF0YSA9PiBjb25zb2xlLmxvZyhkYXRhKTtcbiAqXG4gKiAgIGNvbnNvbGUubG9nKHdhdGNoKFwiZXhhbXBsZVwiKSk7XG4gKlxuICogICByZXR1cm4gKFxuICogICAgIDxmb3JtIG9uU3VibWl0PXtoYW5kbGVTdWJtaXQob25TdWJtaXQpfT5cbiAqICAgICAgIDxpbnB1dCBkZWZhdWx0VmFsdWU9XCJ0ZXN0XCIgey4uLnJlZ2lzdGVyKFwiZXhhbXBsZVwiKX0gLz5cbiAqICAgICAgIDxpbnB1dCB7Li4ucmVnaXN0ZXIoXCJleGFtcGxlUmVxdWlyZWRcIiwgeyByZXF1aXJlZDogdHJ1ZSB9KX0gLz5cbiAqICAgICAgIHtlcnJvcnMuZXhhbXBsZVJlcXVpcmVkICYmIDxzcGFuPlRoaXMgZmllbGQgaXMgcmVxdWlyZWQ8L3NwYW4+fVxuICogICAgICAgPGJ1dHRvbj5TdWJtaXQ8L2J1dHRvbj5cbiAqICAgICA8L2Zvcm0+XG4gKiAgICk7XG4gKiB9XG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gdXNlRm9ybShwcm9wcyA9IHt9KSB7XG4gICAgY29uc3QgX2Zvcm1Db250cm9sID0gUmVhY3QudXNlUmVmKCk7XG4gICAgY29uc3QgX3ZhbHVlcyA9IFJlYWN0LnVzZVJlZigpO1xuICAgIGNvbnN0IFtmb3JtU3RhdGUsIHVwZGF0ZUZvcm1TdGF0ZV0gPSBSZWFjdC51c2VTdGF0ZSh7XG4gICAgICAgIGlzRGlydHk6IGZhbHNlLFxuICAgICAgICBpc1ZhbGlkYXRpbmc6IGZhbHNlLFxuICAgICAgICBpc0xvYWRpbmc6IGlzRnVuY3Rpb24ocHJvcHMuZGVmYXVsdFZhbHVlcyksXG4gICAgICAgIGlzU3VibWl0dGVkOiBmYWxzZSxcbiAgICAgICAgaXNTdWJtaXR0aW5nOiBmYWxzZSxcbiAgICAgICAgaXNTdWJtaXRTdWNjZXNzZnVsOiBmYWxzZSxcbiAgICAgICAgaXNWYWxpZDogZmFsc2UsXG4gICAgICAgIHN1Ym1pdENvdW50OiAwLFxuICAgICAgICBkaXJ0eUZpZWxkczoge30sXG4gICAgICAgIHRvdWNoZWRGaWVsZHM6IHt9LFxuICAgICAgICBlcnJvcnM6IHt9LFxuICAgICAgICBkZWZhdWx0VmFsdWVzOiBpc0Z1bmN0aW9uKHByb3BzLmRlZmF1bHRWYWx1ZXMpXG4gICAgICAgICAgICA/IHVuZGVmaW5lZFxuICAgICAgICAgICAgOiBwcm9wcy5kZWZhdWx0VmFsdWVzLFxuICAgIH0pO1xuICAgIGlmICghX2Zvcm1Db250cm9sLmN1cnJlbnQpIHtcbiAgICAgICAgX2Zvcm1Db250cm9sLmN1cnJlbnQgPSB7XG4gICAgICAgICAgICAuLi5jcmVhdGVGb3JtQ29udHJvbChwcm9wcywgKCkgPT4gdXBkYXRlRm9ybVN0YXRlKChmb3JtU3RhdGUpID0+ICh7IC4uLmZvcm1TdGF0ZSB9KSkpLFxuICAgICAgICAgICAgZm9ybVN0YXRlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCBjb250cm9sID0gX2Zvcm1Db250cm9sLmN1cnJlbnQuY29udHJvbDtcbiAgICBjb250cm9sLl9vcHRpb25zID0gcHJvcHM7XG4gICAgdXNlU3Vic2NyaWJlKHtcbiAgICAgICAgc3ViamVjdDogY29udHJvbC5fc3ViamVjdHMuc3RhdGUsXG4gICAgICAgIG5leHQ6ICh2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgaWYgKHNob3VsZFJlbmRlckZvcm1TdGF0ZSh2YWx1ZSwgY29udHJvbC5fcHJveHlGb3JtU3RhdGUsIGNvbnRyb2wuX3VwZGF0ZUZvcm1TdGF0ZSwgdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVGb3JtU3RhdGUoeyAuLi5jb250cm9sLl9mb3JtU3RhdGUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKHByb3BzLnZhbHVlcyAmJiAhZGVlcEVxdWFsKHByb3BzLnZhbHVlcywgX3ZhbHVlcy5jdXJyZW50KSkge1xuICAgICAgICAgICAgY29udHJvbC5fcmVzZXQocHJvcHMudmFsdWVzLCBjb250cm9sLl9vcHRpb25zLnJlc2V0T3B0aW9ucyk7XG4gICAgICAgICAgICBfdmFsdWVzLmN1cnJlbnQgPSBwcm9wcy52YWx1ZXM7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb250cm9sLl9yZXNldERlZmF1bHRWYWx1ZXMoKTtcbiAgICAgICAgfVxuICAgIH0sIFtwcm9wcy52YWx1ZXMsIGNvbnRyb2xdKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoIWNvbnRyb2wuX3N0YXRlLm1vdW50KSB7XG4gICAgICAgICAgICBjb250cm9sLl91cGRhdGVWYWxpZCgpO1xuICAgICAgICAgICAgY29udHJvbC5fc3RhdGUubW91bnQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb250cm9sLl9zdGF0ZS53YXRjaCkge1xuICAgICAgICAgICAgY29udHJvbC5fc3RhdGUud2F0Y2ggPSBmYWxzZTtcbiAgICAgICAgICAgIGNvbnRyb2wuX3N1YmplY3RzLnN0YXRlLm5leHQoeyAuLi5jb250cm9sLl9mb3JtU3RhdGUgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29udHJvbC5fcmVtb3ZlVW5tb3VudGVkKCk7XG4gICAgfSk7XG4gICAgX2Zvcm1Db250cm9sLmN1cnJlbnQuZm9ybVN0YXRlID0gZ2V0UHJveHlGb3JtU3RhdGUoZm9ybVN0YXRlLCBjb250cm9sKTtcbiAgICByZXR1cm4gX2Zvcm1Db250cm9sLmN1cnJlbnQ7XG59XG5cbmV4cG9ydCB7IENvbnRyb2xsZXIsIEZvcm0sIEZvcm1Qcm92aWRlciwgYXBwZW5kRXJyb3JzLCBnZXQsIHNldCwgdXNlQ29udHJvbGxlciwgdXNlRmllbGRBcnJheSwgdXNlRm9ybSwgdXNlRm9ybUNvbnRleHQsIHVzZUZvcm1TdGF0ZSwgdXNlV2F0Y2ggfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmVzbS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-hook-form/dist/index.esm.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fjunhyeongpark%2FDocuments%2FGitHub%2Fjun-brro-blog%2Fsrc%2Fcomponents%2FContact%2FContactForm.js&modules=%2FUsers%2Fjunhyeongpark%2FDocuments%2FGitHub%2Fjun-brro-blog%2Fsrc%2Fcomponents%2FContact%2FLottieAnimation.js&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);