"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/getBlogsAndViews.js":
/*!***************************************!*\
  !*** ./src/utils/getBlogsAndViews.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBlogsAndViews: function() { return /* binding */ getBlogsAndViews; }\n/* harmony export */ });\n/* harmony import */ var contentlayer_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! contentlayer/generated */ \"(app-pages-browser)/./.contentlayer/generated/index.mjs\");\n/* harmony import */ var _server_supabaseClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../server/supabaseClient */ \"(app-pages-browser)/./src/server/supabaseClient.js\");\n\n\nconst getBlogsAndViews = async ()=>{\n    ;\n    // 모든 블로그 게시물 가져오기\n    const blogs = contentlayer_generated__WEBPACK_IMPORTED_MODULE_0__.allBlogs;\n    // Supabase에서 조회수 데이터 가져오기\n    const { data: views, error: viewsError } = await _server_supabaseClient__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"views\").select(\"*\");\n    if (viewsError) {\n        ;\n        return blogs; // 조회수를 가져오지 못한 경우, 원래의 블로그 목록 반환\n    }\n    // 조회수를 블로그와 매칭\n    const blogsWithViews = blogs.map((blog)=>{\n        const blogViews = views.find((view)=>view.slug === blog.slug);\n        return {\n            ...blog,\n            views: blogViews ? blogViews.count : 0\n        };\n    });\n    // 조회수를 기준으로 내림차순 정렬\n    const sortedByViews = blogsWithViews.sort((a, b)=>b.views - a.views);\n    ;\n    return sortedByViews;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9nZXRCbG9nc0FuZFZpZXdzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrRDtBQUNGO0FBRXpDLE1BQU1FLG1CQUFtQjs7SUFHOUIsa0JBQWtCO0lBQ2xCLE1BQU1DLFFBQVFILDREQUFRQTtJQUV0QiwwQkFBMEI7SUFDMUIsTUFBTSxFQUFFSSxNQUFNQyxLQUFLLEVBQUVDLE9BQU9DLFVBQVUsRUFBRSxHQUFHLE1BQU1OLDhEQUFRQSxDQUN0RE8sSUFBSSxDQUFDLFNBQ0xDLE1BQU0sQ0FBQztJQUVWLElBQUlGLFlBQVk7O1FBRWQsT0FBT0osT0FBTyxpQ0FBaUM7SUFDakQ7SUFFQSxlQUFlO0lBQ2YsTUFBTU8saUJBQWlCUCxNQUFNUSxHQUFHLENBQUMsQ0FBQ0M7UUFDaEMsTUFBTUMsWUFBWVIsTUFBTVMsSUFBSSxDQUFDLENBQUNDLE9BQVNBLEtBQUtDLElBQUksS0FBS0osS0FBS0ksSUFBSTtRQUM5RCxPQUFPO1lBQ0wsR0FBR0osSUFBSTtZQUNQUCxPQUFPUSxZQUFZQSxVQUFVSSxLQUFLLEdBQUc7UUFDdkM7SUFDRjtJQUVBLG9CQUFvQjtJQUNwQixNQUFNQyxnQkFBZ0JSLGVBQWVTLElBQUksQ0FBQyxDQUFDQyxHQUFHQyxJQUFNQSxFQUFFaEIsS0FBSyxHQUFHZSxFQUFFZixLQUFLOztJQUtyRSxPQUFPYTtBQUNULEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3V0aWxzL2dldEJsb2dzQW5kVmlld3MuanM/ZWZhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhbGxCbG9ncyB9IGZyb20gXCJjb250ZW50bGF5ZXIvZ2VuZXJhdGVkXCI7XG5pbXBvcnQgc3VwYWJhc2UgZnJvbSBcIi4uL3NlcnZlci9zdXBhYmFzZUNsaWVudFwiO1xuXG5leHBvcnQgY29uc3QgZ2V0QmxvZ3NBbmRWaWV3cyA9IGFzeW5jICgpID0+IHtcbiAgY29uc29sZS5sb2coXCJnZXRCbG9nc0FuZFZpZXdzIGNhbGxlZFwiKTtcblxuICAvLyDrqqjrk6Ag67iU66Gc6re4IOqyjOyLnOusvCDqsIDsoLjsmKTquLBcbiAgY29uc3QgYmxvZ3MgPSBhbGxCbG9ncztcblxuICAvLyBTdXBhYmFzZeyXkOyEnCDsobDtmozsiJgg642w7J207YSwIOqwgOyguOyYpOq4sFxuICBjb25zdCB7IGRhdGE6IHZpZXdzLCBlcnJvcjogdmlld3NFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAuZnJvbShcInZpZXdzXCIpXG4gICAgLnNlbGVjdChcIipcIik7XG5cbiAgaWYgKHZpZXdzRXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgdmlld3M6XCIsIHZpZXdzRXJyb3IpO1xuICAgIHJldHVybiBibG9nczsgLy8g7KGw7ZqM7IiY66W8IOqwgOyguOyYpOyngCDrqrvtlZwg6rK97JqwLCDsm5DrnpjsnZgg67iU66Gc6re4IOuqqeuhnSDrsJjtmZhcbiAgfVxuXG4gIC8vIOyhsO2ajOyImOulvCDruJTroZzqt7jsmYAg66ek7LmtXG4gIGNvbnN0IGJsb2dzV2l0aFZpZXdzID0gYmxvZ3MubWFwKChibG9nKSA9PiB7XG4gICAgY29uc3QgYmxvZ1ZpZXdzID0gdmlld3MuZmluZCgodmlldykgPT4gdmlldy5zbHVnID09PSBibG9nLnNsdWcpO1xuICAgIHJldHVybiB7XG4gICAgICAuLi5ibG9nLFxuICAgICAgdmlld3M6IGJsb2dWaWV3cyA/IGJsb2dWaWV3cy5jb3VudCA6IDAsXG4gICAgfTtcbiAgfSk7XG5cbiAgLy8g7KGw7ZqM7IiY66W8IOq4sOykgOycvOuhnCDrgrTrprzssKjsiJwg7KCV66CsXG4gIGNvbnN0IHNvcnRlZEJ5Vmlld3MgPSBibG9nc1dpdGhWaWV3cy5zb3J0KChhLCBiKSA9PiBiLnZpZXdzIC0gYS52aWV3cyk7XG5cbiAgLy8g7KCV66Cs65CcIOqysOqzvCDroZzqt7gg7Lac66ClXG4gIGNvbnNvbGUubG9nKFwiU29ydGVkIGJsb2dzIGJ5IHZpZXdzOlwiLCBzb3J0ZWRCeVZpZXdzKTtcblxuICByZXR1cm4gc29ydGVkQnlWaWV3cztcbn07XG4iXSwibmFtZXMiOlsiYWxsQmxvZ3MiLCJzdXBhYmFzZSIsImdldEJsb2dzQW5kVmlld3MiLCJibG9ncyIsImRhdGEiLCJ2aWV3cyIsImVycm9yIiwidmlld3NFcnJvciIsImZyb20iLCJzZWxlY3QiLCJibG9nc1dpdGhWaWV3cyIsIm1hcCIsImJsb2ciLCJibG9nVmlld3MiLCJmaW5kIiwidmlldyIsInNsdWciLCJjb3VudCIsInNvcnRlZEJ5Vmlld3MiLCJzb3J0IiwiYSIsImIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/getBlogsAndViews.js\n"));

/***/ })

});